{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/AnimatedVector.js","lib/sort.js","components/SortPage.js","lib/drawing.js","lib/AnimatedGrid.js","lib/maze.js","components/MazePage.js","utility.js","models/CubeModel.js","scenes/CubeScene.js","models/LightedCubeModel.js","scenes/LightedCubeScene.js","components/SortPage3D.js","scenes/MazeScene.js","models/MazeModel.js","models/MazeModelPerPixel.js","components/MazePage3D.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","inner","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","AnimatedVector","data","frameRate","queue","getData","initialize","update","animate","timeStamp","_clone","change","elapsed","length","updates","shift","i","animating","items","map","item","shuffle","j","Math","floor","random","_swap","reverse","n","bubbleSort","count","insertionSort","key","mergeSortInPlace","merge","start","mid","end","start2","value","index","sort","l","r","m","mergeSort","aux","size","n1","n2","k","quickSort","partition","low","high","pivot","a","async","t","SortPage","running","rendering","vector","run","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortInPlaceAction","mergeSortAction","quickSortAction","renderCanvas","frame","window","requestAnimationFrame","cancelAnimationFrame","routine","canvas","rect","getBoundingClientRect","w","width","h","height","devicePixelRatio","step","barWidth","ctx","getContext","clearRect","fillStyle","barHeight","fillRect","drawBars","row","disabled","ref","elem","AnimatedGrid","directions","y","windiness","createMaze","_reset","_createMaze","_carve","createDungeon","regions","region","carveRegion","pos","my","mx","fill","incrementRegion","numRoomTries","roomExtraSize","rooms","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","_addRooms","connectors","connectedRegions","dir","merged","openRegions","connector","dest","sources","slice","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","lastDir","carve","cells","cell","posCells","_canCarve","c1","_addDir","c2","pop","_isInBounds","nxt","len","min","max","pri","sec","MazePage","grid","onClickCreateMaze","onClickCreateDungeon","onResize","screenWidth","screen","screenHeight","addEventListener","removeEventListener","colors","xstep","ystep","drawGrid","col1","col2","degreesToRadians","degrees","PI","initShaderProgram","gl","vsSource","fsSource","vertexShader","_loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","CubeModel","draw","_initShaders","model","program","attribLocations","vertexPosition","getAttribLocation","vertexColor","vertexNormal","uniformLocations","projectionMatrix","getUniformLocation","modelViewMatrix","normalMatrix","position","buffers","_initBuffers","viewMatrix","modelMatrix","FLOAT","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","normal","ELEMENT_ARRAY_BUFFER","indices","mat4","useProgram","uniformMatrix4fv","uniform3f","UNSIGNED_SHORT","drawElements","TRIANGLES","positionBuffer","createBuffer","bufferData","Float32Array","STATIC_DRAW","normalBuffer","faceColors","c","concat","colorBuffer","indexBuffer","Uint16Array","CubeScene","totalTime","initScene","drawScene","scene","actors","camera","cameraAngle","location","scale","rotations","angle","deltaTime","fieldOfView","aspect","clientWidth","clientHeight","actor","_renderActor","_animateActor","rotation","LightedCubeModel","light1","light2","LightedCubeScene","SortPage3D","scenes","sceneIndex","onClickCanvas","CULL_FACE","cullFace","BACK","MazeScene","MazeModel","animateScene","totalDelta","maze","axis","speed","_freeBuffers","vertexCount","positions","offset","addSquareXY","left","right","top","bottom","base","addSquareXZ","addSquareYZ","floorColor","ceilingColor","wallColor_Top","wallColor_Bottom","wallColor_Left","wallColor_Right","ofs_x","ofs_y","deleteBuffer","normals","floorNormal","ceilingNormal","wallNormal_Top","wallNormal_Bottom","wallNormal_Left","wallNormal_Right","MazePage3D","MazeModelPerPixel","event","console","log","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAmBeA,EAjBC,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,UAAWC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAWC,EAAiB,+EACpFC,EAAU,GAShB,OARKN,IACDM,EAAQC,KAAK,WACTL,EAAOI,EAAQC,KAAK,iBACfJ,EAAOG,EAAQC,KAAK,iBACpBN,GAAMK,EAAQC,KAAK,gBACxBH,GAAQE,EAAQC,KAAK,mBAEzBR,GAAWO,EAAQC,KAAKR,GAExB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAClCP,ICNEW,EANG,SAAC,GAAmD,IAAjDX,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAWW,EAA2B,EAA3BA,MAAUL,EAAiB,gDAC3DC,EAAU,CAACI,EAAQ,kBAAoB,aAE7C,OADIX,GAAWO,EAAQC,KAAKR,GACpB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,ICGjDa,EANH,SAAC,GAA4C,IAA1Cb,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAcM,EAAiB,wCAC9CC,EAAU,CAAC,OAEjB,OADIP,GAAWO,EAAQC,KAAKR,GACpB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,ICGjDc,EANH,SAAC,GAAiD,IAA/Cd,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,UAAWc,EAAyB,EAAzBA,IAAQR,EAAiB,8CACnDC,EAAU,CAACO,EAAOC,MAAMC,QAAQF,GAAQA,EAAIG,QAAO,SAACC,GAAD,OAAQA,EAAKA,GAAK,QAAUJ,EAAQI,EAAI,OAASJ,SAAOK,GAAe,OAASL,EAAS,OAElJ,OADId,GAAWO,EAAQC,KAAKR,GACpB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,I,QCyCjDqB,EANA,SAAC,GAAoD,IAAlDrB,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,UAAWqB,EAA4B,EAA5BA,OAAWf,EAAiB,iDACzDC,EAtCY,SAACc,GACdL,kBAAQK,KACTA,EAASA,EAAOC,MAAM,MAG1B,IAAMC,EAAUF,EAAOG,SAAS,WAC1BC,EAAYJ,EAAOG,SAAS,aAC5BE,EAAUL,EAAOG,SAAS,WAC1BG,EAASN,EAAOG,SAAS,UACzBI,EAAUP,EAAOG,SAAS,WAC1BK,EAAOR,EAAOG,SAAS,QACvBM,EAAQT,EAAOG,SAAS,SACxBO,EAAOV,EAAOG,SAAS,QACvBQ,EAAOX,EAAOG,SAAS,QACvBS,EAAUZ,EAAOG,SAAS,WAC1BU,EAAQb,EAAOG,SAAS,SACxBW,EAAQd,EAAOG,SAAS,SACxBY,EAAQf,EAAOG,SAAS,SAExBjB,EAAU,CAAC,OAejB,OAdIgB,EAASU,EAAU1B,EAAQC,KAAK,uBAAyBD,EAAQC,KAAK,eACjEiB,EAAWQ,EAAU1B,EAAQC,KAAK,yBAA2BD,EAAQC,KAAK,iBAC1EkB,EAASO,EAAU1B,EAAQC,KAAK,uBAAyBD,EAAQC,KAAK,eACtEmB,EAAQM,EAAU1B,EAAQC,KAAK,sBAAwBD,EAAQC,KAAK,cACpEoB,EAASK,EAAU1B,EAAQC,KAAK,uBAAyBD,EAAQC,KAAK,eACtEqB,EAAMI,EAAU1B,EAAQC,KAAK,oBAAsBD,EAAQC,KAAK,YAChEsB,EAAOG,EAAU1B,EAAQC,KAAK,qBAAuBD,EAAQC,KAAK,aAClEuB,EAAME,EAAU1B,EAAQC,KAAK,oBAAsBD,EAAQC,KAAK,YAChEwB,EAAMC,EAAU1B,EAAQC,KAAK,oBAAsBD,EAAQC,KAAK,YACpEyB,EAAU1B,EAAQC,KAAK,uBAAyBD,EAAQC,KAAK,eAC9D0B,GAAO3B,EAAQC,KAAK,UACpB2B,GAAO5B,EAAQC,KAAK,UACpB4B,GAAO7B,EAAQC,KAAK,aAEjBD,EAIS8B,CAAchB,GAE9B,OADIrB,GAAWO,EAAQC,KAAKR,GACpB,0CAAQA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,ICjBpDuC,EAxBA,SAAC,GAAyJ,IAAvJvC,EAAsJ,EAAtJA,SAAUC,EAA4I,EAA5IA,UAAWuC,EAAiI,EAAjIA,SAAUJ,EAAuH,EAAvHA,MAAOK,EAAgH,EAAhHA,OAAQN,EAAwG,EAAxGA,MAAOO,EAAiG,EAAjGA,WAAYlB,EAAqF,EAArFA,QAASE,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASzB,EAAiB,kKAC9JC,EAAU,CAAC,UAoBjB,OAnBKgC,IACGJ,EAAO5B,EAAQC,KAAK,oBACfgC,EAAQjC,EAAQC,KAAK,oBACrB0B,EAAO3B,EAAQC,KAAK,oBACpBiC,EAAYlC,EAAQC,KAAK,oBAC7BD,EAAQC,KAAK,qBAElBe,EAAShB,EAAQC,KAAK,kBACjBiB,EAAWlB,EAAQC,KAAK,oBACxBkB,EAASnB,EAAQC,KAAK,kBACtBmB,EAAQpB,EAAQC,KAAK,iBACrBoB,EAASrB,EAAQC,KAAK,kBACtBqB,EAAMtB,EAAQC,KAAK,eACnBsB,EAAOvB,EAAQC,KAAK,gBACpBuB,GAAMxB,EAAQC,KAAK,eACxBsB,EAAOvB,EAAQC,KAAK,YACfuB,EAAMxB,EAAQC,KAAK,WACvBD,EAAQC,KAAK,YACdR,GAAWO,EAAQC,KAAKR,GACpB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,ICRjD2C,EAbO,SAAC,GAAsC,IAApC3C,EAAmC,EAAnCA,SAAU4C,EAAyB,EAAzBA,SAAaC,EAAY,uCACxD,OACI,kBAAC,IAAMC,SAAP,KACI,0CAAQ7C,UAAU,iBAAiB8C,KAAK,SAASC,gBAAeJ,EAAUK,aAAW,qBAAwBJ,GACzG,0BAAM5C,UAAU,yBAEpB,yBAAKA,UAAW,4BAA8B2C,EAAW,QAAU,KAC9D5C,KCDFkD,EANG,SAAC,GAA4C,IAA1ClD,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAcM,EAAiB,wCACpDC,EAAU,CAAC,cAEjB,OADIP,GAAWO,EAAQC,KAAKR,GACpB,uCAAKA,UAAWO,EAAQE,KAAK,MAAUH,GAAaP,ICgCjDmD,E,YAhCX,WAAYN,GAAQ,IAAD,8BACf,4CAAMA,KACDO,MAAQ,CACTR,UAAU,GAEd,EAAKS,cAAgB,EAAKA,cAAcC,KAAnB,gBALN,E,6EASfC,KAAKC,SAAS,CACVZ,UAAWW,KAAKH,MAAMR,a,+BAK1B,OACI,kBAAC,EAAD,CAAQT,OAAK,EAACH,MAAI,GACd,kBAAC,IAAD,CAAMyB,GAAG,IAAIxD,UAAU,gBAAe,2CACtC,kBAAC,EAAD,CAAe2C,SAAUW,KAAKH,MAAMR,SAAUc,QAASH,KAAKF,eACxD,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAMI,GAAG,IAAIxD,UAAU,YAAvB,QACA,kBAAC,IAAD,CAAMwD,GAAG,QAAQxD,UAAU,YAA3B,QACA,kBAAC,IAAD,CAAMwD,GAAG,QAAQxD,UAAU,YAA3B,QACA,kBAAC,IAAD,CAAMwD,GAAG,UAAUxD,UAAU,YAA7B,WACA,kBAAC,IAAD,CAAMwD,GAAG,UAAUxD,UAAU,YAA7B,kB,GAzBC0D,IAAMC,WCchBC,EAhBE,WAWf,OACE,yBAAKC,MAAO,CAAEC,MAAO,UAAW,8BAXxB,oQ,QC6EGC,E,WAzEb,WAAYC,EAAMC,GAAY,oBAC5BX,KAAKU,KAAOA,EACZV,KAAKW,UAAYA,EACjBX,KAAKY,MAAQ,GACbZ,KAAKa,QAAUb,KAAKa,QAAQd,KAAKC,MACjCA,KAAKc,WAAad,KAAKc,WAAWf,KAAKC,MACvCA,KAAKe,OAASf,KAAKe,OAAOhB,KAAKC,MAC/BA,KAAKgB,QAAUhB,KAAKgB,QAAQjB,KAAKC,M,sDAQjC,OAAOA,KAAKU,O,iCAOHA,GACTV,KAAKiB,eAAYpD,EACb6C,IACFV,KAAKU,KAAOV,KAAKkB,OAAOR,M,6BAQrBS,GACLnB,KAAKY,MAAM1D,KAAKiE,K,8BAcVF,GACDjB,KAAKiB,YACRjB,KAAKiB,UAAYA,GAEnB,IAAIG,EAAUH,EAAYjB,KAAKiB,UAE/B,IADAjB,KAAKiB,UAAYA,EACVjB,KAAKY,MAAMS,OAAS,GAAKD,GAAWpB,KAAKW,WAAW,CACzDS,GAAWpB,KAAKW,UAEhB,IADA,IAAMW,EAAUtB,KAAKY,MAAMW,QAClBC,EAAI,EAAGA,EAAIF,EAAQD,OAAQG,GAAK,EACvCxB,KAAKU,KAAKY,EAAQE,IAAMF,EAAQE,EAAI,GAIxC,OADAxB,KAAKiB,WAAaG,EACX,CACLK,UAAiC,IAAtBzB,KAAKY,MAAMS,OACtBX,KAAMV,KAAKU,Q,6BAIRgB,GAAQ,IAAD,OACZ,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAInE,MAAMC,QAAQkE,GAAQ,EAAKV,OAAOU,GAAQA,S,sBC5EhE,SAASC,EAAQnB,EAAMI,EAAYC,GACxCD,IAEA,IADA,IACSU,EADCd,EAAKW,OACE,EAAGG,EAAI,EAAGA,IAAK,CAC9B,IAAMM,EAAIC,KAAKC,MAAMD,KAAKE,UAAYT,EAAI,IAC1CU,EAAMxB,EAAMc,EAAGM,GACff,EAAO,CAACS,EAAGd,EAAKc,GAAIM,EAAGpB,EAAKoB,MAIzB,SAASK,EAAQzB,EAAMI,EAAYC,GACxCD,IAEA,IADA,IAAMsB,EAAI1B,EAAKW,OACNG,EAAI,EAAGA,EAAIY,EAAI,EAAGZ,IAAK,CAC9B,IAAMM,EAAIM,EAAIZ,EAAI,EAClBU,EAAMxB,EAAMc,EAAGM,GACff,EAAO,CAACS,EAAGd,EAAKc,GAAIM,EAAGpB,EAAKoB,MAIzB,SAASO,EAAW3B,EAAMI,EAAYC,GAC3CD,IAEA,IADA,IAAMsB,EAAI1B,EAAKW,OAAS,EACfG,EAAI,EAAGA,EAAIY,EAAGZ,IAAK,CAE1B,IADA,IAAIc,EAAQ,EACHR,EAAI,EAAGA,EAAIM,EAAIZ,EAAGM,IACrBpB,EAAKoB,GAAKpB,EAAKoB,EAAI,KACrBI,EAAMxB,EAAMoB,EAAGA,EAAI,GACnBf,EAAO,CAACe,EAAGpB,EAAKoB,GAAIA,EAAI,EAAGpB,EAAKoB,EAAI,KACpCQ,KAGJ,GAAc,IAAVA,EACF,OAKC,SAASC,EAAc7B,EAAMI,EAAYC,GAC9CD,IAEA,IADA,IAAMsB,EAAI1B,EAAKW,OACNG,EAAI,EAAGA,EAAIY,EAAGZ,IAAK,CAG1B,IAFA,IAAMgB,EAAM9B,EAAKc,GACbM,EAAIN,EAAI,EACLM,GAAK,GAAKpB,EAAKoB,GAAKU,GACzB9B,EAAKoB,EAAI,GAAKpB,EAAKoB,GACnBf,EAAO,CAACe,EAAI,EAAGpB,EAAKoB,EAAI,KACxBA,GAAQ,EAEVpB,EAAKoB,EAAI,GAAKU,EACdzB,EAAO,CAACe,EAAI,EAAGpB,EAAKoB,EAAI,MAIrB,SAASW,EAAiB/B,EAAMI,EAAYC,GACjDD,IACA,IAQM4B,EAAQ,SAAChC,EAAMiC,EAAOC,EAAKC,GAC/B,KAAInC,EAAKkC,GAAOlC,EAAKkC,EAAM,IAI3B,IADA,IAAIE,EAASF,EAAM,EACZD,GAASC,GAAOE,GAAUD,GAC/B,GAAInC,EAAKiC,IAAUjC,EAAKoC,GACtBH,QAEG,CAGH,IAFA,IAAMI,EAAQrC,EAAKoC,GACfE,EAAQF,EACLE,IAAUL,GACfjC,EAAKsC,GAAStC,EAAKsC,EAAQ,GAC3BjC,EAAO,CAACiC,EAAOtC,EAAKsC,KACpBA,IAEFtC,EAAKiC,GAASI,EACdhC,EAAO,CAAC4B,EAAOjC,EAAKiC,KACpBA,IACAC,IACAE,OA7BO,SAAPG,EAAQvC,EAAMwC,EAAGC,GACrB,GAAID,EAAIC,EAAG,CACT,IAAMC,EAAIrB,KAAKC,MAAMkB,GAAKC,EAAID,GAAK,GACnCD,EAAKvC,EAAMwC,EAAGE,GACdH,EAAKvC,EAAM0C,EAAI,EAAGD,GAClBT,EAAMhC,EAAMwC,EAAGE,EAAGD,IA4BtBF,CAAKvC,EAAM,EAAGA,EAAKW,OAAS,GAGvB,SAASgC,EAAU3C,EAAMI,EAAYC,GAC1CD,IACA,IAAMwC,EAAM,IAAI7F,MAAMiD,EAAK6C,MASrBb,EAAQ,SAAChC,EAAMiC,EAAOC,EAAKC,GAC/B,KAAInC,EAAKkC,GAAOlC,EAAKkC,EAAM,IAA3B,CAIA,IADA,IAAMR,EAAIS,EAAMF,EAAQ,EACfnB,EAAI,EAAGA,EAAIY,EAAGZ,IACrB8B,EAAI9B,GAAKd,EAAKc,EAAImB,GAOpB,IALA,IAAMa,EAAKZ,EAAMD,EAAQ,EACnBc,EAAKZ,EAAMF,EAAQ,EACrBnB,EAAI,EACJM,EAAI0B,EACJE,EAAIf,EACDnB,EAAIgC,GAAM1B,EAAI2B,GACfH,EAAI9B,IAAM8B,EAAIxB,IAChBpB,EAAKgD,GAAKJ,EAAI9B,GACdT,EAAO,CAAC2C,EAAGhD,EAAKgD,KAChBlC,MAGAd,EAAKgD,GAAKJ,EAAIxB,GACdf,EAAO,CAAC2C,EAAGhD,EAAKgD,KAChB5B,KAEF4B,IAEF,KAAOlC,EAAIgC,GACT9C,EAAKgD,GAAKJ,EAAI9B,GACdT,EAAO,CAAC2C,EAAGhD,EAAKgD,KAChBlC,IACAkC,IAEF,KAAO5B,EAAI2B,GACT/C,EAAKgD,GAAKJ,EAAIxB,GACdf,EAAO,CAAC2C,EAAGhD,EAAKgD,KAChB5B,IACA4B,OA5CS,SAAPT,EAAQvC,EAAMwC,EAAGC,GACrB,GAAID,EAAIC,EAAG,CACT,IAAMC,EAAIrB,KAAKC,MAAMkB,GAAKC,EAAID,GAAK,GACnCD,EAAKvC,EAAMwC,EAAGE,GACdH,EAAKvC,EAAM0C,EAAI,EAAGD,GAClBT,EAAMhC,EAAMwC,EAAGE,EAAGD,IA0CtBF,CAAKvC,EAAM,EAAGA,EAAKW,OAAS,GAGvB,SAASsC,EAAUjD,EAAMI,EAAYC,GAC1CD,IACA,IAAM8C,EAAY,SAAClD,EAAMmD,EAAKC,GAC5B,GAAIA,EAAOD,EAAM,EAAG,CAClB,IAAMjB,EAAMb,KAAKC,MAAM6B,GAAOC,EAAOD,GAAO,GACxCnD,EAAKmD,GAAOnD,EAAKkC,IAAQlC,EAAKkC,GAAOlC,EAAKoD,IAC5C5B,EAAMxB,EAAMkC,EAAKkB,GACjB/C,EAAO,CAAC6B,EAAKlC,EAAKkC,GAAMkB,EAAMpD,EAAKoD,MAE5BpD,EAAKmD,GAAOnD,EAAKkC,IAAQlC,EAAKkC,GAAOlC,EAAKoD,KACjD5B,EAAMxB,EAAMkC,EAAKkB,GACjB/C,EAAO,CAAC6B,EAAKlC,EAAKkC,GAAMkB,EAAMpD,EAAKoD,MAKvC,IAFA,IAAMC,EAAQrD,EAAKoD,GACftC,EAAKqC,EAAM,EACN/B,EAAI+B,EAAK/B,GAAKgC,EAAO,EAAGhC,IAC3BpB,EAAKoB,GAAKiC,IAEZ7B,EAAMxB,IADNc,EACeM,GACff,EAAO,CAACS,EAAGd,EAAKc,GAAIM,EAAGpB,EAAKoB,MAKhC,OAFAI,EAAMxB,EAAMc,EAAI,EAAGsC,GACnB/C,EAAO,CAACS,EAAI,EAAGd,EAAKc,EAAI,GAAIsC,EAAMpD,EAAKoD,KAC/BtC,EAAI,IAED,SAAPyB,EAAcvC,EAAMmD,EAAKC,GAAlB,eAAAE,EAAAC,OAAA,gDACPJ,EAAMC,IACFlB,EAAMgB,EAAUlD,EAAMmD,EAAKC,GACjCb,EAAKvC,EAAMmD,EAAKjB,EAAM,GACtBK,EAAKvC,EAAMkC,EAAM,EAAGkB,IAJX,qCAObb,CAAKvC,EAAM,EAAGA,EAAKW,OAAS,GAG9B,SAASa,EAAMxB,EAAMc,EAAGM,GACtB,IAAMoC,EAAIxD,EAAKc,GACfd,EAAKc,GAAKd,EAAKoB,GACfpB,EAAKoB,GAAKoC,E,IChFGC,E,YAlGb,WAAY7E,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IADA,IAAMoB,EAAO,GACJc,EAAI,EAAGA,EAAI,IAAKA,IACvBd,EAAKxD,KAAKsE,GAJK,OAMjB,EAAK3B,MAAQ,CACXuE,SAAS,EACTC,WAAW,GAGb,EAAKC,OAAS,IAAI7D,EAAeC,EAAM,GAEvC,EAAK6D,IAAM,EAAKA,IAAIxE,KAAT,gBACX,EAAKyE,cAAgB,EAAKA,cAAczE,KAAnB,gBACrB,EAAK0E,cAAgB,EAAKA,cAAc1E,KAAnB,gBACrB,EAAK2E,iBAAmB,EAAKA,iBAAiB3E,KAAtB,gBACxB,EAAK4E,oBAAsB,EAAKA,oBAAoB5E,KAAzB,gBAC3B,EAAK6E,uBAAyB,EAAKA,uBAAuB7E,KAA5B,gBAC9B,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBACvB,EAAK+E,gBAAkB,EAAKA,gBAAgB/E,KAArB,gBACvB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBArBH,E,iFAyBjBC,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,6CAI/CE,OAAOE,qBAAqBnF,KAAKgF,S,0BAG/BI,GAAU,IAAD,OACXpF,KAAKC,SAAS,CAAEmE,SAAS,EAAMC,WAAW,IAAQ,WAChDe,EAAQ,YAAI,EAAKd,OAAOzD,WAAY,EAAKyD,OAAOxD,WAAY,EAAKwD,OAAOvD,QACxE,EAAKd,SAAS,CAAEmE,SAAS,S,sCAK3BpE,KAAKuE,IAAI1C,K,sCAIT7B,KAAKuE,IAAIpC,K,yCAITnC,KAAKuE,IAAIlC,K,4CAITrC,KAAKuE,IAAIhC,K,+CAITvC,KAAKuE,IAAI9B,K,wCAITzC,KAAKuE,IAAIlB,K,wCAITrD,KAAKuE,IAAIZ,K,mCAGE1C,GAAY,IAAD,EACMjB,KAAKsE,OAAOtD,QAAQC,GAAxCQ,EADc,EACdA,UAAWf,EADG,EACHA,KACde,GAAczB,KAAKH,MAAMuE,SAC5BpE,KAAKC,SAAS,CAAEoE,WAAW,IC7E1B,SAAkBgB,EAAQ3E,GAC/B,IAAM0B,EAAI1B,EAAKW,OACTiE,EAAOD,EAAOE,wBACdC,EAAIF,EAAKG,MACTC,EAAIJ,EAAKK,OACTxC,EAAI8B,OAAOW,iBACjBP,EAAOI,MAAQD,EAAIrC,EACnBkC,EAAOM,OAASD,EAAIvC,EACpB,IAAM0C,EAA2B,GAApB9D,KAAKC,MAAMwD,EAAIpD,GACtB0D,EAAW/D,KAAKC,MAAa,GAAP6D,GACtBE,EAAMV,EAAOW,WAAW,MAC9BD,EAAIE,UAAU,EAAG,EAAGT,EAAGE,GACvBK,EAAIG,UAAY,QAChB,IAAK,IAAI1E,EAAI,EAAGA,EAAIY,EAAGZ,IAAK,CAC1B,IAAM2E,EAAYpE,KAAKC,OAAOtB,EAAKc,GAAK,GAAK,IAAM,GAAKkE,GACxDK,EAAIK,SAAS,IAAMZ,EAAIhE,EAAIqE,EAAM,GAAKH,EAAIS,EAAWL,EAAUK,IDgE/DE,CAASrG,KAAKqF,OAAQ3E,GACtBV,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,+BAGvC,IAAD,OACP,OACE,kBAAC,EAAD,CAASjI,OAAK,GACZ,kBAAC,EAAD,CAAWO,OAAK,EAACX,UAAU,QACzB,kBAAC,EAAD,CAAK4J,IAAI,MACP,kBAAC,EAAD,CAAK9I,IAAI,KAAKd,UAAU,oDACtB,kBAAC,EAAD,CAAQqB,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAKwE,eAA7F,WACA,kBAAC,EAAD,CAAQzG,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAKyE,eAA7F,WACA,kBAAC,EAAD,CAAQ1G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK0E,kBAA7F,eACA,kBAAC,EAAD,CAAQ3G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK2E,qBAA7F,kBACA,kBAAC,EAAD,CAAQ5G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK4E,wBAA7F,yBACA,kBAAC,EAAD,CAAQ7G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK6E,iBAA7F,cACA,kBAAC,EAAD,CAAQ9G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK8E,iBAA7F,iBAIN,4BAAQpI,UAAU,cAAc8J,IAAK,SAAAC,GAAI,OAAI,EAAKpB,OAASoB,U,GA7F5CrG,IAAMC,WE0EdqG,E,WAzEb,WAAYhG,EAAMC,GAAY,oBAC5BX,KAAKU,KAAOA,EACZV,KAAKW,UAAYA,EACjBX,KAAKY,MAAQ,GACbZ,KAAKa,QAAUb,KAAKa,QAAQd,KAAKC,MACjCA,KAAKc,WAAad,KAAKc,WAAWf,KAAKC,MACvCA,KAAKe,OAASf,KAAKe,OAAOhB,KAAKC,MAC/BA,KAAKgB,QAAUhB,KAAKgB,QAAQjB,KAAKC,M,sDAQjC,OAAOA,KAAKU,O,iCAOHA,GACTV,KAAKiB,eAAYpD,EACb6C,IACFV,KAAKU,KAAOV,KAAKkB,OAAOR,M,6BAQrBS,GACLnB,KAAKY,MAAM1D,KAAKiE,K,8BAcVF,GACDjB,KAAKiB,YACRjB,KAAKiB,UAAYA,GAEnB,IAAIG,EAAUH,EAAYjB,KAAKiB,UAE/B,IADAjB,KAAKiB,UAAYA,EACVjB,KAAKY,MAAMS,OAAS,GAAKD,GAAWpB,KAAKW,WAAW,CACzDS,GAAWpB,KAAKW,UAEhB,IADA,IAAMW,EAAUtB,KAAKY,MAAMW,QAClBC,EAAI,EAAGA,EAAIF,EAAQD,OAAQG,GAAK,EACvCxB,KAAKU,KAAKY,EAAQE,EAAI,IAAIF,EAAQE,IAAMF,EAAQE,EAAI,GAIxD,OADAxB,KAAKiB,WAAaG,EACX,CACLK,UAAiC,IAAtBzB,KAAKY,MAAMS,OACtBX,KAAMV,KAAKU,Q,6BAIRgB,GAAQ,IAAD,OACZ,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAInE,MAAMC,QAAQkE,GAAQ,EAAKV,OAAOU,GAAQA,S,KC5EjE+E,EAAa,CACjB,CAAE/I,GAAI,EAAGgJ,EAAG,GACZ,CAAEhJ,EAAG,EAAGgJ,GAAI,GACZ,CAAEhJ,EAAG,EAAGgJ,EAAG,GACX,CAAEhJ,EAAG,EAAGgJ,EAAG,IAGPC,EAAY,GAEX,SAASC,EAAWpG,EAAMI,EAAYC,GAC3CgG,EAAOrG,EAAM,GACbI,EAAWJ,GACXsG,EAAYtG,EAAMK,EAAQkG,EAAQ,CAAErJ,EAAG,EAAGgJ,EAAG,IAGxC,SAASM,EAAcxG,EAAMI,EAAYC,GAC9C,IAAMoG,EAAU,GACZC,EAAS,EAMPC,EAAc,SAAC3G,EAAM4G,GACzB5G,EAAK4G,EAAIV,GAAGU,EAAI1J,GAAK,EACrBuJ,EAAQG,EAAIV,GAAGU,EAAI1J,GAAKwJ,GAG1BL,EAAOrG,EAAM,GACbI,EAAWJ,GAGX,IAFA,IAAM6G,EAAK7G,EAAKW,OACVmG,EAAK9G,EAAK,GAAGW,OACVuF,EAAI,EAAGA,EAAIW,EAAIX,IACtBO,EAAQjK,KAAKO,MAAM+J,GAAIC,KAAK,KA8DhC,SAAmB/G,EAAMK,EAAQyG,EAAID,EAAIG,EAAiBL,EAAaM,EAAcC,GAEnF,IADA,IAAMC,EAAQ,GACLrG,EAAI,EAAGA,EAAImG,EAAcnG,IAAK,CACrC,IAAM+B,EAA6C,GAArCuE,EAAO,EAAG,EAAIF,IAAkB,GAC1CG,EAAiBD,EAAO,EAAG,EAAIvE,GAAQ,IAAM,EAC7CkC,EAAQlC,EACRoC,EAASpC,EACQ,IAAjBuE,EAAO,EAAG,GACZrC,GAASsC,EAETpC,GAAUoC,EAMZ,IAJA,IAAInK,EAA8C,GAAzCkK,EAAO,EAAIN,EAAK/B,EAAQ,GAAM,IAAM,GACzCmB,EAA+C,GAA1CkB,EAAO,EAAIP,EAAK5B,EAAS,GAAM,IAAM,GACxCqC,EAAO,CAAEpK,IAAGgJ,IAAGnB,QAAOE,UACxBsC,GAAW,EACNnG,EAAI,EAAGA,EAAI+F,EAAMxG,OAAQS,IAAK,CACrC,IAAMoG,EAAQL,EAAM/F,GACpB,GAAIqG,EAAcH,EAAME,GAAQ,CAC9BD,GAAW,EACX,OAGJ,IAAIA,EAAJ,CAGAJ,EAAM3K,KAAK8K,GACXN,IACA,IAAK,IAAIU,EAAU,EAAGA,EAAU3C,EAAO2C,IAAW,CAEhD,IADA,IAAM9G,EAAU,GACP+G,EAAU,EAAGA,EAAU1C,EAAQ0C,IACtChB,EAAY3G,EAAM,CAAE9C,EAAGA,EAAIwK,EAASxB,EAAGA,EAAIyB,IAC3C/G,EAAQpE,KAAKU,EAAIwK,EAASxB,EAAIyB,EAAS3H,EAAKkG,EAAIyB,GAASzK,EAAIwK,IAE/DrH,EAAOO,MA9FXgH,CAAU5H,EAAMK,EAAQyG,EAAID,GAhBJ,SAAC7G,EAAM4G,GAC7BF,MAe+CC,EAAa,IAAK,GACnE,IAAK,IAAIT,EAAI,EAAGA,EAAIW,EAAIX,GAAK,EAC3B,IAAK,IAAIhJ,EAAI,EAAGA,EAAI4J,EAAI5J,GAAK,EACR,IAAf8C,EAAKkG,GAAGhJ,KAGZwJ,IACAJ,EAAYtG,EAAMK,EAAQsG,EAAa,CAAEzJ,IAAGgJ,QA4FlD,SAAyBlG,EAAMK,EAAQyG,EAAID,EAAIH,EAAQD,GAErD,IADA,IAAIoB,EAAa,GACR3B,EAAI,EAAGA,EAAIW,EAAK,EAAGX,IAC1B,IAAK,IAAIhJ,EAAI,EAAGA,EAAI4J,EAAK,EAAG5J,IAC1B,GAAmB,IAAf8C,EAAKkG,GAAGhJ,GAAZ,CAIA,IADA,IAAM4K,EAAmB,GAChBhH,EAAI,EAAGA,EAAImF,EAAWtF,OAAQG,IAAK,CAC1C,IAAMiH,EAAM9B,EAAWnF,GACjB4F,EAASD,EAAQP,EAAI6B,EAAI7B,GAAGhJ,EAAI6K,EAAI7K,GAC3B,IAAXwJ,GAAiBoB,EAAiBtK,SAASkJ,IAC7CoB,EAAiBtL,KAAKkK,GAGtBoB,EAAiBnH,OAAS,GAG9BkH,EAAWrL,KAAK,CAAEU,IAAGgJ,IAAGO,QAASqB,IAKrC,IAFA,IAAME,EAAS,CAAC,GACZC,EAAc,GACTnH,EAAI,EAAGA,GAAK4F,EAAQ5F,IAC3BkH,EAAOxL,KAAKsE,GACZmH,EAAYzL,KAAKsE,GAzB2C,iBA4B5D,IAAMwB,EAAQ8E,EAAO,EAAGS,EAAWlH,OAAS,GACtCuH,EAAYL,EAAWvF,GAC7BiE,EAAOvG,EAAM,CAAE9C,EAAGgL,EAAUhL,EAAGgJ,EAAGgC,EAAUhC,IAC5C7F,EAAO,CAAC6H,EAAUhL,EAAGgL,EAAUhC,EAAGlG,EAAKkI,EAAUhC,GAAGgC,EAAUhL,KAI9D,IAHA,IAAMuJ,EAAUyB,EAAUzB,QAAQxF,KAAI,SAACyF,GAAD,OAAYsB,EAAOtB,MACnDyB,EAAO1B,EAAQ,GACf2B,EAAU3B,EAAQ4B,MAAM,GACrBvH,EAAI,EAAGA,GAAK4F,EAAQ5F,IACvBsH,EAAQ5K,SAASsD,KACnBkH,EAAOlH,GAAKqH,GAGhBF,EAAcA,EAAYK,QAAO,SAAC5B,GAChC,OAAQ0B,EAAQ5K,SAASkJ,MAE3BmB,EAAaA,EAAWS,QAAO,SAACC,GAC9B,GAAIlH,KAAKmH,IAAID,EAAIrL,EAAIgL,EAAUhL,IAAM,GAAKmE,KAAKmH,IAAID,EAAIrC,EAAIgC,EAAUhC,IAAM,EACzE,OAAO,EAETqC,EAAI9B,QAAU8B,EAAI9B,QAAQxF,KAAI,SAACyF,GAAD,OAAYsB,EAAOtB,MACjD,IAAK,IAAI5F,EAAI,EAAGA,EAAIyH,EAAI9B,QAAQ9F,OAAQG,IACtC,GAAIyH,EAAI9B,QAAQ3F,KAAOyH,EAAI9B,QAAQ,GACjC,OAAO,EAOX,OAJsB,IAAlBW,EAAO,EAAG,MACZb,EAAOvG,EAAM,CAAE9C,EAAGqL,EAAIrL,EAAGgJ,EAAGqC,EAAIrC,IAChC7F,EAAO,CAACkI,EAAIrL,EAAGqL,EAAIrC,EAAGlG,EAAKuI,EAAIrC,GAAGqC,EAAIrL,OAEjC,MA9BX,KAAO+K,EAAYtH,OAAS,GAAI,IApHhC8H,CAAgBzI,EAAMK,EAAQyG,EAAID,EAAIH,EAAQD,GAuJhD,SAAyBzG,EAAMK,EAAQyG,EAAID,GACzC,IAAI6B,GAAO,EACX,MAAQA,GAAM,CACZA,GAAO,EACP,IAAK,IAAIxC,EAAI,EAAGA,EAAIW,EAAK,EAAGX,IAC1B,IAAK,IAAIhJ,EAAI,EAAGA,EAAI4J,EAAK,EAAG5J,IAC1B,GAAmB,IAAf8C,EAAKkG,GAAGhJ,GAAZ,CAIA,IADA,IAAIyL,EAAQ,EACH7H,EAAI,EAAGA,EAAImF,EAAWtF,OAAQG,IAAK,CAC1C,IAAMiH,EAAM9B,EAAWnF,GACY,IAA/Bd,EAAKkG,EAAI6B,EAAI7B,GAAGhJ,EAAI6K,EAAI7K,IAC1ByL,IAGU,IAAVA,IAGJD,GAAO,EACPE,EAAM5I,EAAM,CAAE9C,IAAGgJ,MACjB7F,EAAO,CAACnD,EAAGgJ,EAAGlG,EAAKkG,GAAGhJ,QA3K5B2L,CAAgB7I,EAAMK,EAAQyG,EAAID,GAGpC,SAASR,EAAOrG,EAAMqC,GAEpB,IADA,IAAMwE,EAAK7G,EAAKW,OACPuF,EAAI,EAAGA,EAAIW,EAAIX,IACtBlG,EAAKkG,GAAGa,KAAK1E,GAIjB,SAASiE,EAAYtG,EAAMK,GAAgC,IAIrDyI,EAJ6BC,EAAuB,uDAAfxC,EAAQtE,EAAO,uCAClD4E,EAAK7G,EAAKW,OACVmG,EAAK9G,EAAK,GAAGW,OACbqI,EAAQ,GAMd,IAJAD,EAAM/I,EAAMiC,GACZ5B,EAAO,CAAC4B,EAAM/E,EAAG+E,EAAMiE,EAAGlG,EAAKiC,EAAMiE,GAAGjE,EAAM/E,KAC9C8C,EAAKiC,EAAMiE,GAAGjE,EAAM/E,GAAK,EACzB8L,EAAMxM,KAAKyF,GACJ+G,EAAMrI,OAAS,GAAG,CAGvB,IAFA,IAAMsI,EAAOD,EAAMA,EAAMrI,OAAS,GAC5BuI,EAAW,GACRpI,EAAI,EAAGA,EAAImF,EAAWtF,OAAQG,IAAK,CAC1C,IAAMiH,EAAM9B,EAAWnF,GACnBqI,EAAUnJ,EAAM8G,EAAID,EAAIoC,EAAMlB,IAChCmB,EAAS1M,KAAKuL,GAGlB,GAAImB,EAASvI,OAAS,EAAG,CACvB,IAAIoH,OAAG,EAMDqB,EAAKC,EAAQJ,EAJjBlB,EADEmB,EAAS1L,SAASsL,IAAYzH,KAAKE,SAAW4E,EAC1C2C,EAEAI,EAAS7H,KAAKC,MAAMD,KAAKE,SAAW2H,EAASvI,SAEvB,GACxB2I,EAAKD,EAAQJ,EAAMlB,EAAK,GAC9BgB,EAAM/I,EAAMoJ,GACZL,EAAM/I,EAAMsJ,GACZjJ,EAAO,CAAC+I,EAAGlM,EAAGkM,EAAGlD,EAAGlG,EAAKoJ,EAAGlD,GAAGkD,EAAGlM,GAAIoM,EAAGpM,EAAGoM,EAAGpD,EAAGlG,EAAKsJ,EAAGpD,GAAGoD,EAAGpM,KAChE8L,EAAMxM,KAAK6M,EAAQJ,EAAMlB,EAAK,IAC9Be,EAAUf,OAEViB,EAAMO,MACNT,EAAU,MAqIhB,SAASF,EAAM5I,EAAM4G,GACnB5G,EAAK4G,EAAIV,GAAGU,EAAI1J,GAAK,EAGvB,SAASqJ,EAAOvG,EAAM4G,GACpB5G,EAAK4G,EAAIV,GAAGU,EAAI1J,GAAK,EAGvB,SAASiM,EAAUnJ,EAAM8G,EAAID,EAAID,EAAKmB,GACpC,IAOF,SAAqBjB,EAAID,EAAID,GAC3B,GAAIA,EAAI1J,EAAI,GAAK0J,EAAIV,EAAI,GAAKU,EAAI1J,GAAK4J,GAAMF,EAAIV,GAAKW,EACpD,OAAO,EAET,OAAO,EAXF2C,CAAY1C,EAAID,EAAIwC,EAAQzC,EAAKmB,EAAK,IACzC,OAAO,EAET,IAAM0B,EAAMJ,EAAQzC,EAAKmB,EAAK,GAC9B,OAA8B,IAAvB/H,EAAKyJ,EAAIvD,GAAGuD,EAAIvM,GAUzB,SAASmM,EAAQzC,EAAKmB,EAAK2B,GACzB,MAAO,CACLxM,EAAG0J,EAAI1J,EAAI6K,EAAI7K,EAAIwM,EACnBxD,EAAGU,EAAIV,EAAI6B,EAAI7B,EAAIwD,GAIvB,SAAStC,EAAOuC,EAAKC,GACnB,OAAOvI,KAAKC,MAAMD,KAAKE,UAAYqI,EAAMD,EAAM,IAAMA,EAGvD,SAASlC,EAAcoC,EAAKC,GAC1B,QAAID,EAAI3M,EAAI4M,EAAI5M,EAAI4M,EAAI/E,OAAS+E,EAAI5M,EAAI2M,EAAI3M,EAAI2M,EAAI9E,UAGjD8E,EAAI3D,EAAI4D,EAAI5D,EAAI4D,EAAI7E,QAAU6E,EAAI5D,EAAI2D,EAAI3D,EAAI2D,EAAI5E,Q,IChKzC8E,E,YA9Fb,WAAYnL,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IADA,IAAMoB,EAAO,GACJc,EAAI,EAAGA,EAAI,GAAIA,IACtBd,EAAKxD,KAAKO,MAAM,IAAIgK,KAAK,IAJV,OAOjB,EAAKiD,KAAO,IAAIhE,EAAahG,EAAM,GAEnC,EAAK6D,IAAM,EAAKA,IAAIxE,KAAT,gBACX,EAAK4K,kBAAoB,EAAKA,kBAAkB5K,KAAvB,gBACzB,EAAK6K,qBAAuB,EAAKA,qBAAqB7K,KAA1B,gBAC5B,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,gBAChB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBAEpB,EAAKF,MAAQ,CACXuE,SAAS,EACTC,WAAW,EACXyG,YAAa7F,OAAO8F,OAAOtF,MAC3BuF,aAAc/F,OAAO8F,OAAOpF,QAnBb,E,iFAwBjBV,OAAOgG,iBAAiB,SAAUjL,KAAK6K,UACvC7K,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,6CAI/CE,OAAOiG,oBAAoB,SAAUlL,KAAK6K,UAC1C5F,OAAOE,qBAAqBnF,KAAKgF,S,0BAG/BI,GAAU,IAAD,OACXpF,KAAKC,SAAS,CAAEmE,SAAS,EAAMC,WAAW,IAAQ,WAChDe,EAAQ,EAAKlE,OAAO,EAAKwJ,KAAK7J,WAAY,EAAK6J,KAAK5J,WAAY,EAAK4J,KAAK3J,QAC1E,EAAKd,SAAS,CAAEmE,SAAS,S,0CAK3BpE,KAAKuE,IAAIuC,K,6CAIT9G,KAAKuE,IAAI2C,K,iCAILjC,OAAO8F,OAAOtF,QAAUzF,KAAKyF,OAASR,OAAO8F,OAAOpF,SAAW3F,KAAK2F,SACtE3F,KAAKyF,MAAQR,OAAO8F,OAAOtF,MAC3BzF,KAAK2F,OAASV,OAAO8F,OAAOpF,OAC5B3F,KAAKC,SAAS,CAAE6K,YAAa9K,KAAKyF,MAAOuF,aAAchL,KAAK2F,Y,mCAInD1E,GAAY,IAAD,EACMjB,KAAK0K,KAAK1J,QAAQC,GAAtCQ,EADc,EACdA,UAAWf,EADG,EACHA,KACde,GAAczB,KAAKH,MAAMuE,SAC5BpE,KAAKC,SAAS,CAAEoE,WAAW,IH/C1B,SAAkBgB,EAAQ3E,EAAMyK,GACrC,IAAM/I,EAAI1B,EAAKW,OACT+B,EAAI1C,EAAK,GAAGW,OACZiE,EAAOD,EAAOE,wBACdC,EAAIF,EAAKG,MACTC,EAAIJ,EAAKK,OACfN,EAAOI,MAAQD,EACfH,EAAOM,OAASD,EAChB,IAAM0F,EAAQrJ,KAAKC,MAAMwD,EAAIpC,GACvBiI,EAAQtJ,KAAKC,MAAM0D,EAAItD,GACvB2D,EAAMV,EAAOW,WAAW,MAC9BD,EAAIE,UAAU,EAAG,EAAGT,EAAGE,GACvB,IAAK,IAAIkB,EAAI,EAAGA,EAAIxE,EAAGwE,IACrB,IAAK,IAAIhJ,EAAI,EAAGA,EAAIwF,EAAGxF,IACrBmI,EAAIG,UAAYiF,EAAOzK,EAAKkG,GAAGhJ,IAC/BmI,EAAIK,SAASxI,EAAIwN,EAAOxE,EAAIyE,EAAOD,EAAOC,GGkC5CC,CAAStL,KAAKqF,OAAQ3E,EAAM,CAAC,QAAS,WACtCV,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,6BAG1CrD,GAAQ,IAAD,OACZ,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAInE,MAAMC,QAAQkE,GAAQ,EAAKV,OAAOU,GAAQA,O,+BAG3D,IAAD,OACH2J,EAAO,OACPC,EAAO,OAKX,OAJIxL,KAAKH,MAAMiL,YAAc9K,KAAKH,MAAMmL,aAAe,GAAK,IAC1DO,EAAO,OACPC,EAAO,QAGP,kBAAC,EAAD,CAAS1O,OAAK,GACZ,kBAAC,EAAD,CAAWO,OAAK,EAACX,UAAU,cACzB,kBAAC,EAAD,CAAKA,UAAU,SACb,kBAAC,EAAD,CAAKc,IAAK+N,GACR,4BAAQ7O,UAAU,cAAc8J,IAAK,SAAAC,GAAI,OAAI,EAAKpB,OAASoB,MAE7D,kBAAC,EAAD,CAAKjJ,IAAKgO,EAAM9O,UAAU,+DACxB,kBAAC,EAAD,CAAQqB,OAAO,gBAAgBwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK2K,mBAAnG,eACA,kBAAC,EAAD,CAAQ5M,OAAO,gBAAgBwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK4K,sBAAnG,0B,GAtFSxK,IAAMC,W,QCNtB,SAASoL,GAAiBC,GAE/B,OAAOA,GADE3J,KAAK4J,GACS,KAGlB,SAASC,GAAkBC,EAAIC,EAAUC,GAC9C,IAAMC,EAAeC,GAAYJ,EAAIA,EAAGK,cAAeJ,GACjDK,EAAiBF,GAAYJ,EAAIA,EAAGO,gBAAiBL,GACrDM,EAAgBR,EAAGS,gBAIzB,OAHAT,EAAGU,aAAaF,EAAeL,GAC/BH,EAAGU,aAAaF,EAAeF,GAC/BN,EAAGW,YAAYH,GACVR,EAAGY,oBAAoBJ,EAAeR,EAAGa,aAIvCL,GAHLM,MAAM,4CAA8Cd,EAAGe,kBAAkBP,IAClE,MAKX,SAASJ,GAAYJ,EAAIrM,EAAMqN,GAC7B,IAAMC,EAASjB,EAAGkB,aAAavN,GAG/B,OAFAqM,EAAGmB,aAAaF,EAAQD,GACxBhB,EAAGoB,cAAcH,GACZjB,EAAGqB,mBAAmBJ,EAAQjB,EAAGsB,gBAK/BL,GAJLH,MAAM,4CAA8Cd,EAAGuB,iBAAiBN,IACxEjB,EAAGwB,aAAaP,GACT,MAsCJ,SAASQ,GAAYzB,GAC1BA,EAAG0B,WAAW,EAAK,EAAK,EAAK,GAC7B1B,EAAG2B,WAAW,GACd3B,EAAG4B,OAAO5B,EAAG6B,YACb7B,EAAG8B,UAAU9B,EAAG+B,QAChB/B,EAAGgC,MAAMhC,EAAGiC,iBAAmBjC,EAAGkC,kB,IC2MrBC,G,WA5Qb,WAAYnC,GAAK,oBACf7L,KAAK6L,GAAKA,EACV7L,KAAKiO,KAAOjO,KAAKiO,KAAKlO,KAAKC,MAC3B,IAAMqM,EAAgBrM,KAAKkO,aAAarC,GACxC7L,KAAKmO,MAAQ,CACXC,QAAS/B,EACTgC,gBAAiB,CACfC,eAAgBzC,EAAG0C,kBAAkBlC,EAAe,QACpDmC,YAAa3C,EAAG0C,kBAAkBlC,EAAe,aACjDoC,aAAc5C,EAAG0C,kBAAkBlC,EAAe,eAEpDqC,iBAAkB,CAChBC,iBAAkB9C,EAAG+C,mBAAmBvC,EAAe,UACvDwC,gBAAiBhD,EAAG+C,mBAAmBvC,EAAe,SACtDyC,aAAcjD,EAAG+C,mBAAmBvC,EAAe,gBACnD7N,MAAO,CACLuQ,SAAUlD,EAAG+C,mBAAmBvC,EAAe,kBAC/C7L,MAAOqL,EAAG+C,mBAAmBvC,EAAe,iBAGhD2C,QAAShP,KAAKiP,aAAapD,I,iDAI1B8C,EAAkBO,EAAYC,GACjC,IAAMtD,EAAK7L,KAAK6L,GACVsC,EAAQnO,KAAKmO,MACXa,EAAYhP,KAAKmO,MAAjBa,QAIAxP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQD,UACvClD,EAAG0D,oBAAoBpB,EAAME,gBAAgBC,eANvB,EAMsD9O,GAJ1D,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBC,gBAIjD,IACM9O,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQS,QACvC5D,EAAG0D,oBAAoBpB,EAAME,gBAAgBI,aANvB,EAMoDjP,GAJxD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBI,cAIjD,IACMjP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQxO,OACvCqL,EAAG0D,oBAAoBpB,EAAME,gBAAgBG,YANvB,EAMmDhP,GAJvD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBG,aAGnD3C,EAAGwD,WAAWxD,EAAG6D,qBAAsBV,EAAQW,SAE/C,IAAMd,EAAkBe,OACxBA,KAAcf,EAAiBK,EAAYC,GAE3C,IAAML,EAAec,OACrBA,KAAYd,EAAcD,GAC1Be,KAAed,EAAcA,GAE7BjD,EAAGgE,WAAW1B,EAAMC,SACpBvC,EAAGiE,iBAAiB3B,EAAMO,iBAAiBC,kBAAkB,EAAOA,GACpE9C,EAAGiE,iBAAiB3B,EAAMO,iBAAiBG,iBAAiB,EAAOA,GACnEhD,EAAGiE,iBAAiB3B,EAAMO,iBAAiBI,cAAc,EAAOA,GAChEjD,EAAGkE,UAAU5B,EAAMO,iBAAiBlQ,MAAMuQ,SAAU,GAAM,GAAM,IAChElD,EAAGkE,UAAU5B,EAAMO,iBAAiBlQ,MAAMgC,MAAO,EAAK,EAAK,GAGzD,IACMhB,EAAOqM,EAAGmE,eAEhBnE,EAAGoE,aAAapE,EAAGqE,UAHC,GAGuB1Q,EAD5B,K,mCAKNqM,GAiDX,OAAOD,GAAkBC,EAhDX,scAoBA,izB,mCA+BHA,GACX,IAsCMsE,EAAiBtE,EAAGuE,eAC1BvE,EAAGwD,WAAWxD,EAAGyD,aAAca,GAC/BtE,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAxCjB,EAEf,GAAM,EAAK,EACZ,GAAM,EAAK,EACX,EAAK,EAAK,GACT,EAAK,EAAK,GAGV,GAAM,GAAM,GACZ,EAAK,GAAM,EACZ,EAAK,GAAM,EACX,GAAM,GAAM,GAGX,EAAK,GAAM,GACX,EAAK,EAAK,EACX,EAAK,EAAK,EACV,EAAK,GAAM,GAGV,GAAM,GAAM,EACb,GAAM,GAAM,EACZ,GAAM,EAAK,GACV,GAAM,EAAK,EAGZ,GAAM,GAAM,EACZ,EAAK,GAAM,EACX,EAAK,EAAK,EACV,GAAM,EAAK,GAGV,GAAM,GAAM,GACZ,GAAM,EAAK,GACX,EAAK,EAAK,GACV,EAAK,GAAM,IAK8CzE,EAAG0E,aAE/D,IAsCMC,EAAe3E,EAAGuE,eACxBvE,EAAGwD,WAAWxD,EAAGyD,aAAckB,GAC/B3E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAxCb,CAEpB,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EAGV,EAAK,GAAM,EACX,EAAK,GAAM,EACX,EAAK,GAAM,EACX,EAAK,GAAM,EAGX,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EAGV,GAAM,EAAK,EACX,GAAM,EAAK,EACX,GAAM,EAAK,EACX,GAAM,EAAK,EAGX,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,GAGT,EAAK,EAAK,GACV,EAAK,EAAK,GACV,EAAK,EAAK,GACV,EAAK,EAAK,IAKmDzE,EAAG0E,aAWnE,IATA,IAAME,EAAa,CACjB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,IAEdtF,EAAS,GACJrJ,EAAI,EAAGA,EAAI2O,EAAWpP,SAAUS,EAAG,CAC1C,IAAM4O,EAAID,EAAW,GACrBtF,EAASA,EAAOwF,OAAOD,EAAGA,EAAGA,EAAGA,GAElC,IAAME,EAAc/E,EAAGuE,eACvBvE,EAAGwD,WAAWxD,EAAGyD,aAAcsB,GAC/B/E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAanF,GAASU,EAAG0E,aAE5D,IAoBMM,EAAchF,EAAGuE,eAIvB,OAHAvE,EAAGwD,WAAWxD,EAAG6D,qBAAsBmB,GACvChF,EAAGwE,WAAWxE,EAAG6D,qBAAsB,IAAIoB,YAtB3B,CAEd,EAAG,EAAG,EAAG,EAAG,EAAG,EAGf,EAAG,EAAG,EAAG,EAAG,EAAG,EAGf,EAAG,EAAG,GAAI,EAAG,GAAI,GAGjB,GAAI,GAAI,GAAI,GAAI,GAAI,GAGpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAGpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAK2CjF,EAAG0E,aAE7D,CAAExB,SAAUoB,EAAgBV,OAAQe,EAAchQ,MAAOoQ,EAAajB,QAASkB,O,KC9L3EE,G,WAzEb,aAAe,oBACb/Q,KAAKgR,UAAY,EACjBhR,KAAKiR,UAAYjR,KAAKiR,UAAUlR,KAAKC,MACrCA,KAAKkR,UAAYlR,KAAKkR,UAAUnR,KAAKC,M,sDAG7B6L,EAAInL,GACZ,IAAMyN,EAAQ,IAAIH,GAAUnC,GAC5B7L,KAAKmR,MAAQ,CACXC,OAAQ,GACRC,OAAQ,CAAC,EAAK,EAAK,IACnBC,YAAa,GAEf,IAAK,IAAI9P,EAAI,EAAGA,EAAId,EAAKW,OAAQG,IAC/BxB,KAAKmR,MAAMC,OAAOlU,KAChB,CACEiR,QACAoD,SAAU,CAAC,IAAO/P,GAAMd,EAAKW,OAAS,GAAK,GAAK,EAAK,GACrDmQ,MAAO,CAAC,GAAK,IAAO9Q,EAAKc,GAAK,GAAI,IAClCiQ,UAAW,CACT,CACEC,MAAOjG,IAAkB,IACzBnH,OAAQ,CAAC,EAAG,EAAG,S,gCAQjBuH,EAAI8F,EAAWjR,GACvB,IAAMyQ,EAAQnR,KAAKmR,MAEnB7D,GAAYzB,GAEZ,IAAM+F,EAAc,GAAK7P,KAAK4J,GAAK,IAC7BkG,EAAShG,EAAGxG,OAAOyM,YAAcjG,EAAGxG,OAAO0M,aAG3CpD,EAAmBiB,OACzBA,KAAiBjB,EAAkBiD,EAAaC,EAHlC,GACD,KAIb,IAAM3C,EAAaU,OACnBA,KAAYV,EAAYA,EAAYiC,EAAMG,YAAa,CAAC,EAAG,EAAG,IAC9D1B,KAAeV,EAAYA,EAAYiC,EAAME,QAC7CzB,KAAYV,EAAYA,GAExB,IAAK,IAAI1N,EAAI,EAAGA,EAAI2P,EAAMC,OAAO/P,OAAQG,IAAK,CAC5C,IAAMwQ,EAAQb,EAAMC,OAAO5P,GAC3BxB,KAAKiS,aAAatD,EAAkBO,EAAY8C,GAChDhS,KAAKkS,cAAcF,EAAOL,EAAWjR,EAAKc,IAG5C2P,EAAMG,aAAe,KAAQK,I,mCAGlBhD,EAAkBO,EAAY8C,GAGzC,IAFA,IAAM7D,EAAQ6D,EAAM7D,MACdgB,EAAcS,OACXpO,EAAI,EAAGA,EAAIwQ,EAAMP,UAAUpQ,OAAQG,IAAK,CAC/C,IAAM2Q,EAAWH,EAAMP,UAAUjQ,GACjCoO,KAAYT,EAAaA,EAAagD,EAAST,MAAOS,EAAS7N,QAEjEsL,KAAeT,EAAaA,EAAa6C,EAAMT,UAC/C3B,KAAWT,EAAaA,EAAa6C,EAAMR,OAC3CrD,EAAMF,KAAKU,EAAkBO,EAAYC,K,oCAG7B6C,EAAOL,EAAWhM,GAC9BqM,EAAMR,MAAM,GAAK,IAAO7L,EAAS,O,KCqNtByM,G,WA3Rb,WAAYvG,GAAK,oBACf7L,KAAK6L,GAAKA,EACV7L,KAAKiO,KAAOjO,KAAKiO,KAAKlO,KAAKC,MAC3B,IAAMqM,EAAgBrM,KAAKkO,aAAarC,GACxC7L,KAAKmO,MAAQ,CACXC,QAAS/B,EACTgC,gBAAiB,CACfC,eAAgBzC,EAAG0C,kBAAkBlC,EAAe,QACpDmC,YAAa3C,EAAG0C,kBAAkBlC,EAAe,aACjDoC,aAAc5C,EAAG0C,kBAAkBlC,EAAe,eAEpDqC,iBAAkB,CAChBC,iBAAkB9C,EAAG+C,mBAAmBvC,EAAe,UACvDwC,gBAAiBhD,EAAG+C,mBAAmBvC,EAAe,SACtDyC,aAAcjD,EAAG+C,mBAAmBvC,EAAe,gBACnDgG,OAAQ,CACNtD,SAAUlD,EAAG+C,mBAAmBvC,EAAe,mBAC/C7L,MAAOqL,EAAG+C,mBAAmBvC,EAAe,iBAE9CiG,OAAQ,CACNvD,SAAUlD,EAAG+C,mBAAmBvC,EAAe,mBAC/C7L,MAAOqL,EAAG+C,mBAAmBvC,EAAe,kBAGhD2C,QAAShP,KAAKiP,aAAapD,I,iDAI1B8C,EAAkBO,EAAYC,GACjC,IAAMtD,EAAK7L,KAAK6L,GACVsC,EAAQnO,KAAKmO,MACXa,EAAYhP,KAAKmO,MAAjBa,QAIAxP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQD,UACvClD,EAAG0D,oBAAoBpB,EAAME,gBAAgBC,eANvB,EAMsD9O,GAJ1D,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBC,gBAIjD,IACM9O,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQS,QACvC5D,EAAG0D,oBAAoBpB,EAAME,gBAAgBI,aANvB,EAMoDjP,GAJxD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBI,cAIjD,IACMjP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQxO,OACvCqL,EAAG0D,oBAAoBpB,EAAME,gBAAgBG,YANvB,EAMmDhP,GAJvD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBG,aAGnD3C,EAAGwD,WAAWxD,EAAG6D,qBAAsBV,EAAQW,SAE/C,IAAMd,EAAkBe,OACxBA,KAAcf,EAAiBK,EAAYC,GAE3C,IAAML,EAAec,OACrBA,KAAYd,EAAcD,GAC1Be,KAAed,EAAcA,GAE7BjD,EAAGgE,WAAW1B,EAAMC,SACpBvC,EAAGiE,iBAAiB3B,EAAMO,iBAAiBC,kBAAkB,EAAOA,GACpE9C,EAAGiE,iBAAiB3B,EAAMO,iBAAiBG,iBAAiB,EAAOA,GACnEhD,EAAGiE,iBAAiB3B,EAAMO,iBAAiBI,cAAc,EAAOA,GAChEjD,EAAGkE,UAAU5B,EAAMO,iBAAiB2D,OAAOtD,SAAU,GAAM,GAAM,IACjElD,EAAGkE,UAAU5B,EAAMO,iBAAiB2D,OAAO7R,MAAO,EAAK,EAAK,GAC5DqL,EAAGkE,UAAU5B,EAAMO,iBAAiB4D,OAAOvD,UAAW,IAAO,GAAM,IACnElD,EAAGkE,UAAU5B,EAAMO,iBAAiB4D,OAAO9R,MAAO,EAAK,EAAK,GAG1D,IACMhB,EAAOqM,EAAGmE,eAEhBnE,EAAGoE,aAAapE,EAAGqE,UAHC,GAGuB1Q,EAD5B,K,mCAKNqM,GA0DX,OAAOD,GAAkBC,EAzDX,scAoBA,iqC,mCAwCHA,GACX,IAsCMsE,EAAiBtE,EAAGuE,eAC1BvE,EAAGwD,WAAWxD,EAAGyD,aAAca,GAC/BtE,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAxCjB,EAEf,GAAM,EAAK,EACZ,GAAM,EAAK,EACX,EAAK,EAAK,GACT,EAAK,EAAK,GAGV,GAAM,GAAM,GACZ,EAAK,GAAM,EACZ,EAAK,GAAM,EACX,GAAM,GAAM,GAGX,EAAK,GAAM,GACX,EAAK,EAAK,EACX,EAAK,EAAK,EACV,EAAK,GAAM,GAGV,GAAM,GAAM,EACb,GAAM,GAAM,EACZ,GAAM,EAAK,GACV,GAAM,EAAK,EAGZ,GAAM,GAAM,EACZ,EAAK,GAAM,EACX,EAAK,EAAK,EACV,GAAM,EAAK,GAGV,GAAM,GAAM,GACZ,GAAM,EAAK,GACX,EAAK,EAAK,GACV,EAAK,GAAM,IAK8CzE,EAAG0E,aAE/D,IAsCMC,EAAe3E,EAAGuE,eACxBvE,EAAGwD,WAAWxD,EAAGyD,aAAckB,GAC/B3E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAxCb,CAEpB,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EAGV,EAAK,GAAM,EACX,EAAK,GAAM,EACX,EAAK,GAAM,EACX,EAAK,GAAM,EAGX,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EAGV,GAAM,EAAK,EACX,GAAM,EAAK,EACX,GAAM,EAAK,EACX,GAAM,EAAK,EAGX,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,GAGT,EAAK,EAAK,GACV,EAAK,EAAK,GACV,EAAK,EAAK,GACV,EAAK,EAAK,IAKmDzE,EAAG0E,aAWnE,IATA,IAAME,EAAa,CACjB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,GAChB,CAAC,EAAK,EAAK,EAAK,IAEdtF,EAAS,GACJrJ,EAAI,EAAGA,EAAI2O,EAAWpP,SAAUS,EAAG,CAC1C,IAAM4O,EAAID,EAAW,GACrBtF,EAASA,EAAOwF,OAAOD,EAAGA,EAAGA,EAAGA,GAElC,IAAME,EAAc/E,EAAGuE,eACvBvE,EAAGwD,WAAWxD,EAAGyD,aAAcsB,GAC/B/E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAanF,GAASU,EAAG0E,aAE5D,IAoBMM,EAAchF,EAAGuE,eAIvB,OAHAvE,EAAGwD,WAAWxD,EAAG6D,qBAAsBmB,GACvChF,EAAGwE,WAAWxE,EAAG6D,qBAAsB,IAAIoB,YAtB3B,CAEd,EAAG,EAAG,EAAG,EAAG,EAAG,EAGf,EAAG,EAAG,EAAG,EAAG,EAAG,EAGf,EAAG,EAAG,GAAI,EAAG,GAAI,GAGjB,GAAI,GAAI,GAAI,GAAI,GAAI,GAGpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAGpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAK2CjF,EAAG0E,aAE7D,CAAExB,SAAUoB,EAAgBV,OAAQe,EAAchQ,MAAOoQ,EAAajB,QAASkB,O,KChN3E0B,G,WAtEb,aAAe,oBACbvS,KAAKgR,UAAY,EACjBhR,KAAKiR,UAAYjR,KAAKiR,UAAUlR,KAAKC,MACrCA,KAAKkR,UAAYlR,KAAKkR,UAAUnR,KAAKC,M,sDAG7B6L,EAAInL,GACZ,IAAMyN,EAAQ,IAAIiE,GAAiBvG,GACnC7L,KAAKmR,MAAQ,CACXC,OAAQ,GACRC,OAAQ,CAAC,EAAK,EAAK,KAErB,IAAK,IAAI7P,EAAI,EAAGA,EAAId,EAAKW,OAAQG,IAC/BxB,KAAKmR,MAAMC,OAAOlU,KAChB,CACEiR,QACAoD,SAAU,CAAC,IAAO/P,GAAMd,EAAKW,OAAS,GAAK,GAAK,EAAK,GACrDmQ,MAAO,CAAC,GAAK,IAAO9Q,EAAKc,GAAK,GAAI,IAClCiQ,UAAW,CACT,CACEC,MAAOjG,IAAkB,IACzBnH,OAAQ,CAAC,EAAG,EAAG,S,gCAQjBuH,EAAI8F,EAAWjR,GACvB,IAAMyQ,EAAQnR,KAAKmR,MAEnB7D,GAAYzB,GAEZ,IAAM+F,EAAc,GAAK7P,KAAK4J,GAAK,IAC7BkG,EAAShG,EAAGxG,OAAOyM,YAAcjG,EAAGxG,OAAO0M,aAG3CpD,EAAmBiB,OACzBA,KAAiBjB,EAAkBiD,EAAaC,EAHlC,GACD,KAIb,IAAM3C,EAAaU,OACnBA,KAAeV,EAAYA,EAAYiC,EAAME,QAC7CzB,KAAYV,EAAYA,GAExB,IAAK,IAAI1N,EAAI,EAAGA,EAAI2P,EAAMC,OAAO/P,OAAQG,IAAK,CAC5C,IAAMwQ,EAAQb,EAAMC,OAAO5P,GAC3BxB,KAAKiS,aAAatD,EAAkBO,EAAY8C,GAChDhS,KAAKkS,cAAcF,EAAOL,EAAWjR,EAAKc,O,mCAIjCmN,EAAkBO,EAAY8C,GAGzC,IAFA,IAAM7D,EAAQ6D,EAAM7D,MACdgB,EAAcS,OACXpO,EAAI,EAAGA,EAAIwQ,EAAMP,UAAUpQ,OAAQG,IAAK,CAC/C,IAAM2Q,EAAWH,EAAMP,UAAUjQ,GACjCoO,KAAYT,EAAaA,EAAagD,EAAST,MAAOS,EAAS7N,QAEjEsL,KAAeT,EAAaA,EAAa6C,EAAMT,UAC/C3B,KAAWT,EAAaA,EAAa6C,EAAMR,OAC3CrD,EAAMF,KAAKU,EAAkBO,EAAYC,K,oCAG7B6C,EAAOL,EAAWhM,GAC9BqM,EAAMR,MAAM,GAAK,IAAO7L,EAAS,GACjCqM,EAAMP,UAAU,GAAGC,OAAqB,KAAZC,M,KCmEjBa,G,YAlIb,WAAYlT,GAAQ,IAAD,uBACjB,4CAAMA,KAEDmT,OAAS,CACZ,IAAI1B,GACJ,IAAIwB,IAIN,IADA,IAAM7R,EAAO,GACJc,EAAI,EAAGA,EAAI,IAAKA,IACvBd,EAAKxD,KAAKsE,GAVK,OAYjB,EAAK8C,OAAS,IAAI7D,EAAeC,EAAM,GAEvC,EAAKb,MAAQ,CACX6S,WAAY,EACZtO,SAAS,EACTC,WAAW,GAGb,EAAKE,IAAM,EAAKA,IAAIxE,KAAT,gBACX,EAAKyE,cAAgB,EAAKA,cAAczE,KAAnB,gBACrB,EAAK0E,cAAgB,EAAKA,cAAc1E,KAAnB,gBACrB,EAAK2E,iBAAmB,EAAKA,iBAAiB3E,KAAtB,gBACxB,EAAK4E,oBAAsB,EAAKA,oBAAoB5E,KAAzB,gBAC3B,EAAK6E,uBAAyB,EAAKA,uBAAuB7E,KAA5B,gBAC9B,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBACvB,EAAK+E,gBAAkB,EAAKA,gBAAgB/E,KAArB,gBACvB,EAAK4S,cAAgB,EAAKA,cAAc5S,KAAnB,gBACrB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBA7BH,E,iFAiCjB,IAAMsF,EAASrF,KAAKqF,OACdC,EAAOD,EAAOE,wBACpBF,EAAOI,MAAQH,EAAKG,MACpBJ,EAAOM,OAASL,EAAKK,OACrB3F,KAAK6L,GAAKxG,EAAOW,WAAW,SACZ,OAAZhG,KAAK6L,GACPc,MAAM,4EAEN3M,KAAK6L,GAAG4B,OAAOzN,KAAK6L,GAAG+G,WACvB5S,KAAK6L,GAAGgH,SAAS7S,KAAK6L,GAAGiH,MACzB9S,KAAKyS,OAAO,GAAGxB,UAAUjR,KAAK6L,GAAI7L,KAAKsE,OAAOzD,WAC9Cb,KAAKyS,OAAO,GAAGxB,UAAUjR,KAAK6L,GAAI7L,KAAKsE,OAAOzD,WAC9Cb,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,iB,6CAKjDE,OAAOE,qBAAqBnF,KAAKgF,S,0BAG/BI,GAAU,IAAD,OACXpF,KAAKC,SAAS,CAAEmE,SAAS,EAAMC,WAAW,IAAQ,WAChDe,EAAQ,YAAI,EAAKd,OAAOzD,WAAY,EAAKyD,OAAOxD,WAAY,EAAKwD,OAAOvD,QACxE,EAAKd,SAAS,CAAEmE,SAAS,S,sCAK3BpE,KAAKuE,IAAI1C,K,sCAIT7B,KAAKuE,IAAIpC,K,yCAITnC,KAAKuE,IAAIlC,K,4CAITrC,KAAKuE,IAAIhC,K,+CAITvC,KAAKuE,IAAI9B,K,wCAITzC,KAAKuE,IAAIlB,K,wCAITrD,KAAKuE,IAAIZ,K,sCAIT3D,KAAKC,SAAS,CACZyS,WAAY,EAAI1S,KAAKH,MAAM6S,e,mCAIlBzR,GACNjB,KAAKiB,YACRjB,KAAKiB,UAAYA,GAEnB,IAAM0Q,EAAY1Q,EAAYjB,KAAKiB,UACnCjB,KAAKiB,UAAYA,EALK,MAMMjB,KAAKsE,OAAOtD,QAAQC,GAAxCQ,EANc,EAMdA,UAAWf,EANG,EAMHA,KACde,GAAczB,KAAKH,MAAMuE,SAC5BpE,KAAKC,SAAS,CAAEoE,WAAW,IAE7BrE,KAAKyS,OAAOzS,KAAKH,MAAM6S,YAAYxB,UAAUlR,KAAK6L,GAAI8F,EAAWjR,GACjEV,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,+BAGvC,IAAD,OACP,OACE,kBAAC,EAAD,CAASjI,OAAK,GACZ,kBAAC,EAAD,CAAWO,OAAK,EAACX,UAAU,aACzB,kBAAC,EAAD,CAAK4J,IAAI,MACP,kBAAC,EAAD,CAAK9I,IAAI,KAAKd,UAAU,oDACtB,kBAAC,EAAD,CAAQqB,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAKwE,eAA7F,WACA,kBAAC,EAAD,CAAQzG,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAKyE,eAA7F,WACA,kBAAC,EAAD,CAAQ1G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK0E,kBAA7F,eACA,kBAAC,EAAD,CAAQ3G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK2E,qBAA7F,kBACA,kBAAC,EAAD,CAAQ5G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK4E,wBAA7F,yBACA,kBAAC,EAAD,CAAQ7G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK6E,iBAA7F,cACA,kBAAC,EAAD,CAAQ9G,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK8E,iBAA7F,iBAIN,4BAAQpI,UAAU,SAAS8J,IAAK,SAAAC,GAAI,OAAI,EAAKpB,OAASoB,GAAMtG,QAASH,KAAK2S,qB,GA7HzDvS,IAAMC,WCmEhB0S,G,WAtEb,WAAYC,GAAY,oBACtBhT,KAAKgT,UAAYA,EACjBhT,KAAKiR,UAAYjR,KAAKiR,UAAUlR,KAAKC,MACrCA,KAAKkR,UAAYlR,KAAKkR,UAAUnR,KAAKC,MACrCA,KAAKiT,aAAejT,KAAKiT,aAAalT,KAAKC,MAC3CA,KAAKkT,WAAa,E,sDAGVrH,EAAIsH,GACZ,IAAMhF,EAAQ,IAAInO,KAAKgT,UAAUnH,EAAIsH,GACrCnT,KAAKmR,MAAQ,CACXC,OAAQ,CACN,CACEjD,QACAoD,SAAU,CAAC,EAAK,IAAO,IAAM4B,EAAKxN,QAClCwM,SAAU,CAAET,MAAO,EAAK0B,KAAM,CAAC,EAAG,EAAG,GAAIC,MAAO,MAGpDhC,OAAQ,CAAC,EAAK,EAAK,M,gCAIbxF,EAAIsH,GACZ,IAAMhC,EAAQnR,KAAKmR,MAEnB7D,GAAYzB,GAEZ,IAAM+F,EAAc,GAAK7P,KAAK4J,GAAK,IAC7BkG,EAAShG,EAAGxG,OAAOyM,YAAcjG,EAAGxG,OAAO0M,aAG3CpD,EAAmBiB,OACzBA,KAAiBjB,EAAkBiD,EAAaC,EAHlC,GACD,KAIb,IAAM3C,EAAaU,OACnBA,KAAeV,EAAYA,EAAYiC,EAAME,QAC7CzB,KAAYV,EAAYA,GAExB,IAAK,IAAI1N,EAAI,EAAGA,EAAI2P,EAAMC,OAAO/P,OAAQG,IAAK,CAC5C,IAAMwQ,EAAQb,EAAMC,OAAO5P,GAC3BwQ,EAAM7D,MAAMpN,OAAOoS,GACnBnT,KAAKiS,aAAatD,EAAkBO,EAAY8C,M,mCAIvCrD,EAAkBO,EAAY8C,GACzC,IAAM7D,EAAQ6D,EAAM7D,MAEdgB,EAAcS,OACpBA,KAAeT,EAAaA,EAAa6C,EAAMT,UAC/C3B,KAAYT,EAAaA,EAAa1D,IAAkB,IAAK,CAAC,EAAG,EAAG,IACpEmE,KAAYT,EAAaA,EAAa6C,EAAMG,SAAST,MAAOM,EAAMG,SAASiB,MAE3EjF,EAAMF,KAAKU,EAAkBO,EAAYC,K,mCAG9BwC,GAGX,IAFA,IAAMR,EAAQnR,KAAKmR,MAEV3P,EAAI,EAAGA,EAAI2P,EAAMC,OAAO/P,OAAQG,IAAK,CAC5C,IAAMwQ,EAAQb,EAAMC,OAAO5P,GAC3BxB,KAAKkS,cAAcP,EAAWK,M,oCAIpBL,EAAWK,GACvBA,EAAMG,SAAST,OAAqB,KAAZC,EAAoBK,EAAMG,SAASkB,U,KC8JhDL,G,WAhOb,WAAYnH,EAAIsH,GAAO,oBACrBnT,KAAK6L,GAAKA,EACV7L,KAAKmT,KAAOA,EACZnT,KAAKiO,KAAOjO,KAAKiO,KAAKlO,KAAKC,MAC3B,IAAMqM,EAAgBrM,KAAKkO,aAAarC,GACxC7L,KAAKmO,MAAQ,CACXC,QAAS/B,EACTgC,gBAAiB,CACfC,eAAgBzC,EAAG0C,kBAAkBlC,EAAe,mBACpDmC,YAAa3C,EAAG0C,kBAAkBlC,EAAe,iBAEnDqC,iBAAkB,CAChBC,iBAAkB9C,EAAG+C,mBAAmBvC,EAAe,qBACvDwC,gBAAiBhD,EAAG+C,mBAAmBvC,EAAe,qBAExD2C,QAAShP,KAAKiP,aAAapD,EAAIsH,I,mDAI5BA,GACLnT,KAAKsT,aAAatT,KAAK6L,GAAI7L,KAAKmO,MAAMa,SACtChP,KAAKmT,KAAOA,EACZnT,KAAKmO,MAAMa,QAAUhP,KAAKiP,aAAajP,KAAK6L,GAAIsH,K,2BAG7CxE,EAAkBO,EAAYC,GACjC,IAAMtD,EAAK7L,KAAK6L,GACVsC,EAAQnO,KAAKmO,MACXa,EAAYhP,KAAKmO,MAAjBa,QAIAxP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQD,UACvClD,EAAG0D,oBAAoBpB,EAAME,gBAAgBC,eANvB,EAMsD9O,GAJ1D,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBC,gBAIjD,IACM9O,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQxO,OACvCqL,EAAG0D,oBAAoBpB,EAAME,gBAAgBG,YANvB,EAMmDhP,GAJvD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBG,aAGnD3C,EAAGwD,WAAWxD,EAAG6D,qBAAsBV,EAAQW,SAE/C,IAAMd,EAAkBe,OACxBA,KAAcf,EAAiBK,EAAYC,GAE3CtD,EAAGgE,WAAW1B,EAAMC,SACpBvC,EAAGiE,iBAAiB3B,EAAMO,iBAAiBC,kBAAkB,EAAOA,GACpE9C,EAAGiE,iBAAiB3B,EAAMO,iBAAiBG,iBAAiB,EAAOA,GAGjE,IAAM0E,EAAcvE,EAAQuE,YACtB/T,EAAOqM,EAAGmE,eAEhBnE,EAAGoE,aAAapE,EAAGqE,UAAWqD,EAAa/T,EAD5B,K,mCAKNqM,GAwBX,OAAOD,GAAkBC,EAvBX,yVAeA,iH,mCAWHA,EAAIsH,GA2Ef,IA1EA,IAAMK,EAAY,GACZrI,EAAS,GACTwE,EAAU,GACZ8D,EAAS,EAEPC,EAAc,SAACC,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,GACnDgT,EAAUtW,KAENyW,EAAME,EAAKE,EACXH,EAAOC,EAAKE,EACZH,EAAOE,EAAQC,EACfJ,EAAMG,EAAQC,GAElBpE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBkS,EAAc,SAACL,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,GACnDgT,EAAUtW,KAENyW,EAAMI,EAAMF,EACZD,EAAOG,EAAMF,EACbD,EAAOG,EAAMD,EACbH,EAAMI,EAAMD,GAEhBnE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBmS,EAAc,SAACN,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,GACnDgT,EAAUtW,KAEN6W,EAAMJ,EAAME,EACZE,EAAMH,EAAOC,EACbE,EAAMH,EAAOE,EACbC,EAAMJ,EAAMG,GAEhBnE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBoS,EAAa,CAAC,GAAI,GAAI,GAAI,GAC1BC,EAAe,CAAC,GAAI,GAAI,GAAI,GAC5BC,EAAgB,CAAC,GAAI,EAAG,GAAI,GAC5BC,EAAmB,CAAC,EAAG,GAAI,EAAG,GAC9BC,EAAiB,CAAC,GAAI,EAAG,EAAG,GAC5BC,EAAkB,CAAC,EAAG,EAAI,GAAI,GAE9BC,GAASrB,EAAK1N,MAAQ,EACtBgP,GAAStB,EAAKxN,OAAS,EACpBiB,EAAI,EAAGA,EAAIuM,EAAKxN,OAAQiB,IAC/B,IAAK,IAAIhJ,EAAI,EAAGA,EAAIuV,EAAK1N,MAAO7H,IAAK,CACnC,IAAM+V,EAAO/V,EAAI4W,EACXZ,EAAQD,EAAO,EACfE,EAAMjN,EAAI6N,EACVX,EAASD,EAAM,EAEG,IAApBV,EAAKzS,KAAKkG,GAAGhJ,GACf8V,EAAYC,EAAMC,EAAOC,EAAKC,EAAQ,EAAKI,IAE3CR,EAAYC,EAAMC,EAAOC,EAAKC,EAAQ,EAAKK,GAEjC,IAANvN,GAAmC,IAAxBuM,EAAKzS,KAAKkG,EAAI,GAAGhJ,IAC9BoW,EAAYL,EAAMC,EAAO,EAAK,EAAKC,EAAKO,GAGhC,IAANxW,GAAmC,IAAxBuV,EAAKzS,KAAKkG,GAAGhJ,EAAI,IAC9BqW,EAAYH,EAAQD,EAAK,EAAK,EAAKF,EAAMW,GAGvC1N,IAAMuM,EAAKxN,OAAS,GAA6B,IAAxBwN,EAAKzS,KAAKkG,EAAI,GAAGhJ,IAC5CoW,EAAYJ,EAAOD,EAAM,EAAK,EAAKG,EAAQO,GAGzCzW,IAAMuV,EAAK1N,MAAQ,GAA6B,IAAxB0N,EAAKzS,KAAKkG,GAAGhJ,EAAI,IAC3CqW,EAAYJ,EAAKC,EAAQ,EAAK,EAAKF,EAAOW,IAMlD,IAAMpE,EAAiBtE,EAAGuE,eAC1BvE,EAAGwD,WAAWxD,EAAGyD,aAAca,GAC/BtE,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAakD,GAAY3H,EAAG0E,aAE/D,IAAMK,EAAc/E,EAAGuE,eACvBvE,EAAGwD,WAAWxD,EAAGyD,aAAcsB,GAC/B/E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAanF,GAASU,EAAG0E,aAE5D,IAAMM,EAAchF,EAAGuE,eAIvB,OAHAvE,EAAGwD,WAAWxD,EAAG6D,qBAAsBmB,GACvChF,EAAGwE,WAAWxE,EAAG6D,qBAAsB,IAAIoB,YAAYnB,GAAU9D,EAAG0E,aAE7D,CAAExB,SAAUoB,EAAgB3P,MAAOoQ,EAAajB,QAASkB,EAAa0C,YAAa5D,EAAQtO,U,mCAGvFwK,EAAImD,GACfnD,EAAG6I,aAAa1F,EAAQD,UACxBlD,EAAG6I,aAAa1F,EAAQxO,OACxBqL,EAAG6I,aAAa1F,EAAQW,a,KCgFbqD,G,WA5Sb,WAAYnH,EAAIsH,GAAO,oBACrBnT,KAAK6L,GAAKA,EACV7L,KAAKmT,KAAOA,EACZnT,KAAKiO,KAAOjO,KAAKiO,KAAKlO,KAAKC,MAC3B,IAAMqM,EAAgBrM,KAAKkO,aAAarC,GACxC7L,KAAKmO,MAAQ,CACXC,QAAS/B,EACTgC,gBAAiB,CACfC,eAAgBzC,EAAG0C,kBAAkBlC,EAAe,QACpDmC,YAAa3C,EAAG0C,kBAAkBlC,EAAe,aACjDoC,aAAc5C,EAAG0C,kBAAkBlC,EAAe,eAEpDqC,iBAAkB,CAChBC,iBAAkB9C,EAAG+C,mBAAmBvC,EAAe,qBACvD6C,WAAYrD,EAAG+C,mBAAmBvC,EAAe,eACjD8C,YAAatD,EAAG+C,mBAAmBvC,EAAe,gBAClDyC,aAAcjD,EAAG+C,mBAAmBvC,EAAe,iBACnD7N,MAAO,CACLuQ,SAAUlD,EAAG+C,mBAAmBvC,EAAe,kBAC/C7L,MAAOqL,EAAG+C,mBAAmBvC,EAAe,iBAGhD2C,QAAShP,KAAKiP,aAAapD,EAAIsH,I,mDAI5BA,GACLnT,KAAKsT,aAAatT,KAAK6L,GAAI7L,KAAKmO,MAAMa,SACtChP,KAAKmT,KAAOA,EACZnT,KAAKmO,MAAMa,QAAUhP,KAAKiP,aAAajP,KAAK6L,GAAIsH,K,2BAG7CxE,EAAkBO,EAAYC,GACjC,IAAMtD,EAAK7L,KAAK6L,GACVsC,EAAQnO,KAAKmO,MACXa,EAAYhP,KAAKmO,MAAjBa,QAIAxP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQD,UACvClD,EAAG0D,oBAAoBpB,EAAME,gBAAgBC,eANvB,EAMsD9O,GAJ1D,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBC,gBAIjD,IACM9O,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQS,QACvC5D,EAAG0D,oBAAoBpB,EAAME,gBAAgBI,aANvB,EAMoDjP,GAJxD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBI,cAIjD,IACMjP,EAAOqM,EAAGuD,MAIhBvD,EAAGwD,WAAWxD,EAAGyD,aAAcN,EAAQxO,OACvCqL,EAAG0D,oBAAoBpB,EAAME,gBAAgBG,YANvB,EAMmDhP,GAJvD,EACH,EACA,GAGfqM,EAAG2D,wBAAwBrB,EAAME,gBAAgBG,aAGnD3C,EAAGwD,WAAWxD,EAAG6D,qBAAsBV,EAAQW,SAE/C,IAAMb,EAAec,OACrBA,KAAYd,EAAcK,GAC1BS,KAAed,EAAcA,GAE7BjD,EAAGgE,WAAW1B,EAAMC,SACpBvC,EAAGiE,iBAAiB3B,EAAMO,iBAAiBC,kBAAkB,EAAOA,GACpE9C,EAAGiE,iBAAiB3B,EAAMO,iBAAiBS,aAAa,EAAOA,GAC/DtD,EAAGiE,iBAAiB3B,EAAMO,iBAAiBQ,YAAY,EAAOA,GAC9DrD,EAAGiE,iBAAiB3B,EAAMO,iBAAiBI,cAAc,EAAOA,GAEhEjD,EAAGkE,UAAU5B,EAAMO,iBAAiBlQ,MAAMuQ,SAAU,EAAK,GAAM,GAC/DlD,EAAGkE,UAAU5B,EAAMO,iBAAiBlQ,MAAMgC,MAAO,EAAK,EAAK,GAGzD,IAAM+S,EAAcvE,EAAQuE,YACtB/T,EAAOqM,EAAGmE,eAEhBnE,EAAGoE,aAAapE,EAAGqE,UAAWqD,EAAa/T,EAD5B,K,mCAKNqM,GAiDX,OAAOD,GAAkBC,EAhDX,opBAwBA,isB,mCA2BHA,EAAIsH,GAkGf,IAjGA,IAAMK,EAAY,GACZmB,EAAU,GACVxJ,EAAS,GACTwE,EAAU,GACZ8D,EAAS,EAEPC,EAAc,SAACC,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,EAAOiP,GAC1D+D,EAAUtW,KAENyW,EAAME,EAAKE,EACXH,EAAOC,EAAKE,EACZH,EAAOE,EAAQC,EACfJ,EAAMG,EAAQC,GAElBpE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrB6S,EAAQzX,KAAKuS,EAAO3N,IAGxB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBkS,EAAc,SAACL,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,EAAOiP,GAC1D+D,EAAUtW,KAENyW,EAAMI,EAAMF,EACZD,EAAOG,EAAMF,EACbD,EAAOG,EAAMD,EACbH,EAAMI,EAAMD,GAEhBnE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrB6S,EAAQzX,KAAKuS,EAAO3N,IAGxB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBmS,EAAc,SAACN,EAAMC,EAAOC,EAAKC,EAAQC,EAAMvT,EAAOiP,GAC1D+D,EAAUtW,KAEN6W,EAAMJ,EAAME,EACZE,EAAMH,EAAOC,EACbE,EAAMH,EAAOE,EACbC,EAAMJ,EAAMG,GAEhBnE,EAAQzS,KAEJuW,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,EAAGA,EAAS,GAEzEA,GAAU,EACV,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrB6S,EAAQzX,KAAKuS,EAAO3N,IAGxB,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACrBqJ,EAAOjO,KAAKsD,EAAMsB,KAKlBoS,EAAa,CAAC,IAAM,IAAM,IAAM,GAChCC,EAAe,CAAC,EAAK,EAAK,EAAK,GAC/BC,EAAgB,CAAC,IAAM,GAAK,EAAK,GACjCC,EAAmB,CAAC,IAAM,GAAK,EAAK,GACpCC,EAAiB,CAAC,IAAM,GAAK,EAAK,GAClCC,EAAkB,CAAC,IAAM,GAAK,EAAK,GAEnCK,EAAc,CAAC,EAAK,EAAK,GACzBC,EAAgB,CAAC,EAAK,EAAK,GAC3BC,EAAiB,CAAC,GAAM,EAAK,GAC7BC,EAAoB,CAAC,EAAK,EAAK,GAC/BC,EAAkB,EAAE,EAAK,EAAK,GAC9BC,EAAmB,CAAC,EAAK,EAAK,GAE9BT,GAASrB,EAAK1N,MAAQ,EACtBgP,GAAStB,EAAKxN,OAAS,EACpBiB,EAAI,EAAGA,EAAIuM,EAAKxN,OAAQiB,IAC/B,IAAK,IAAIhJ,EAAI,EAAGA,EAAIuV,EAAK1N,MAAO7H,IAAK,CACnC,IAAM+V,EAAO/V,EAAI4W,EACXZ,EAAQD,EAAO,EACfE,EAAMjN,EAAI6N,EACVX,EAASD,EAAM,EAEG,IAApBV,EAAKzS,KAAKkG,GAAGhJ,GACf8V,EAAYC,EAAMC,EAAOC,EAAKC,EAAQ,EAAKI,EAAYU,IAEvDlB,EAAYC,EAAMC,EAAOC,EAAKC,EAAQ,EAAKK,EAAcU,GAE/C,IAANjO,GAAmC,IAAxBuM,EAAKzS,KAAKkG,EAAI,GAAGhJ,IAC9BoW,EAAYL,EAAMC,EAAO,EAAK,EAAKC,EAAKO,EAAeU,GAG/C,IAANlX,GAAmC,IAAxBuV,EAAKzS,KAAKkG,GAAGhJ,EAAI,IAC9BqW,EAAYH,EAAQD,EAAK,EAAK,EAAKF,EAAMW,EAAgBU,GAGvDpO,IAAMuM,EAAKxN,OAAS,GAA6B,IAAxBwN,EAAKzS,KAAKkG,EAAI,GAAGhJ,IAC5CoW,EAAYJ,EAAOD,EAAM,EAAK,EAAKG,EAAQO,EAAkBU,GAG3DnX,IAAMuV,EAAK1N,MAAQ,GAA6B,IAAxB0N,EAAKzS,KAAKkG,GAAGhJ,EAAI,IAC3CqW,EAAYJ,EAAKC,EAAQ,EAAK,EAAKF,EAAOW,EAAiBU,IAMnE,IAAM9E,EAAiBtE,EAAGuE,eAC1BvE,EAAGwD,WAAWxD,EAAGyD,aAAca,GAC/BtE,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAakD,GAAY3H,EAAG0E,aAE/D,IAAMC,EAAe3E,EAAGuE,eACxBvE,EAAGwD,WAAWxD,EAAGyD,aAAckB,GAC/B3E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAaqE,GAAU9I,EAAG0E,aAE7D,IAAMK,EAAc/E,EAAGuE,eACvBvE,EAAGwD,WAAWxD,EAAGyD,aAAcsB,GAC/B/E,EAAGwE,WAAWxE,EAAGyD,aAAc,IAAIgB,aAAanF,GAASU,EAAG0E,aAE5D,IAAMM,EAAchF,EAAGuE,eAIvB,OAHAvE,EAAGwD,WAAWxD,EAAG6D,qBAAsBmB,GACvChF,EAAGwE,WAAWxE,EAAG6D,qBAAsB,IAAIoB,YAAYnB,GAAU9D,EAAG0E,aAE7D,CAAExB,SAAUoB,EAAgBV,OAAQe,EAAchQ,MAAOoQ,EAAajB,QAASkB,EAAa0C,YAAa5D,EAAQtO,U,mCAG7GwK,EAAImD,GACfnD,EAAG6I,aAAa1F,EAAQD,UACxBlD,EAAG6I,aAAa1F,EAAQxO,OACxBqL,EAAG6I,aAAa1F,EAAQW,a,KCpStBpM,GAAO,GA+GE2R,G,YA5Gb,WAAY5V,GAAQ,IAAD,uBACjB,4CAAMA,KAEDmT,OAAS,CACZ,IAAIM,GAAUC,IACd,IAAID,GAAUoC,KAIhB,IADA,IAAMzU,EAAO,GACJc,EAAI,EAAGA,EAAI+B,GAAM/B,IACxBd,EAAKxD,KAAKO,MAAM8F,IAAMkE,KAAK,IAVZ,OAYjB,EAAKiD,KAAO,IAAIhE,EAAahG,EAAM,IAEnC,EAAKb,MAAQ,CACX6S,WAAY,EACZtO,SAAS,EACTC,WAAW,GAGb,EAAKE,IAAM,EAAKA,IAAIxE,KAAT,gBACX,EAAK4K,kBAAoB,EAAKA,kBAAkB5K,KAAvB,gBACzB,EAAK6K,qBAAuB,EAAKA,qBAAqB7K,KAA1B,gBAC5B,EAAK4S,cAAgB,EAAKA,cAAc5S,KAAnB,gBACrB,EAAKgF,aAAe,EAAKA,aAAahF,KAAlB,gBAxBH,E,iFA4BjB,IAAMsF,EAASrF,KAAKqF,OACdC,EAAOD,EAAOE,wBAIpB,GAHAF,EAAOI,MAAQH,EAAKG,MACpBJ,EAAOM,OAASL,EAAKK,OACrB3F,KAAK6L,GAAKxG,EAAOW,WAAW,SACZ,OAAZhG,KAAK6L,GACPc,MAAM,+EACD,CACL3M,KAAK6L,GAAG4B,OAAOzN,KAAK6L,GAAG+G,WACvB5S,KAAK6L,GAAGgH,SAAS7S,KAAK6L,GAAGiH,MACzB,IAAMK,EAAO,CAAE1N,MAAOlC,GAAMoC,OAAQpC,GAAM7C,KAAMV,KAAK0K,KAAK7J,WAC1Db,KAAKyS,OAAO,GAAGxB,UAAUjR,KAAK6L,GAAIsH,GAClCnT,KAAKyS,OAAO,GAAGxB,UAAUjR,KAAK6L,GAAIsH,GAClCnT,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,iB,6CAKjDE,OAAOE,qBAAqBnF,KAAKgF,S,0BAG/BI,GAAU,IAAD,OACXpF,KAAKC,SAAS,CAAEmE,SAAS,EAAMC,WAAW,IAAQ,WAChDe,EAAQ,EAAKlE,OAAO,EAAKwJ,KAAK7J,WAAY,EAAK6J,KAAK5J,WAAY,EAAK4J,KAAK3J,QAC1E,EAAKd,SAAS,CAAEmE,SAAS,S,0CAK3BpE,KAAKuE,IAAIuC,K,6CAIT9G,KAAKuE,IAAI2C,K,oCAGGkO,GAAQ,IAAD,OACnBpV,KAAKC,SAAS,CACZyS,WAAY,EAAI1S,KAAKH,MAAM6S,aAC1B,WAAQ2C,QAAQC,IAAI,EAAKzV,Y,mCAGjBoB,GACNjB,KAAKiB,YACRjB,KAAKiB,UAAYA,GAEnB,IAAM0Q,EAAY1Q,EAAYjB,KAAKiB,UACnCjB,KAAKiB,UAAYA,EALK,MAMMjB,KAAK0K,KAAK1J,QAAQC,GAAtCQ,EANc,EAMdA,UAAWf,EANG,EAMHA,KACde,GAAczB,KAAKH,MAAMuE,SAC5BpE,KAAKC,SAAS,CAAEoE,WAAW,IAE7BrE,KAAKyS,OAAOzS,KAAKH,MAAM6S,YAAYxB,UAAUlR,KAAK6L,GAAI,CAAEpG,MAAOlC,GAAMoC,OAAQpC,GAAM7C,SACnF,IAAK,IAAIc,EAAI,EAAGA,EAAIxB,KAAKyS,OAAOpR,OAAQG,IACtCxB,KAAKyS,OAAOjR,GAAGyR,aAAatB,GAE9B3R,KAAKgF,MAAQC,OAAOC,sBAAsBlF,KAAK+E,gB,6BAG1CrD,GAAQ,IAAD,OACZ,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAInE,MAAMC,QAAQkE,GAAQ,EAAKV,OAAOU,GAAQA,O,+BAG3D,IAAD,OACP,OACE,kBAAC,EAAD,CAAS9E,OAAK,GACZ,kBAAC,EAAD,CAAWO,OAAK,EAACX,UAAU,aACzB,kBAAC,EAAD,CAAK4J,IAAI,MACP,kBAAC,EAAD,CAAK9I,IAAI,KAAKd,UAAU,oDACtB,kBAAC,EAAD,CAAQqB,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK2K,mBAA7F,eACA,kBAAC,EAAD,CAAQ5M,OAAO,UAAUwI,SAAUvG,KAAKH,MAAMuE,SAAWpE,KAAKH,MAAMwE,UAAWlE,QAASH,KAAK4K,sBAA7F,qBAIN,4BAAQlO,UAAU,SAAS8J,IAAK,SAAAC,GAAI,OAAI,EAAKpB,OAASoB,GAAMtG,QAASH,KAAK2S,qB,GAvGzDvS,IAAMC,WCiBhBkV,GAjBH,WACV,OACE,kBAAC,EAAD,CAAS1Y,OAAK,GACZ,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASD,MAAI,EAACG,QAAM,GAClB,kBAAC,IAAD,CAAOyY,OAAK,EAACC,KAAK,IAAIC,UAAWpV,IACjC,kBAAC,IAAD,CAAOmV,KAAK,QAAQC,UAAWvR,IAC/B,kBAAC,IAAD,CAAOsR,KAAK,QAAQC,UAAWjL,IAC/B,kBAAC,IAAD,CAAOgL,KAAK,UAAUC,UAAWlD,KACjC,kBAAC,IAAD,CAAOiD,KAAK,UAAUC,UAAWR,QCTrBS,QACW,cAA7B1Q,OAAOsM,SAASqE,UAEe,UAA7B3Q,OAAOsM,SAASqE,UAEhB3Q,OAAOsM,SAASqE,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAS,eACf,kBAAC,IAAD,CAAOP,KAAK,IAAIC,UAAWH,MAE7BU,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e7954936.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, inner, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (inner) classes.push('section-inner')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.onClickExpand = this.onClickExpand.bind(this)\r\n    }\r\n\r\n    onClickExpand() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar large dark>\r\n                <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n                <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n                    <NavBarNav>\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n                        <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n                        <Link to=\"/sort3d\" className=\"nav-link\">Sort 3D</Link>\r\n                        <Link to=\"/maze3d\" className=\"nav-link\">Maze 3D</Link>\r\n                    </NavBarNav>\r\n                </NavBarToggler>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n    <Route path=\"/maze\" component={MazePage} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'black' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","/** Class representing an animated array of values. */\r\nclass AnimatedVector {\r\n  /**\r\n   * Create an animated vector.\r\n   * @param {*[]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value pairs. [index, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 2) {\r\n        this.data[updates[i]] = updates[i + 1];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedVector;\r\n","export function shuffle(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = n - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function reverse(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 0; i < n / 2; i++) {\r\n    const j = n - i - 1;\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function bubbleSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length - 1;\r\n  for (let i = 0; i < n; i++) {\r\n    let count = 0;\r\n    for (let j = 0; j < n - i; j++) {\r\n      if (data[j] > data[j + 1]) {\r\n        _swap(data, j, j + 1);\r\n        update([j, data[j], j + 1, data[j + 1]]);\r\n        count++;\r\n      }\r\n    }\r\n    if (count === 0) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nexport function insertionSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 1; i < n; i++) {\r\n    const key = data[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && data[j] > key) {\r\n      data[j + 1] = data[j];\r\n      update([j + 1, data[j + 1]]);\r\n      j = j - 1;\r\n    }\r\n    data[j + 1] = key;\r\n    update([j + 1, data[j + 1]]);\r\n  }\r\n}\r\n\r\nexport function mergeSortInPlace(data, initialize, update) {\r\n  initialize();\r\n  const sort = (data, l, r) => {\r\n    if (l < r) {\r\n      const m = Math.floor(l + (r - l) / 2);\r\n      sort(data, l, m);\r\n      sort(data, m + 1, r);\r\n      merge(data, l, m, r);\r\n    }\r\n  }\r\n  const merge = (data, start, mid, end) => {\r\n    if (data[mid] < data[mid + 1]) {\r\n      return;\r\n    }\r\n    let start2 = mid + 1;\r\n    while (start <= mid && start2 <= end) {\r\n      if (data[start] <= data[start2]) {\r\n        start++;\r\n      }\r\n      else {\r\n        const value = data[start2];\r\n        let index = start2;\r\n        while (index !== start) {\r\n          data[index] = data[index - 1];\r\n          update([index, data[index]]);\r\n          index--;\r\n        }\r\n        data[start] = value;\r\n        update([start, data[start]]);\r\n        start++;\r\n        mid++;\r\n        start2++;\r\n      }\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nexport function mergeSort(data, initialize, update) {\r\n  initialize();\r\n  const aux = new Array(data.size);\r\n  const sort = (data, l, r) => {\r\n    if (l < r) {\r\n      const m = Math.floor(l + (r - l) / 2);\r\n      sort(data, l, m);\r\n      sort(data, m + 1, r);\r\n      merge(data, l, m, r);\r\n    }\r\n  }\r\n  const merge = (data, start, mid, end) => {\r\n    if (data[mid] < data[mid + 1]) {\r\n      return;\r\n    }\r\n    const n = end - start + 1\r\n    for (let i = 0; i < n; i++) {\r\n      aux[i] = data[i + start]\r\n    }\r\n    const n1 = mid - start + 1;\r\n    const n2 = end - start + 1;\r\n    let i = 0;\r\n    let j = n1;\r\n    let k = start;\r\n    while (i < n1 && j < n2) {\r\n      if (aux[i] <= aux[j]) {\r\n        data[k] = aux[i];\r\n        update([k, data[k]]);\r\n        i++;\r\n      }\r\n      else {\r\n        data[k] = aux[j];\r\n        update([k, data[k]]);\r\n        j++;\r\n      }\r\n      k++;\r\n    }\r\n    while (i < n1) {\r\n      data[k] = aux[i];\r\n      update([k, data[k]]);\r\n      i++;\r\n      k++;\r\n    }\r\n    while (j < n2) {\r\n      data[k] = aux[j];\r\n      update([k, data[k]]);\r\n      j++;\r\n      k++;\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nexport function quickSort(data, initialize, update) {\r\n  initialize();\r\n  const partition = (data, low, high) => {\r\n    if (high - low > 2) {\r\n      const mid = Math.floor(low + (high - low) / 2);\r\n      if (data[low] < data[mid] && data[mid] < data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n      else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n    }\r\n    const pivot = data[high];\r\n    let i = (low - 1);\r\n    for (let j = low; j <= high - 1; j++) {\r\n      if (data[j] < pivot) {\r\n        i++;\r\n        _swap(data, i, j);\r\n        update([i, data[i], j, data[j]]);\r\n      }\r\n    }\r\n    _swap(data, i + 1, high);\r\n    update([i + 1, data[i + 1], high, data[high]]);\r\n    return (i + 1);\r\n  }\r\n  const sort = async (data, low, high) => {\r\n    if (low < high) {\r\n      const mid = partition(data, low, high);\r\n      sort(data, low, mid - 1);\r\n      sort(data, mid + 1, high);\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nfunction _swap(data, i, j) {\r\n  const t = data[i];\r\n  data[i] = data[j];\r\n  data[j] = t;\r\n}\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedVector from '../lib/AnimatedVector'\r\nimport { shuffle, reverse, bubbleSort, insertionSort, mergeSortInPlace, mergeSort, quickSort } from '../lib/sort'\r\nimport { drawBars } from '../lib/drawing'\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.vector = new AnimatedVector(data, 8);\r\n\r\n    this.run = this.run.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortInPlaceAction = this.mergeSortInPlaceAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine([...this.vector.getData()], this.vector.initialize, this.vector.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.run(shuffle);\r\n  }\r\n\r\n  reverseAction() {\r\n    this.run(reverse);\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.run(bubbleSort);\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.run(insertionSort);\r\n  }\r\n\r\n  mergeSortInPlaceAction() {\r\n    this.run(mergeSortInPlace);\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.run(mergeSort);\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.run(quickSort);\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.vector.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    drawBars(this.canvas, data);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-5\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortInPlaceAction}>Merge Sort (In Place)</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"flex-grow-1\" ref={elem => this.canvas = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","export function drawBars(canvas, data) {\r\n  const n = data.length;\r\n  const rect = canvas.getBoundingClientRect()\r\n  const w = rect.width;\r\n  const h = rect.height;\r\n  const r = window.devicePixelRatio;\r\n  canvas.width = w * r;\r\n  canvas.height = h * r;\r\n  const step = Math.floor(w / n) * .9;\r\n  const barWidth = Math.floor(step * .8);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  ctx.fillStyle = 'black'\r\n  for (let i = 0; i < n; i++) {\r\n    const barHeight = Math.floor((data[i] + 1) / 100 * .8 * h);\r\n    ctx.fillRect(.05 * w + i * step, .9 * h - barHeight, barWidth, barHeight);\r\n  }\r\n}\r\n\r\nexport function drawGrid(canvas, data, colors) {\r\n  const n = data.length;\r\n  const m = data[0].length;\r\n  const rect = canvas.getBoundingClientRect()\r\n  const w = rect.width;\r\n  const h = rect.height;\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n  const xstep = Math.floor(w / m);\r\n  const ystep = Math.floor(h / n);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  for (let y = 0; y < n; y++) {\r\n    for (let x = 0; x < m; x++) {\r\n      ctx.fillStyle = colors[data[y][x]];\r\n      ctx.fillRect(x * xstep, y * ystep, xstep, ystep);\r\n    }\r\n  }\r\n}\r\n","/** Class representing an animated two-dimensional array of values. */\r\nclass AnimatedGrid {\r\n  /**\r\n   * Create an animated grid.\r\n   * @param {*[][]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[][]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[][]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value triplets. [index1, index0, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[][]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 3) {\r\n        this.data[updates[i + 1]][updates[i]] = updates[i + 2];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedGrid;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nexport function createMaze(data, initialize, update) {\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  _createMaze(data, update, _carve, { x: 1, y: 1 });\r\n}\r\n\r\nexport function createDungeon(data, initialize, update) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const incrementRegion = (data, pos) => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n  _addRooms(data, update, mx, my, incrementRegion, carveRegion, 256, 4);\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] === 0) {\r\n        continue;\r\n      }\r\n      region++;\r\n      _createMaze(data, update, carveRegion, { x, y });\r\n    }\r\n  }\r\n  _connectRegions(data, update, mx, my, region, regions);\r\n  _removeDeadEnds(data, update, mx, my);\r\n}\r\n\r\nfunction _reset(data, value) {\r\n  const my = data.length;\r\n  for (let y = 0; y < my; y++) {\r\n    data[y].fill(value);\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, update, carve = _carve, start) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(data, start);\r\n  update([start.x, start.y, data[start.y][start.x]]);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < directions.length; i++) {\r\n      const dir = directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carve(data, c1);\r\n      carve(data, c2);\r\n      update([c1.x, c1.y, data[c1.y][c1.x], c2.x, c2.y, data[c2.y][c2.x]]);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _addRooms(data, update, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      const updates = [];\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset });\r\n        updates.push(x + xOffset, y + yOffset, data[y + yOffset][x + xOffset])\r\n      }\r\n      update(updates);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, update, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    update([connector.x, connector.y, data[connector.y][connector.x]]);\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n        update([con.x, con.y, data[con.y][con.x]]);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, update, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n        update([x, y, data[y][x]]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedGrid from '../lib/AnimatedGrid'\r\nimport { drawGrid } from '../lib/drawing'\r\nimport { createMaze, createDungeon } from '../lib/maze'\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = []\r\n    for (let i = 0; i < 99; i++) {\r\n      data.push(Array(99).fill(1));\r\n    }\r\n\r\n    this.grid = new AnimatedGrid(data, 6);\r\n\r\n    this.run = this.run.bind(this)\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onResize = this.onResize.bind(this)\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n\r\n    this.state = {\r\n      running: false,\r\n      rendering: false,\r\n      screenWidth: window.screen.width,\r\n      screenHeight: window.screen.height\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize)\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize)\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine(this._clone(this.grid.getData()), this.grid.initialize, this.grid.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(createDungeon);\r\n  }\r\n\r\n  onResize() {\r\n    if (window.screen.width !== this.width || window.screen.height !== this.height) {\r\n      this.width = window.screen.width;\r\n      this.height = window.screen.height;\r\n      this.setState({ screenWidth: this.width, screenHeight: this.height });\r\n    }\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.grid.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    drawGrid(this.canvas, data, ['black', 'sienna']);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n\r\n  render() {\r\n    let col1 = \"sm-6\";\r\n    let col2 = \"sm-6\";\r\n    if (this.state.screenWidth / this.state.screenHeight < 16 / 9) {\r\n      col1 = \"sm-8\";\r\n      col2 = \"sm-4\";\r\n    }\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"h-100 mt-5\">\r\n          <Row className=\"h-100\">\r\n            <Col col={col1}>\r\n              <canvas className=\"w-100 h-100\" ref={elem => this.canvas = elem} />\r\n            </Col>\r\n            <Col col={col2} className=\"d-flex flex-column justify-content-around align-items-start\">\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass CubeModel {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'vert'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'vertColor'),\r\n        vertexNormal: gl.getAttribLocation(shaderProgram, 'vertNormal')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'camera'),\r\n        modelViewMatrix: gl.getUniformLocation(shaderProgram, 'model'),\r\n        normalMatrix: gl.getUniformLocation(shaderProgram, 'normalMatrix'),\r\n        light: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light.color')\r\n        }\r\n      },\r\n      buffers: this._initBuffers(gl)\r\n    }\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.normal);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexNormal);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const modelViewMatrix = mat4.create();\r\n    mat4.multiply(modelViewMatrix, viewMatrix, modelMatrix);\r\n\r\n    const normalMatrix = mat4.create();\r\n    mat4.invert(normalMatrix, modelViewMatrix);\r\n    mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.normalMatrix, false, normalMatrix);\r\n    gl.uniform3f(model.uniformLocations.light.position, 50.0, 10.0, 20.0);\r\n    gl.uniform3f(model.uniformLocations.light.color, 1.0, 1.0, 1.0);\r\n\r\n    {\r\n      const vertexCount = 36;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      uniform mat4 camera;\r\n      uniform mat4 model;\r\n\r\n      attribute vec3 vert;\r\n      attribute vec4 vertColor;\r\n      attribute vec3 vertNormal;\r\n\r\n      varying lowp vec3 fragVert;\r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n\r\n      void main(void) {\r\n        fragColor = vertColor;\r\n        fragNormal = vertNormal;\r\n        fragVert = vert;\r\n        gl_Position = camera * model * vec4(vert, 1);\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      precision highp float;\r\n\r\n      uniform mat4 model;\r\n      uniform mat4 normalMatrix;\r\n      \r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light;\r\n      \r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n      varying lowp vec3 fragVert;\r\n      \r\n      void main() {\r\n          vec3 normal = vec3(normalize(normalMatrix * vec4(fragNormal, 1)));\r\n          \r\n          vec3 fragPosition = vec3(model * vec4(fragVert, 1));\r\n          \r\n          vec3 surfaceToLight = light.position - fragPosition;\r\n          float bright = dot(normal, surfaceToLight) / (length(surfaceToLight) * length(normal));\r\n          bright = clamp(bright, 0.0, 1.0);\r\n      \r\n          gl_FragColor = vec4(bright * light.color * fragColor.rgb, fragColor.a);\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl) {\r\n    const positions = [\r\n      // Front face\r\n      -1.0, -1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n\r\n      // Back face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, 1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n\r\n      // Top face\r\n      -1.0, 1.0, -1.0,\r\n      -1.0, 1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, 1.0, -1.0,\r\n\r\n      // Bottom face\r\n      -1.0, -1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n      1.0, -1.0, 1.0,\r\n      -1.0, -1.0, 1.0,\r\n\r\n      // Right face\r\n      1.0, -1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n\r\n      // Left face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, -1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n      -1.0, 1.0, -1.0,\r\n    ];\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const vertexNormals = [\r\n      // Front\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n\r\n      // Back\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n\r\n      // Top\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n\r\n      // Bottom\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n\r\n      // Right\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n\r\n      // Left\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0\r\n    ];\r\n\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexNormals), gl.STATIC_DRAW);\r\n\r\n    const faceColors = [\r\n      [1.0, 1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0, 1.0],    // Back face: red\r\n      [0.0, 1.0, 0.0, 1.0],    // Top face: green\r\n      [0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\r\n      [1.0, 1.0, 0.0, 1.0],    // Right face: yellow\r\n      [1.0, 0.0, 1.0, 1.0],    // Left face: purple\r\n    ];\r\n    let colors = [];\r\n    for (let j = 0; j < faceColors.length; ++j) {\r\n      const c = faceColors[0];\r\n      colors = colors.concat(c, c, c, c);\r\n    }\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indices = [\r\n      // Front\r\n      0, 1, 2, 0, 2, 3,\r\n\r\n      // Back\r\n      4, 5, 6, 4, 6, 7,\r\n\r\n      // Top\r\n      8, 9, 10, 8, 10, 11,\r\n\r\n      // Bottom\r\n      12, 13, 14, 12, 14, 15,\r\n\r\n      // Right\r\n      16, 17, 18, 16, 18, 19,\r\n\r\n      // Left\r\n      20, 21, 22, 20, 22, 23,\r\n    ];\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, normal: normalBuffer, color: colorBuffer, indices: indexBuffer };\r\n  }\r\n}\r\n\r\nexport default CubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../utility'\r\nimport CubeModel from '../models/CubeModel';\r\n\r\nclass CubeScene {\r\n  constructor() {\r\n    this.totalTime = 0.0;\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl, data) {\r\n    const model = new CubeModel(gl);\r\n    this.scene = {\r\n      actors: [],\r\n      camera: [0.0, 0.0, 50.0],\r\n      cameraAngle: 0.0\r\n    };\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.scene.actors.push(\r\n        {\r\n          model,\r\n          location: [0.5 * (i - ((data.length - 1) / 2)), 0.0, 0.0],\r\n          scale: [0.1, 0.1 * (data[i] + 1), 0.2],\r\n          rotations: [\r\n            {\r\n              angle: degreesToRadians(-25),\r\n              vector: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  drawScene(gl, deltaTime, data) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.rotate(viewMatrix, viewMatrix, scene.cameraAngle, [0, 1, 0]);\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(actor, deltaTime, data[i]);\r\n    }\r\n\r\n    scene.cameraAngle += 0.001 * deltaTime;\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n    const modelMatrix = mat4.create();\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.vector);\r\n    }\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  _animateActor(actor, deltaTime, height) {\r\n    actor.scale[1] = 0.1 * (height + 1);\r\n  }\r\n}\r\n\r\nexport default CubeScene;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass LightedCubeModel {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'vert'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'vertColor'),\r\n        vertexNormal: gl.getAttribLocation(shaderProgram, 'vertNormal')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'camera'),\r\n        modelViewMatrix: gl.getUniformLocation(shaderProgram, 'model'),\r\n        normalMatrix: gl.getUniformLocation(shaderProgram, 'normalMatrix'),\r\n        light1: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light1.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light1.color')\r\n        },\r\n        light2: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light2.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light2.color')\r\n        }\r\n      },\r\n      buffers: this._initBuffers(gl)\r\n    }\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.normal);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexNormal);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const modelViewMatrix = mat4.create();\r\n    mat4.multiply(modelViewMatrix, viewMatrix, modelMatrix);\r\n\r\n    const normalMatrix = mat4.create();\r\n    mat4.invert(normalMatrix, modelViewMatrix);\r\n    mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.normalMatrix, false, normalMatrix);\r\n    gl.uniform3f(model.uniformLocations.light1.position, 50.0, 10.0, 20.0);\r\n    gl.uniform3f(model.uniformLocations.light1.color, 1.0, 0.0, 1.0);\r\n    gl.uniform3f(model.uniformLocations.light2.position, -50.0, -10.0, 20.0);\r\n    gl.uniform3f(model.uniformLocations.light2.color, 0.0, 1.0, 0.0);\r\n\r\n    {\r\n      const vertexCount = 36;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      uniform mat4 camera;\r\n      uniform mat4 model;\r\n\r\n      attribute vec3 vert;\r\n      attribute vec4 vertColor;\r\n      attribute vec3 vertNormal;\r\n\r\n      varying lowp vec3 fragVert;\r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n\r\n      void main(void) {\r\n        fragColor = vertColor;\r\n        fragNormal = vertNormal;\r\n        fragVert = vert;\r\n        gl_Position = camera * model * vec4(vert, 1);\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      precision highp float;\r\n\r\n      uniform mat4 model;\r\n      uniform mat4 normalMatrix;\r\n      \r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light1;\r\n      \r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light2;\r\n      \r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n      varying lowp vec3 fragVert;\r\n      \r\n      void main() {\r\n          vec3 normal = vec3(normalize(normalMatrix * vec4(fragNormal, 1)));\r\n          \r\n          vec3 fragPosition = vec3(model * vec4(fragVert, 1));\r\n          \r\n          vec3 surfaceToLight1 = light1.position - fragPosition;\r\n          float bright1 = dot(normal, surfaceToLight1) / (length(surfaceToLight1) * length(normal));\r\n          bright1 = clamp(bright1, 0.0, 1.0);\r\n      \r\n          vec3 surfaceToLight2 = light2.position - fragPosition;\r\n          float bright2 = dot(normal, surfaceToLight2) / (length(surfaceToLight2) * length(normal));\r\n          bright2 = clamp(bright2, 0.0, 1.0);\r\n      \r\n          gl_FragColor = vec4(bright1 * light1.color * fragColor.rgb + bright2 * light2.color * fragColor.rgb, fragColor.a);\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl) {\r\n    const positions = [\r\n      // Front face\r\n      -1.0, -1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n\r\n      // Back face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, 1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n\r\n      // Top face\r\n      -1.0, 1.0, -1.0,\r\n      -1.0, 1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, 1.0, -1.0,\r\n\r\n      // Bottom face\r\n      -1.0, -1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n      1.0, -1.0, 1.0,\r\n      -1.0, -1.0, 1.0,\r\n\r\n      // Right face\r\n      1.0, -1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n\r\n      // Left face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, -1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n      -1.0, 1.0, -1.0,\r\n    ];\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const vertexNormals = [\r\n      // Front\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n\r\n      // Back\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n\r\n      // Top\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n\r\n      // Bottom\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n\r\n      // Right\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n\r\n      // Left\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0\r\n    ];\r\n\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexNormals), gl.STATIC_DRAW);\r\n\r\n    const faceColors = [\r\n      [1.0, 1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0, 1.0],    // Back face: red\r\n      [0.0, 1.0, 0.0, 1.0],    // Top face: green\r\n      [0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\r\n      [1.0, 1.0, 0.0, 1.0],    // Right face: yellow\r\n      [1.0, 0.0, 1.0, 1.0],    // Left face: purple\r\n    ];\r\n    let colors = [];\r\n    for (let j = 0; j < faceColors.length; ++j) {\r\n      const c = faceColors[0];\r\n      colors = colors.concat(c, c, c, c);\r\n    }\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indices = [\r\n      // Front\r\n      0, 1, 2, 0, 2, 3,\r\n\r\n      // Back\r\n      4, 5, 6, 4, 6, 7,\r\n\r\n      // Top\r\n      8, 9, 10, 8, 10, 11,\r\n\r\n      // Bottom\r\n      12, 13, 14, 12, 14, 15,\r\n\r\n      // Right\r\n      16, 17, 18, 16, 18, 19,\r\n\r\n      // Left\r\n      20, 21, 22, 20, 22, 23,\r\n    ];\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, normal: normalBuffer, color: colorBuffer, indices: indexBuffer };\r\n  }\r\n}\r\n\r\nexport default LightedCubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../utility'\r\nimport LightedCubeModel from '../models/LightedCubeModel';\r\n\r\nclass LightedCubeScene {\r\n  constructor() {\r\n    this.totalTime = 0.0;\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl, data) {\r\n    const model = new LightedCubeModel(gl);\r\n    this.scene = {\r\n      actors: [],\r\n      camera: [0.0, 0.0, 50.0]\r\n    };\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.scene.actors.push(\r\n        {\r\n          model,\r\n          location: [0.5 * (i - ((data.length - 1) / 2)), 0.0, 0.0],\r\n          scale: [0.1, 0.1 * (data[i] + 1), 0.2],\r\n          rotations: [\r\n            {\r\n              angle: degreesToRadians(-25),\r\n              vector: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  drawScene(gl, deltaTime, data) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n      this._animateActor(actor, deltaTime, data[i]);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n    const modelMatrix = mat4.create();\r\n    for (let i = 0; i < actor.rotations.length; i++) {\r\n      const rotation = actor.rotations[i];\r\n      mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.vector);\r\n    }\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  _animateActor(actor, deltaTime, height) {\r\n    actor.scale[1] = 0.1 * (height + 1);\r\n    actor.rotations[0].angle += deltaTime * 0.002;\r\n  }\r\n}\r\n\r\nexport default LightedCubeScene;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedVector from '../lib/AnimatedVector'\r\nimport { shuffle, reverse, bubbleSort, insertionSort, mergeSortInPlace, mergeSort, quickSort } from '../lib/sort'\r\nimport CubeScene from '../scenes/CubeScene';\r\nimport LightedCubeScene from '../scenes/LightedCubeScene';\r\n\r\nclass SortPage3D extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scenes = [\r\n      new CubeScene(),\r\n      new LightedCubeScene()\r\n    ];\r\n\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.vector = new AnimatedVector(data, 8);\r\n\r\n    this.state = {\r\n      sceneIndex: 0,\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.run = this.run.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortInPlaceAction = this.mergeSortInPlaceAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      this.scenes[0].initScene(this.gl, this.vector.getData());\r\n      this.scenes[1].initScene(this.gl, this.vector.getData());\r\n      this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine([...this.vector.getData()], this.vector.initialize, this.vector.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.run(shuffle);\r\n  }\r\n\r\n  reverseAction() {\r\n    this.run(reverse);\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.run(bubbleSort);\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.run(insertionSort);\r\n  }\r\n\r\n  mergeSortInPlaceAction() {\r\n    this.run(mergeSortInPlace);\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.run(mergeSort);\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.run(quickSort);\r\n  }\r\n\r\n  onClickCanvas() {\r\n    this.setState({\r\n      sceneIndex: 1 - this.state.sceneIndex\r\n    });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const { animating, data } = this.vector.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.scenes[this.state.sceneIndex].drawScene(this.gl, deltaTime, data);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-2 mb-2\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortInPlaceAction}>Merge Sort (In Place)</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage3D;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../utility'\r\n\r\nclass MazeScene {\r\n  constructor(MazeModel) {\r\n    this.MazeModel = MazeModel;\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.animateScene = this.animateScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n  }\r\n\r\n  initScene(gl, maze) {\r\n    const model = new this.MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 10.0, -1.6 * maze.height],\r\n          rotation: { angle: 0.0, axis: [0, 0, 1], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, maze) {\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      actor.model.update(maze);\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(-45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  animateScene(deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * 0.001 * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass MazeModel {\r\n  constructor(gl, maze) {\r\n    this.gl = gl;\r\n    this.maze = maze;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n        modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix')\r\n      },\r\n      buffers: this._initBuffers(gl, maze)\r\n    }\r\n  }\r\n\r\n  update(maze) {\r\n    this._freeBuffers(this.gl, this.model.buffers);\r\n    this.maze = maze;\r\n    this.model.buffers = this._initBuffers(this.gl, maze);\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const modelViewMatrix = mat4.create();\r\n    mat4.multiply(modelViewMatrix, viewMatrix, modelMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n\r\n    {\r\n      const vertexCount = buffers.vertexCount;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      attribute vec4 aVertexPosition;\r\n      attribute vec4 aVertexColor;\r\n\r\n      uniform mat4 uModelViewMatrix;\r\n      uniform mat4 uProjectionMatrix;\r\n\r\n      varying lowp vec4 vColor;\r\n\r\n      void main(void) {\r\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n        vColor = aVertexColor;\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      varying lowp vec4 vColor;\r\n\r\n      void main(void) {\r\n        gl_FragColor = vColor;\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl, maze) {\r\n    const positions = []\r\n    const colors = [];\r\n    const indices = [];\r\n    let offset = 0;\r\n\r\n    const addSquareXY = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          left, top, base,\r\n          right, top, base,\r\n          right, bottom, base,\r\n          left, bottom, base\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareXZ = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          left, base, top,\r\n          right, base, top,\r\n          right, base, bottom,\r\n          left, base, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareYZ = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          base, left, top,\r\n          base, right, top,\r\n          base, right, bottom,\r\n          base, left, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const floorColor = [.2, .2, .2, 1];\r\n    const ceilingColor = [.7, .7, .7, 1];\r\n    const wallColor_Top = [.5, 0, .5, 1];\r\n    const wallColor_Bottom = [0, .5, 0, 1];\r\n    const wallColor_Left = [.5, 0, 0, 1];\r\n    const wallColor_Right = [0, .0, .5, 1];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const top = y + ofs_y;\r\n        const bottom = top + 1;\r\n\r\n        if (maze.data[y][x] === 0) {\r\n          addSquareXY(left, right, top, bottom, 0.0, floorColor);\r\n        } else {\r\n          addSquareXY(left, right, top, bottom, 1.0, ceilingColor);\r\n\r\n          if (y === 0 || maze.data[y - 1][x] === 0) {\r\n            addSquareXZ(left, right, 0.0, 1.0, top, wallColor_Top);\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] === 0) {\r\n            addSquareYZ(bottom, top, 0.0, 1.0, left, wallColor_Left);\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] === 0) {\r\n            addSquareXZ(right, left, 0.0, 1.0, bottom, wallColor_Bottom);\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] === 0) {\r\n            addSquareYZ(top, bottom, 0.0, 1.0, right, wallColor_Right);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, color: colorBuffer, indices: indexBuffer, vertexCount: indices.length };\r\n  }\r\n\r\n  _freeBuffers(gl, buffers) {\r\n    gl.deleteBuffer(buffers.position);\r\n    gl.deleteBuffer(buffers.color);\r\n    gl.deleteBuffer(buffers.indices);\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass MazeModel {\r\n  constructor(gl, maze) {\r\n    this.gl = gl;\r\n    this.maze = maze;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'vert'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'vertColor'),\r\n        vertexNormal: gl.getAttribLocation(shaderProgram, 'vertNormal')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n        viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\r\n        modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\r\n        normalMatrix: gl.getUniformLocation(shaderProgram, 'uNormalMatrix'),\r\n        light: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light.color')\r\n        }\r\n      },\r\n      buffers: this._initBuffers(gl, maze)\r\n    }\r\n  }\r\n\r\n  update(maze) {\r\n    this._freeBuffers(this.gl, this.model.buffers);\r\n    this.maze = maze;\r\n    this.model.buffers = this._initBuffers(this.gl, maze);\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.normal);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexNormal);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const normalMatrix = mat4.create();\r\n    mat4.invert(normalMatrix, modelMatrix);\r\n    mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelMatrix, false, modelMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.viewMatrix, false, viewMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.normalMatrix, false, normalMatrix);\r\n\r\n    gl.uniform3f(model.uniformLocations.light.position, 0.0, 14.0, 0.0);\r\n    gl.uniform3f(model.uniformLocations.light.color, 1.0, 1.0, 1.0);\r\n\r\n    {\r\n      const vertexCount = buffers.vertexCount;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      precision mediump float;\r\n\r\n      uniform mat4 uProjectionMatrix;\r\n      uniform mat4 uViewMatrix;\r\n      uniform mat4 uModelMatrix;\r\n      uniform mat4 uNormalMatrix;\r\n\r\n      attribute vec3 vert;\r\n      attribute vec4 vertColor;\r\n      attribute vec3 vertNormal;\r\n\r\n      varying vec3 fragPosition;\r\n      varying vec4 fragColor;\r\n      varying vec3 fragNormal;\r\n\r\n      void main(void) {\r\n        fragPosition = vec3(uModelMatrix * vec4(vert, 1));\r\n        fragColor = vertColor;\r\n        fragNormal = vec3(uNormalMatrix * vec4(vertNormal, 1));\r\n        gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(vert, 1);\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      precision mediump float;\r\n\r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light;\r\n      \r\n      varying vec3 fragPosition;\r\n      varying vec4 fragColor;\r\n      varying vec3 fragNormal;\r\n      \r\n      void main() {          \r\n          float ambient = 0.0;\r\n\r\n          vec3 light_dir = light.position - fragPosition;\r\n          float distance = length(light_dir);\r\n          float diffuse = dot(fragNormal, normalize(light_dir));\r\n          float point_intensity = clamp(12000.0 / (distance * distance), 0.0, 1.0) * diffuse;\r\n\r\n          gl_FragColor = vec4(ambient * fragColor.rgb + point_intensity * light.color * fragColor.rgb, fragColor.a);\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl, maze) {\r\n    const positions = []\r\n    const normals = [];\r\n    const colors = [];\r\n    const indices = [];\r\n    let offset = 0;\r\n\r\n    const addSquareXY = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          left, top, base,\r\n          right, top, base,\r\n          right, bottom, base,\r\n          left, bottom, base\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareXZ = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          left, base, top,\r\n          right, base, top,\r\n          right, base, bottom,\r\n          left, base, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareYZ = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          base, left, top,\r\n          base, right, top,\r\n          base, right, bottom,\r\n          base, left, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const floorColor = [0.52, 0.34, 0.14, 1];\r\n    const ceilingColor = [0.0, 1.0, 0.0, 1];\r\n    const wallColor_Top = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Bottom = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Left = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Right = [0.25, 0.5, 0.0, 1];\r\n\r\n    const floorNormal = [0.0, 0.0, 1.0];\r\n    const ceilingNormal = [0.0, 0.0, 1.0];\r\n    const wallNormal_Top = [0.0, -1.0, 0.0];\r\n    const wallNormal_Bottom = [0.0, 1.0, 0.0];\r\n    const wallNormal_Left = [-1.0, 0.0, 0.0];\r\n    const wallNormal_Right = [1.0, 0.0, 0.0];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const top = y + ofs_y;\r\n        const bottom = top + 1;\r\n\r\n        if (maze.data[y][x] === 0) {\r\n          addSquareXY(left, right, top, bottom, 0.0, floorColor, floorNormal);\r\n        } else {\r\n          addSquareXY(left, right, top, bottom, 1.0, ceilingColor, ceilingNormal);\r\n\r\n          if (y === 0 || maze.data[y - 1][x] === 0) {\r\n            addSquareXZ(left, right, 0.0, 1.0, top, wallColor_Top, wallNormal_Top);\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] === 0) {\r\n            addSquareYZ(bottom, top, 0.0, 1.0, left, wallColor_Left, wallNormal_Left);\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] === 0) {\r\n            addSquareXZ(right, left, 0.0, 1.0, bottom, wallColor_Bottom, wallNormal_Bottom);\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] === 0) {\r\n            addSquareYZ(top, bottom, 0.0, 1.0, right, wallColor_Right, wallNormal_Right);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, normal: normalBuffer, color: colorBuffer, indices: indexBuffer, vertexCount: indices.length };\r\n  }\r\n\r\n  _freeBuffers(gl, buffers) {\r\n    gl.deleteBuffer(buffers.position);\r\n    gl.deleteBuffer(buffers.color);\r\n    gl.deleteBuffer(buffers.indices);\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedGrid from '../lib/AnimatedGrid'\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport MazeModel from '../models/MazeModel';\r\nimport MazeModelPerPixel from '../models/MazeModelPerPixel';\r\nimport { createMaze, createDungeon } from '../lib/maze'\r\n\r\nconst size = 69;\r\n\r\nclass MazePage3D extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scenes = [\r\n      new MazeScene(MazeModel),\r\n      new MazeScene(MazeModelPerPixel)\r\n    ];\r\n\r\n    const data = []\r\n    for (let i = 0; i < size; i++) {\r\n      data.push(Array(size).fill(1));\r\n    }\r\n    this.grid = new AnimatedGrid(data, 12);\r\n\r\n    this.state = {\r\n      sceneIndex: 0,\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.run = this.run.bind(this);\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      const maze = { width: size, height: size, data: this.grid.getData() };\r\n      this.scenes[0].initScene(this.gl, maze);\r\n      this.scenes[1].initScene(this.gl, maze);\r\n      this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine(this._clone(this.grid.getData()), this.grid.initialize, this.grid.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(createDungeon);\r\n  }\r\n\r\n  onClickCanvas(event) {\r\n    this.setState({\r\n      sceneIndex: 1 - this.state.sceneIndex\r\n    }, () => { console.log(this.state) });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const { animating, data } = this.grid.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.scenes[this.state.sceneIndex].drawScene(this.gl, { width: size, height: size, data });\r\n    for (let i = 0; i < this.scenes.length; i++) {\r\n      this.scenes[i].animateScene(deltaTime);\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-2 mb-2\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"canvas\" ref={elem => this.canvas = elem} onClick={this.onClickCanvas} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage3D;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\nimport SortPage3D from './SortPage3D'\r\nimport MazePage3D from './MazePage3D'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n        <Route path=\"/sort3d\" component={SortPage3D} />\r\n        <Route path=\"/maze3d\" component={MazePage3D} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}