{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/Vector.js","lib/Drawing.js","lib/Sort.js","components/SortPage.js","lib/Grid.js","lib/Maze.js","components/MazePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","inner","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","Vector","data","queue","getData","initialize","update","animate","timeStamp","_clone","change","elapsed","length","updates","shift","i","animating","items","map","item","Drawing","canvas","n","rect","getBoundingClientRect","w","width","h","height","r","window","devicePixelRatio","step","Math","floor","barWidth","ctx","getContext","clearRect","fillStyle","barHeight","fillRect","colors","m","xstep","ystep","y","Sort","shuffle","reverse","bubbleSort","insertionSort","mergeSort","quickSort","j","random","_swap","count","key","merge","start","mid","end","start2","value","index","sort","l","partition","low","high","pivot","a","async","t","SortPage","running","rendering","vector","drawing","run","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortAction","quickSortAction","renderCanvas","frame","requestAnimationFrame","cancelAnimationFrame","routine","drawBars","row","disabled","ref","elem","Grid","directions","Maze","createMaze","createDungeon","_createMaze","_addRooms","_carveWithRegion","_reset","_carve","my","mx","regions","fill","region","_connectRegions","_removeDeadEnds","lastDir","carve","cells","cell","posCells","dir","_canCarve","c1","_addDir","c2","pop","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","connectors","merged","openRegions","connector","dest","sources","slice","filter","con","abs","done","exits","_fill","pos","_isInBounds","nxt","len","min","max","pri","sec","MazePage","grid","maze","onClickCreateMaze","onClickCreateDungeon","onResize","screenWidth","screen","screenHeight","addEventListener","removeEventListener","drawGrid","col1","col2","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12273caa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, inner, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (inner) classes.push('section-inner')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.onClickExpand = this.onClickExpand.bind(this)\r\n    }\r\n\r\n    onClickExpand() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar large dark>\r\n                <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n                <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n                    <NavBarNav>\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n                        <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n                    </NavBarNav>\r\n                </NavBarToggler>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n    <Route path=\"/maze\" component={MazePage} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'black' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","class Vector {\r\n  constructor(data) {\r\n    this.data = data;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 8) {\r\n      elapsed -= 8;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 2) {\r\n        this.data[updates[i]] = updates[i + 1];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default Vector;\r\n","class Drawing {\r\n  drawBars(canvas, data) {\r\n    const n = data.length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    const r = window.devicePixelRatio;\r\n    canvas.width = w * r;\r\n    canvas.height = h * r;\r\n    const step = Math.floor(w / n) * .9;\r\n    const barWidth = Math.floor(step * .8);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    ctx.fillStyle = 'black'\r\n    for (let i = 0; i < n; i++) {\r\n      const barHeight = Math.floor((data[i] + 1) / 100 * .8 * h);\r\n      ctx.fillRect(.05 * w + i * step, .9 * h - barHeight, barWidth, barHeight);\r\n    }\r\n  }\r\n\r\n  drawGrid(canvas, data, colors) {\r\n    const n = data.length;\r\n    const m = data[0].length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const xstep = Math.floor(w / m);\r\n    const ystep = Math.floor(h / n);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    for (let y = 0; y < n; y++) {\r\n      for (let x = 0; x < m; x++) {\r\n        ctx.fillStyle = colors[data[y][x]];\r\n        ctx.fillRect(x * xstep, y * ystep, xstep, ystep);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Drawing;\r\n","class Sort {\r\n  constructor() {\r\n    this.shuffle = this.shuffle.bind(this);\r\n    this.reverse = this.reverse.bind(this);\r\n    this.bubbleSort = this.bubbleSort.bind(this);\r\n    this.insertionSort = this.insertionSort.bind(this);\r\n    this.mergeSort = this.mergeSort.bind(this);\r\n    this.quickSort = this.quickSort.bind(this);\r\n  }\r\n\r\n  shuffle(data, initialize, update) {\r\n    initialize();\r\n    const n = data.length;\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      this._swap(data, i, j);\r\n      update([i, data[i], j, data[j]]);\r\n    }\r\n  }\r\n\r\n  reverse(data, initialize, update) {\r\n    initialize();\r\n    const n = data.length;\r\n    for (let i = 0; i < n / 2; i++) {\r\n      const j = n - i - 1;\r\n      this._swap(data, i, j);\r\n      update([i, data[i], j, data[j]]);\r\n    }\r\n  }\r\n\r\n  bubbleSort(data, initialize, update) {\r\n    initialize();\r\n    const n = data.length - 1;\r\n    for (let i = 0; i < n; i++) {\r\n      let count = 0;\r\n      for (let j = 0; j < n - i; j++) {\r\n        if (data[j] > data[j + 1]) {\r\n          this._swap(data, j, j + 1);\r\n          update([j, data[j], j + 1, data[j + 1]]);\r\n          count++;\r\n        }\r\n      }\r\n      if (count === 0) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort(data, initialize, update) {\r\n    initialize();\r\n    const n = data.length;\r\n    for (let i = 1; i < n; i++) {\r\n      const key = data[i];\r\n      let j = i - 1;\r\n      while (j >= 0 && data[j] > key) {\r\n        data[j + 1] = data[j];\r\n        update([j + 1, data[j + 1]]);\r\n        j = j - 1;\r\n      }\r\n      data[j + 1] = key;\r\n      update([j + 1, data[j + 1]]);\r\n    }\r\n  }\r\n\r\n  mergeSort(data, initialize, update) {\r\n    initialize();\r\n    const sort = (data, l, r) => {\r\n      if (l < r) {\r\n        const m = Math.floor(l + (r - l) / 2);\r\n        sort(data, l, m);\r\n        sort(data, m + 1, r);\r\n        merge(data, l, m, r);\r\n      }\r\n    }\r\n    const merge = (data, start, mid, end) => {\r\n      let start2 = mid + 1;\r\n      if (data[mid] <= data[start2]) {\r\n        return;\r\n      }\r\n      while (start <= mid && start2 <= end) {\r\n        if (data[start] <= data[start2]) {\r\n          start++;\r\n        }\r\n        else {\r\n          const value = data[start2];\r\n          let index = start2;\r\n          while (index !== start) {\r\n            data[index] = data[index - 1];\r\n            update([index, data[index]]);\r\n            index--;\r\n          }\r\n          data[start] = value;\r\n          update([start, data[start]]);\r\n          start++;\r\n          mid++;\r\n          start2++;\r\n        }\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n  }\r\n\r\n  quickSort(data, initialize, update) {\r\n    initialize();\r\n    const partition = (data, low, high) => {\r\n      if (high - low > 2) {\r\n        const mid = Math.floor(low + (high - low) / 2);\r\n        if (data[low] < data[mid] && data[mid] < data[high]) {\r\n          this._swap(data, mid, high);\r\n          update([mid, data[mid], high, data[high]]);\r\n        }\r\n        else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n          this._swap(data, mid, high);\r\n          update([mid, data[mid], high, data[high]]);\r\n        }\r\n      }\r\n      const pivot = data[high];\r\n      let i = (low - 1);\r\n      for (let j = low; j <= high - 1; j++) {\r\n        if (data[j] < pivot) {\r\n          i++;\r\n          this._swap(data, i, j);\r\n          update([i, data[i], j, data[j]]);\r\n        }\r\n      }\r\n      this._swap(data, i + 1, high);\r\n      update([i + 1, data[i + 1], high, data[high]]);\r\n      return (i + 1);\r\n    }\r\n    const sort = async (data, low, high) => {\r\n      if (low < high) {\r\n        const mid = partition(data, low, high);\r\n        sort(data, low, mid - 1);\r\n        sort(data, mid + 1, high);\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n  }\r\n\r\n  _swap(data, i, j) {\r\n    const t = data[i];\r\n    data[i] = data[j];\r\n    data[j] = t;\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport Vector from '../lib/Vector'\r\nimport Drawing from '../lib/Drawing'\r\nimport Sort from '../lib/Sort'\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.vector = new Vector(data);\r\n    this.drawing = new Drawing();\r\n    this.sort = new Sort();\r\n\r\n    this.run = this.run.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine([...this.vector.getData()], this.vector.initialize, this.vector.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.run(this.sort.shuffle);\r\n  }\r\n\r\n  reverseAction() {\r\n    this.run(this.sort.reverse);\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.run(this.sort.bubbleSort);\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.run(this.sort.insertionSort);\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.run(this.sort.mergeSort);\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.run(this.sort.quickSort);\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.vector.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.drawing.drawBars(this.canvas, data);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-5\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"flex-grow-1\" ref={elem => this.canvas = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","class Grid {\r\n  constructor(data) {\r\n    this.data = data;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 6) {\r\n      elapsed -= 6;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 3) {\r\n        this.data[updates[i + 1]][updates[i]] = updates[i + 2];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nclass Maze {\r\n  constructor() {\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n\r\n    this._createMaze = this._createMaze.bind(this);\r\n    this._addRooms = this._addRooms.bind(this);\r\n    this._carveWithRegion = this._carveWithRegion.bind(this);\r\n  }\r\n\r\n  createMaze(data, initialize, update) {\r\n    this._reset(data, 1);\r\n    initialize(data);\r\n    this._createMaze(data, update, this._carve, { x: 1, y: 1 });\r\n  }\r\n\r\n  createDungeon(data, initialize, update) {\r\n    this._reset(data, 1);\r\n    initialize(data);\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    this.regions = [];\r\n    for (let y = 0; y < my; y++) {\r\n      this.regions.push(Array(mx).fill(0))\r\n    }\r\n    this.region = 0;\r\n    this._addRooms(data, update, mx, my, 256, 4);\r\n    for (let y = 1; y < my; y += 2) {\r\n      for (let x = 1; x < mx; x += 2) {\r\n        if (data[y][x] === 0) {\r\n          continue;\r\n        }\r\n        this.region++;\r\n        this._createMaze(data, update, this._carveWithRegion, { x, y });\r\n      }\r\n    }\r\n    this._connectRegions(data, update, mx, my);\r\n    this._removeDeadEnds(data, update, mx, my);\r\n  }\r\n\r\n  _reset(data, value) {\r\n    const my = data.length;\r\n    for (let y = 0; y < my; y++) {\r\n      data[y].fill(value);\r\n    }\r\n  }\r\n\r\n  _createMaze(data, update, carve = this._carve, start) {\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    const cells = [];\r\n    let lastDir;\r\n    carve(data, start);\r\n    update([start.x, start.y, data[start.y][start.x]]);\r\n    data[start.y][start.x] = 0;\r\n    cells.push(start);\r\n    while (cells.length > 0) {\r\n      const cell = cells[cells.length - 1];\r\n      const posCells = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        if (this._canCarve(data, mx, my, cell, dir)) {\r\n          posCells.push(dir);\r\n        }\r\n      }\r\n      if (posCells.length > 0) {\r\n        let dir;\r\n        if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n          dir = lastDir;\r\n        } else {\r\n          dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n        }\r\n        const c1 = this._addDir(cell, dir, 1);\r\n        const c2 = this._addDir(cell, dir, 2);\r\n        carve(data, c1);\r\n        carve(data, c2);\r\n        update([c1.x, c1.y, data[c1.y][c1.x], c2.x, c2.y, data[c2.y][c2.x]]);\r\n        cells.push(this._addDir(cell, dir, 2));\r\n        lastDir = dir;\r\n      } else {\r\n        cells.pop();\r\n        lastDir = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  _addRooms(data, update, mx, my, numRoomTries, roomExtraSize) {\r\n    const rooms = [];\r\n    for (let i = 0; i < numRoomTries; i++) {\r\n      const size = (this._range(1, 3 + roomExtraSize) << 1) + 1;\r\n      let rectangularity = this._range(0, 1 + size >> 1) << 1;\r\n      let width = size;\r\n      let height = size;\r\n      if (this._range(0, 1) === 0) {\r\n        width += rectangularity;\r\n      } else {\r\n        height += rectangularity;\r\n      }\r\n      let x = (this._range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n      let y = (this._range(0, (my - height - 1) >> 1) << 1) + 1;\r\n      const room = { x, y, width, height };\r\n      let overlaps = false;\r\n      for (let j = 0; j < rooms.length; j++) {\r\n        const other = rooms[j];\r\n        if (this._isOverlapped(room, other)) {\r\n          overlaps = true;\r\n          break;\r\n        }\r\n      }\r\n      if (overlaps) {\r\n        continue;\r\n      }\r\n      rooms.push(room);\r\n      this.region++;\r\n      for (let xOffset = 0; xOffset < width; xOffset++) {\r\n        const updates = [];\r\n        for (let yOffset = 0; yOffset < height; yOffset++) {\r\n          this._carveWithRegion(data, { x: x + xOffset, y: y + yOffset });\r\n          updates.push(x + xOffset, y + yOffset, data[y + yOffset][x + xOffset])\r\n        }\r\n        update(updates);\r\n      }\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, update, mx, my) {\r\n    let connectors = [];\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] !== 1) {\r\n          continue;\r\n        }\r\n        const regions = [];\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          const region = this.regions[y + dir.y][x + dir.x];\r\n          if (region !== 0 && !regions.includes(region)) {\r\n            regions.push(region);\r\n          }\r\n        }\r\n        if (regions.length < 2) {\r\n          continue;\r\n        }\r\n        connectors.push({ x, y, regions })\r\n      }\r\n    }\r\n    const merged = [0];\r\n    let openRegions = [];\r\n    for (var i = 1; i <= this.region; i++) {\r\n      merged.push(i);\r\n      openRegions.push(i);\r\n    }\r\n    while (openRegions.length > 1) {\r\n      const index = this._range(0, connectors.length - 1)\r\n      const connector = connectors[index];\r\n      this._carve(data, { x: connector.x, y: connector.y });\r\n      update([connector.x, connector.y, data[connector.y][connector.x]]);\r\n      const regions = connector.regions.map((region) => merged[region]);\r\n      const dest = regions[0];\r\n      const sources = regions.slice(1);\r\n      for (let i = 0; i <= this.region; i++) {\r\n        if (sources.includes(i)) {\r\n          merged[i] = dest;\r\n        }\r\n      }\r\n      openRegions = openRegions.filter((region) => {\r\n        return !sources.includes(region);\r\n      });\r\n      connectors = connectors.filter((con) => {\r\n        if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n          return false;\r\n        }\r\n        con.regions = con.regions.map((region) => merged[region]);\r\n        for (let i = 1; i < con.regions.length; i++) {\r\n          if (con.regions[i] !== con.regions[0]) {\r\n            return true;\r\n          }\r\n        }\r\n        if (this._range(0, 99) === 0) {\r\n          this._carve(data, { x: con.x, y: con.y });\r\n          update([con.x, con.y, data[con.y][con.x]]);\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n\r\n  _removeDeadEnds(data, update, mx, my) {\r\n    let done = false;\r\n    while (!done) {\r\n      done = true;\r\n      for (let y = 1; y < my - 1; y++) {\r\n        for (let x = 1; x < mx - 1; x++) {\r\n          if (data[y][x] === 1) {\r\n            continue;\r\n          }\r\n          let exits = 0;\r\n          for (let i = 0; i < directions.length; i++) {\r\n            const dir = directions[i];\r\n            if (data[y + dir.y][x + dir.x] !== 1) {\r\n              exits++;\r\n            }\r\n          }\r\n          if (exits !== 1) {\r\n            continue;\r\n          }\r\n          done = false;\r\n          this._fill(data, { x, y });\r\n          update([x, y, data[y][x]]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _fill(data, pos) {\r\n    data[pos.y][pos.x] = 1;\r\n  }\r\n\r\n  _carve(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  _carveWithRegion(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n    this.regions[pos.y][pos.x] = this.region;\r\n  }\r\n\r\n  _canCarve(data, mx, my, pos, dir) {\r\n    if (!this._isInBounds(mx, my, this._addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = this._addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  _isInBounds(mx, my, pos) {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _addDir(pos, dir, len) {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  _range(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  _isOverlapped(pri, sec) {\r\n    if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n      return false;\r\n    }\r\n    if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Maze;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport Grid from '../lib/Grid'\r\nimport Drawing from '../lib/Drawing'\r\nimport Maze from '../lib/Maze'\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = []\r\n    for (let i = 0; i < 99; i++) {\r\n      data.push(Array(99).fill(1));\r\n    }\r\n\r\n    this.grid = new Grid(data);\r\n    this.drawing = new Drawing();\r\n    this.maze = new Maze();\r\n\r\n    this.run = this.run.bind(this)\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onResize = this.onResize.bind(this)\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n\r\n    this.state = {\r\n      running: false,\r\n      rendering: false,\r\n      screenWidth: window.screen.width,\r\n      screenHeight: window.screen.height\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize)\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize)\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine(this._clone(this.grid.getData()), this.grid.initialize, this.grid.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(this.maze.createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(this.maze.createDungeon);\r\n  }\r\n\r\n  onResize() {\r\n    if (window.screen.width !== this.width || window.screen.height !== this.height) {\r\n      this.width = window.screen.width;\r\n      this.height = window.screen.height;\r\n      this.setState({ screenWidth: this.width, screenHeight: this.height });\r\n    }\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.grid.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.drawing.drawGrid(this.canvas, data, ['black', 'sienna']);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n\r\n  render() {\r\n    let col1 = \"sm-6\";\r\n    let col2 = \"sm-6\";\r\n    if (this.state.screenWidth / this.state.screenHeight < 16 / 9) {\r\n      col1 = \"sm-8\";\r\n      col2 = \"sm-4\";\r\n    }\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"h-100 mt-5\">\r\n          <Row className=\"h-100\">\r\n            <Col col={col1}>\r\n              <canvas className=\"w-100 h-100\" ref={elem => this.canvas = elem} />\r\n            </Col>\r\n            <Col col={col2} className=\"d-flex flex-column justify-content-around align-items-start\">\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}