{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/AnimatedVector.js","lib/Sort.js","components/SortPage.js","lib/Drawing.js","lib/AnimatedGrid.js","lib/Maze.js","components/MazePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","inner","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","AnimatedVector","data","frameRate","queue","getData","initialize","update","animate","timeStamp","_clone","change","elapsed","length","updates","shift","i","animating","items","map","item","shuffle","j","Math","floor","random","_swap","reverse","n","bubbleSort","count","insertionSort","key","mergeSort","merge","start","mid","end","start2","value","index","sort","l","r","m","quickSort","partition","low","high","pivot","a","async","t","SortPage","running","rendering","vector","run","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortAction","quickSortAction","renderCanvas","frame","window","requestAnimationFrame","cancelAnimationFrame","routine","canvas","rect","getBoundingClientRect","w","width","h","height","devicePixelRatio","step","barWidth","ctx","getContext","clearRect","fillStyle","barHeight","fillRect","drawBars","row","disabled","ref","elem","AnimatedGrid","directions","y","windiness","createMaze","_reset","_createMaze","_carve","createDungeon","regions","region","carveRegion","pos","my","mx","fill","incrementRegion","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","_addRooms","connectors","connectedRegions","dir","merged","openRegions","connector","dest","sources","slice","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","lastDir","carve","cells","cell","posCells","_canCarve","c1","_addDir","c2","pop","_isInBounds","nxt","len","min","max","pri","sec","MazePage","grid","onClickCreateMaze","onClickCreateDungeon","onResize","screenWidth","screen","screenHeight","addEventListener","removeEventListener","colors","xstep","ystep","drawGrid","col1","col2","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21a6f0e7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, inner, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (inner) classes.push('section-inner')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.onClickExpand = this.onClickExpand.bind(this)\r\n    }\r\n\r\n    onClickExpand() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar large dark>\r\n                <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n                <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n                    <NavBarNav>\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n                        <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n                    </NavBarNav>\r\n                </NavBarToggler>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n    <Route path=\"/maze\" component={MazePage} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'black' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","/** Class representing an animated array of values. */\r\nclass AnimatedVector {\r\n  /**\r\n   * Create an animated vector.\r\n   * @param {*[]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value pairs. [index, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 2) {\r\n        this.data[updates[i]] = updates[i + 1];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedVector;\r\n","export function shuffle(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = n - 1; i >= 0; i--) {\r\n    const j = Math.floor(Math.random() * i);\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function reverse(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 0; i < n / 2; i++) {\r\n    const j = n - i - 1;\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function bubbleSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length - 1;\r\n  for (let i = 0; i < n; i++) {\r\n    let count = 0;\r\n    for (let j = 0; j < n - i; j++) {\r\n      if (data[j] > data[j + 1]) {\r\n        _swap(data, j, j + 1);\r\n        update([j, data[j], j + 1, data[j + 1]]);\r\n        count++;\r\n      }\r\n    }\r\n    if (count === 0) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nexport function insertionSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 1; i < n; i++) {\r\n    const key = data[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && data[j] > key) {\r\n      data[j + 1] = data[j];\r\n      update([j + 1, data[j + 1]]);\r\n      j = j - 1;\r\n    }\r\n    data[j + 1] = key;\r\n    update([j + 1, data[j + 1]]);\r\n  }\r\n}\r\n\r\nexport function mergeSort(data, initialize, update) {\r\n  initialize();\r\n  const sort = (data, l, r) => {\r\n    if (l < r) {\r\n      const m = Math.floor(l + (r - l) / 2);\r\n      sort(data, l, m);\r\n      sort(data, m + 1, r);\r\n      merge(data, l, m, r);\r\n    }\r\n  }\r\n  const merge = (data, start, mid, end) => {\r\n    let start2 = mid + 1;\r\n    if (data[mid] <= data[start2]) {\r\n      return;\r\n    }\r\n    while (start <= mid && start2 <= end) {\r\n      if (data[start] <= data[start2]) {\r\n        start++;\r\n      }\r\n      else {\r\n        const value = data[start2];\r\n        let index = start2;\r\n        while (index !== start) {\r\n          data[index] = data[index - 1];\r\n          update([index, data[index]]);\r\n          index--;\r\n        }\r\n        data[start] = value;\r\n        update([start, data[start]]);\r\n        start++;\r\n        mid++;\r\n        start2++;\r\n      }\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nexport function quickSort(data, initialize, update) {\r\n  initialize();\r\n  const partition = (data, low, high) => {\r\n    if (high - low > 2) {\r\n      const mid = Math.floor(low + (high - low) / 2);\r\n      if (data[low] < data[mid] && data[mid] < data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n      else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n    }\r\n    const pivot = data[high];\r\n    let i = (low - 1);\r\n    for (let j = low; j <= high - 1; j++) {\r\n      if (data[j] < pivot) {\r\n        i++;\r\n        _swap(data, i, j);\r\n        update([i, data[i], j, data[j]]);\r\n      }\r\n    }\r\n    _swap(data, i + 1, high);\r\n    update([i + 1, data[i + 1], high, data[high]]);\r\n    return (i + 1);\r\n  }\r\n  const sort = async (data, low, high) => {\r\n    if (low < high) {\r\n      const mid = partition(data, low, high);\r\n      sort(data, low, mid - 1);\r\n      sort(data, mid + 1, high);\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nfunction _swap(data, i, j) {\r\n  const t = data[i];\r\n  data[i] = data[j];\r\n  data[j] = t;\r\n}\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedVector from '../lib/AnimatedVector'\r\nimport { drawBars } from '../lib/Drawing'\r\nimport * as sort from '../lib/Sort'\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.vector = new AnimatedVector(data, 8);\r\n\r\n    this.run = this.run.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine([...this.vector.getData()], this.vector.initialize, this.vector.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.run(sort.shuffle);\r\n  }\r\n\r\n  reverseAction() {\r\n    this.run(sort.reverse);\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.run(sort.bubbleSort);\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.run(sort.insertionSort);\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.run(sort.mergeSort);\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.run(sort.quickSort);\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.vector.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    drawBars(this.canvas, data);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-5\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"flex-grow-1\" ref={elem => this.canvas = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","export function drawBars(canvas, data) {\r\n  const n = data.length;\r\n  const rect = canvas.getBoundingClientRect()\r\n  const w = rect.width;\r\n  const h = rect.height;\r\n  const r = window.devicePixelRatio;\r\n  canvas.width = w * r;\r\n  canvas.height = h * r;\r\n  const step = Math.floor(w / n) * .9;\r\n  const barWidth = Math.floor(step * .8);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  ctx.fillStyle = 'black'\r\n  for (let i = 0; i < n; i++) {\r\n    const barHeight = Math.floor((data[i] + 1) / 100 * .8 * h);\r\n    ctx.fillRect(.05 * w + i * step, .9 * h - barHeight, barWidth, barHeight);\r\n  }\r\n}\r\n\r\nexport function drawGrid(canvas, data, colors) {\r\n  const n = data.length;\r\n  const m = data[0].length;\r\n  const rect = canvas.getBoundingClientRect()\r\n  const w = rect.width;\r\n  const h = rect.height;\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n  const xstep = Math.floor(w / m);\r\n  const ystep = Math.floor(h / n);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  for (let y = 0; y < n; y++) {\r\n    for (let x = 0; x < m; x++) {\r\n      ctx.fillStyle = colors[data[y][x]];\r\n      ctx.fillRect(x * xstep, y * ystep, xstep, ystep);\r\n    }\r\n  }\r\n}\r\n","/** Class representing an animated two-dimensional array of values. */\r\nclass AnimatedGrid {\r\n  /**\r\n   * Create an animated grid.\r\n   * @param {*[][]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[][]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[][]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value triplets. [index1, index0, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[][]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 3) {\r\n        this.data[updates[i + 1]][updates[i]] = updates[i + 2];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedGrid;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nexport function createMaze(data, initialize, update) {\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  _createMaze(data, update, _carve, { x: 1, y: 1 });\r\n}\r\n\r\nexport function createDungeon(data, initialize, update) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const incrementRegion = (data, pos) => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n  _addRooms(data, update, mx, my, incrementRegion, carveRegion, 256, 4);\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] === 0) {\r\n        continue;\r\n      }\r\n      region++;\r\n      _createMaze(data, update, carveRegion, { x, y });\r\n    }\r\n  }\r\n  _connectRegions(data, update, mx, my, region, regions);\r\n  _removeDeadEnds(data, update, mx, my);\r\n}\r\n\r\nfunction _reset(data, value) {\r\n  const my = data.length;\r\n  for (let y = 0; y < my; y++) {\r\n    data[y].fill(value);\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, update, carve = _carve, start) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(data, start);\r\n  update([start.x, start.y, data[start.y][start.x]]);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < directions.length; i++) {\r\n      const dir = directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carve(data, c1);\r\n      carve(data, c2);\r\n      update([c1.x, c1.y, data[c1.y][c1.x], c2.x, c2.y, data[c2.y][c2.x]]);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _addRooms(data, update, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      const updates = [];\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset });\r\n        updates.push(x + xOffset, y + yOffset, data[y + yOffset][x + xOffset])\r\n      }\r\n      update(updates);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, update, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    update([connector.x, connector.y, data[connector.y][connector.x]]);\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n        update([con.x, con.y, data[con.y][con.x]]);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, update, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n        update([x, y, data[y][x]]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedGrid from '../lib/AnimatedGrid'\r\nimport { drawGrid } from '../lib/Drawing'\r\nimport { createMaze, createDungeon } from '../lib/Maze'\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = []\r\n    for (let i = 0; i < 99; i++) {\r\n      data.push(Array(99).fill(1));\r\n    }\r\n\r\n    this.grid = new AnimatedGrid(data, 6);\r\n\r\n    this.run = this.run.bind(this)\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onResize = this.onResize.bind(this)\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n\r\n    this.state = {\r\n      running: false,\r\n      rendering: false,\r\n      screenWidth: window.screen.width,\r\n      screenHeight: window.screen.height\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize)\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize)\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine(this._clone(this.grid.getData()), this.grid.initialize, this.grid.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(createDungeon);\r\n  }\r\n\r\n  onResize() {\r\n    if (window.screen.width !== this.width || window.screen.height !== this.height) {\r\n      this.width = window.screen.width;\r\n      this.height = window.screen.height;\r\n      this.setState({ screenWidth: this.width, screenHeight: this.height });\r\n    }\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    const { animating, data } = this.grid.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    drawGrid(this.canvas, data, ['black', 'sienna']);\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n\r\n  render() {\r\n    let col1 = \"sm-6\";\r\n    let col2 = \"sm-6\";\r\n    if (this.state.screenWidth / this.state.screenHeight < 16 / 9) {\r\n      col1 = \"sm-8\";\r\n      col2 = \"sm-4\";\r\n    }\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"h-100 mt-5\">\r\n          <Row className=\"h-100\">\r\n            <Col col={col1}>\r\n              <canvas className=\"w-100 h-100\" ref={elem => this.canvas = elem} />\r\n            </Col>\r\n            <Col col={col2} className=\"d-flex flex-column justify-content-around align-items-start\">\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}