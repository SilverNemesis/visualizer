{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/Drawing.js","lib/Sort.js","components/SortPage.js","lib/Maze.js","components/MazePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","Drawing","canvas","data","n","length","rect","getBoundingClientRect","w","width","h","height","step","Math","floor","barWidth","ctx","getContext","clearRect","fillStyle","i","barHeight","fillRect","colors","m","xstep","ystep","y","Sort","j","t","update","done","swap","random","count","key","merge","start","mid","end","start2","value","index","sort","l","r","partition","low","high","pivot","a","async","SortPage","running","rendering","queue","drawing","vector","renderCanvas","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortAction","quickSortAction","frame","window","requestAnimationFrame","cancelAnimationFrame","timeStamp","shuffle","reverse","bubbleSort","insertionSort","mergeSort","quickSort","elapsed","shift","drawBars","ref","elem","disabled","directions","Maze","createMaze","createDungeon","_createMaze","_addRooms","_carveWithRegion","_reset","_carve","my","mx","regions","fill","region","_connectRegions","_removeDeadEnds","lastDir","carve","cells","cell","posCells","dir","_canCarve","_addDir","pop","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","connectors","merged","openRegions","connector","map","dest","sources","slice","filter","con","abs","exits","_fill","pos","_isInBounds","nxt","len","min","max","pri","sec","MazePage","maze","run","onClickCreateMaze","onClickCreateDungeon","items","item","clone","routine","drawGrid","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0785a5b1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.onClickExpand = this.onClickExpand.bind(this)\r\n    }\r\n\r\n    onClickExpand() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar large dark>\r\n                <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n                <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n                    <NavBarNav>\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n                        <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n                    </NavBarNav>\r\n                </NavBarToggler>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'black' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","class Drawing {\r\n  drawBars(canvas, data) {\r\n    const n = data.length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const step = Math.floor(w / n);\r\n    const barWidth = Math.floor(step * .8);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    ctx.fillStyle = 'black'\r\n    for (let i = 0; i < n; i++) {\r\n      const barHeight = Math.floor((data[i] + 1) / 100 * .8 * h);\r\n      ctx.fillRect(i * step, h - barHeight, barWidth, barHeight);\r\n    }\r\n  }\r\n\r\n  drawGrid(canvas, data, colors) {\r\n    const n = data.length;\r\n    const m = data[0].length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const xstep = Math.floor(w / m);\r\n    const ystep = Math.floor(h / n);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    for (let y = 0; y < n; y++) {\r\n      for (let x = 0; x < m; x++) {\r\n        ctx.fillStyle = colors[data[y][x]];\r\n        ctx.fillRect(x * xstep, y * ystep, xstep, ystep);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Drawing;\r\n","class Sort {\r\n  swap(data, i, j) {\r\n    const t = data[i];\r\n    data[i] = data[j];\r\n    data[j] = t;\r\n  }\r\n\r\n  shuffle(data, update, done) {\r\n    const n = data.length;\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      this.swap(data, i, Math.floor(Math.random() * i));\r\n      update(data);\r\n    }\r\n    done();\r\n  }\r\n\r\n  reverse(data, update, done) {\r\n    const n = data.length;\r\n    for (let i = 0; i < n / 2; i++) {\r\n      this.swap(data, i, n - i - 1);\r\n      update(data);\r\n    }\r\n    done();\r\n  }\r\n\r\n  bubbleSort(data, update, done) {\r\n    const n = data.length - 1;\r\n    for (let i = 0; i < n; i++) {\r\n      let count = 0;\r\n      for (let j = 0; j < n - i; j++) {\r\n        if (data[j] > data[j + 1]) {\r\n          this.swap(data, j, j + 1);\r\n          update(data);\r\n          count++;\r\n        }\r\n      }\r\n      if (count === 0) {\r\n        break;\r\n      }\r\n    }\r\n    done();\r\n  }\r\n\r\n  insertionSort(data, update, done) {\r\n    const n = data.length;\r\n    for (let i = 1; i < n; i++) {\r\n      const key = data[i];\r\n      let j = i - 1;\r\n      while (j >= 0 && data[j] > key) {\r\n        data[j + 1] = data[j];\r\n        update(data);\r\n        j = j - 1;\r\n      }\r\n      data[j + 1] = key;\r\n      update(data);\r\n    }\r\n    done();\r\n  }\r\n\r\n  mergeSort(data, update, done) {\r\n    const sort = (data, l, r) => {\r\n      if (l < r) {\r\n        const m = Math.floor(l + (r - l) / 2);\r\n        sort(data, l, m);\r\n        sort(data, m + 1, r);\r\n        merge(data, l, m, r);\r\n      }\r\n    }\r\n    const merge = (data, start, mid, end) => {\r\n      let start2 = mid + 1;\r\n      if (data[mid] <= data[start2]) {\r\n        return;\r\n      }\r\n      while (start <= mid && start2 <= end) {\r\n        if (data[start] <= data[start2]) {\r\n          start++;\r\n        }\r\n        else {\r\n          const value = data[start2];\r\n          let index = start2;\r\n          while (index !== start) {\r\n            data[index] = data[index - 1];\r\n            update(data);\r\n            index--;\r\n          }\r\n          data[start] = value;\r\n          update(data);\r\n          start++;\r\n          mid++;\r\n          start2++;\r\n        }\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n    done();\r\n  }\r\n\r\n  quickSort(data, update, done) {\r\n    const partition = (data, low, high) => {\r\n      if (high - low > 2) {\r\n        const mid = Math.floor(low + (high - low) / 2);\r\n        if (data[low] < data[mid] && data[mid] < data[high]) {\r\n          this.swap(data, mid, high);\r\n          update(data);\r\n        }\r\n        else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n          this.swap(data, mid, high);\r\n          update(data);\r\n        }\r\n      }\r\n      const pivot = data[high];\r\n      let i = (low - 1);\r\n      for (let j = low; j <= high - 1; j++) {\r\n        if (data[j] < pivot) {\r\n          i++;\r\n          this.swap(data, i, j);\r\n          update(data);\r\n        }\r\n      }\r\n      this.swap(data, i + 1, high);\r\n      update(data);\r\n      return (i + 1);\r\n    }\r\n    const sort = async (data, low, high) => {\r\n      if (low < high) {\r\n        const mid = partition(data, low, high);\r\n        sort(data, low, mid - 1);\r\n        sort(data, mid + 1, high);\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n    done();\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button } from '../primitives'\r\nimport Drawing from '../lib/Drawing'\r\nimport Sort from '../lib/Sort'\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n    this.data = data;\r\n    this.queue = [];\r\n    this.drawing = new Drawing();\r\n    this.vector = new Sort();\r\n    this.update = this.update.bind(this)\r\n    this.done = this.done.bind(this)\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  update(data) {\r\n    this.queue.push([...data]);\r\n  }\r\n\r\n  done() {\r\n    this.setState({\r\n      running: false\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.shuffle([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  reverseAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.reverse([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.bubbleSort([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.insertionSort([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.mergeSort([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.vector.quickSort([...this.data], this.update, this.done);\r\n    });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 8) {\r\n      elapsed -= 8;\r\n      this.data = this.queue.shift();\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    this.drawing.drawBars(this.canvas, this.data);\r\n    if (!this.state.running && this.queue.length === 0) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col col=\"sm\" className=\"top-case\">\r\n            <canvas className=\"canvas\" ref={elem => this.canvas = elem} />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"h-25 mt-4\">\r\n          <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nclass Maze {\r\n  constructor() {\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n\r\n    this._createMaze = this._createMaze.bind(this);\r\n    this._addRooms = this._addRooms.bind(this);\r\n    this._carveWithRegion = this._carveWithRegion.bind(this);\r\n  }\r\n\r\n  createMaze(data, update) {\r\n    this._reset(data, 1);\r\n    this._createMaze(data, update, this._carve, { x: 1, y: 1 });\r\n  }\r\n\r\n  createDungeon(data, update) {\r\n    this._reset(data, 1);\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    this.regions = [];\r\n    for (let y = 0; y < my; y++) {\r\n      this.regions.push(Array(mx).fill(0))\r\n    }\r\n    this.region = 0;\r\n    this._addRooms(data, update, mx, my, 256, 4);\r\n    for (let y = 1; y < my; y += 2) {\r\n      for (let x = 1; x < mx; x += 2) {\r\n        if (data[y][x] === 0) {\r\n          continue;\r\n        }\r\n        this.region++;\r\n        this._createMaze(data, update, this._carveWithRegion, { x, y });\r\n      }\r\n    }\r\n    this._connectRegions(data, update, mx, my);\r\n    this._removeDeadEnds(data, update, mx, my);\r\n  }\r\n\r\n  _reset(data, value) {\r\n    const my = data.length;\r\n    for (let y = 0; y < my; y++) {\r\n      data[y].fill(value);\r\n    }\r\n  }\r\n\r\n  _createMaze(data, update, carve = this._carve, start) {\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    const cells = [];\r\n    let lastDir;\r\n    carve(data, start);\r\n    update(data);\r\n    data[start.y][start.x] = 0;\r\n    cells.push(start);\r\n    while (cells.length > 0) {\r\n      const cell = cells[cells.length - 1];\r\n      const posCells = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        if (this._canCarve(data, mx, my, cell, dir)) {\r\n          posCells.push(dir);\r\n        }\r\n      }\r\n      if (posCells.length > 0) {\r\n        let dir;\r\n        if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n          dir = lastDir;\r\n        } else {\r\n          dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n        }\r\n        carve(data, this._addDir(cell, dir, 1));\r\n        carve(data, this._addDir(cell, dir, 2));\r\n        update(data);\r\n        cells.push(this._addDir(cell, dir, 2));\r\n        lastDir = dir;\r\n      } else {\r\n        cells.pop();\r\n        lastDir = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  _addRooms(data, update, mx, my, numRoomTries, roomExtraSize) {\r\n    const rooms = [];\r\n    for (let i = 0; i < numRoomTries; i++) {\r\n      const size = (this._range(1, 3 + roomExtraSize) << 1) + 1;\r\n      let rectangularity = this._range(0, 1 + size >> 1) << 1;\r\n      let width = size;\r\n      let height = size;\r\n      if (this._range(0, 1) === 0) {\r\n        width += rectangularity;\r\n      } else {\r\n        height += rectangularity;\r\n      }\r\n      let x = (this._range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n      let y = (this._range(0, (my - height - 1) >> 1) << 1) + 1;\r\n      const room = { x, y, width, height };\r\n      let overlaps = false;\r\n      for (let j = 0; j < rooms.length; j++) {\r\n        const other = rooms[j];\r\n        if (this._isOverlapped(room, other)) {\r\n          overlaps = true;\r\n          break;\r\n        }\r\n      }\r\n      if (overlaps) {\r\n        continue;\r\n      }\r\n      rooms.push(room);\r\n      this.region++;\r\n      for (let xOffset = 0; xOffset < width; xOffset++) {\r\n        for (let yOffset = 0; yOffset < height; yOffset++) {\r\n          this._carveWithRegion(data, { x: x + xOffset, y: y + yOffset });\r\n        }\r\n        update(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, update, mx, my) {\r\n    let connectors = [];\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] !== 1) {\r\n          continue;\r\n        }\r\n        const regions = [];\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          const region = this.regions[y + dir.y][x + dir.x];\r\n          if (region !== 0 && !regions.includes(region)) {\r\n            regions.push(region);\r\n          }\r\n        }\r\n        if (regions.length < 2) {\r\n          continue;\r\n        }\r\n        connectors.push({ x, y, regions })\r\n      }\r\n    }\r\n    const merged = [0];\r\n    let openRegions = [];\r\n    for (var i = 1; i <= this.region; i++) {\r\n      merged.push(i);\r\n      openRegions.push(i);\r\n    }\r\n    while (openRegions.length > 1) {\r\n      const index = this._range(0, connectors.length - 1)\r\n      const connector = connectors[index];\r\n      this._carve(data, { x: connector.x, y: connector.y });\r\n      update(data);\r\n      const regions = connector.regions.map((region) => merged[region]);\r\n      const dest = regions[0];\r\n      const sources = regions.slice(1);\r\n      for (let i = 0; i <= this.region; i++) {\r\n        if (sources.includes(i)) {\r\n          merged[i] = dest;\r\n        }\r\n      }\r\n      openRegions = openRegions.filter((region) => {\r\n        return !sources.includes(region);\r\n      });\r\n      connectors = connectors.filter((con) => {\r\n        if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n          return false;\r\n        }\r\n        con.regions = con.regions.map((region) => merged[region]);\r\n        for (let i = 1; i < con.regions.length; i++) {\r\n          if (con.regions[i] !== con.regions[0]) {\r\n            return true;\r\n          }\r\n        }\r\n        if (this._range(0, 99) === 0) {\r\n          this._carve(data, { x: con.x, y: con.y });\r\n          update(data)\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n\r\n  _removeDeadEnds(data, update, mx, my) {\r\n    let done = false;\r\n    while (!done) {\r\n      done = true;\r\n      for (let y = 1; y < my - 1; y++) {\r\n        for (let x = 1; x < mx - 1; x++) {\r\n          if (data[y][x] === 1) {\r\n            continue;\r\n          }\r\n          let exits = 0;\r\n          for (let i = 0; i < directions.length; i++) {\r\n            const dir = directions[i];\r\n            if (data[y + dir.y][x + dir.x] !== 1) {\r\n              exits++;\r\n            }\r\n          }\r\n          if (exits !== 1) {\r\n            continue;\r\n          }\r\n          done = false;\r\n          this._fill(data, { x, y });\r\n          update(data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _fill(data, pos) {\r\n    data[pos.y][pos.x] = 1;\r\n  }\r\n\r\n  _carve(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  _carveWithRegion(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n    this.regions[pos.y][pos.x] = this.region;\r\n  }\r\n\r\n  _canCarve(data, mx, my, pos, dir) {\r\n    if (!this._isInBounds(mx, my, this._addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = this._addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  _isInBounds(mx, my, pos) {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _addDir(pos, dir, len) {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  _range(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  _isOverlapped(pri, sec) {\r\n    if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n      return false;\r\n    }\r\n    if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Maze;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button } from '../primitives'\r\nimport Drawing from '../lib/Drawing'\r\nimport Maze from '../lib/Maze'\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = []\r\n    for (let i = 0; i < 99; i++) {\r\n      data.push(Array(99).fill(1));\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.data = data;\r\n    this.queue = [];\r\n\r\n    this.drawing = new Drawing();\r\n    this.maze = new Maze();\r\n\r\n    this.run = this.run.bind(this)\r\n    this.update = this.update.bind(this)\r\n    this.done = this.done.bind(this)\r\n\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this.clone(item) : item);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      routine(this.clone(this.data), this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  update(data) {\r\n    this.queue.push(this.clone(data));\r\n  }\r\n\r\n  done() {\r\n    this.setState({\r\n      running: false\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(this.maze.createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(this.maze.createDungeon);\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 6) {\r\n      elapsed -= 6;\r\n      this.data = this.queue.shift();\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    this.drawing.drawGrid(this.canvas, this.data, ['black', 'sienna']);\r\n    if (!this.state.running && this.queue.length === 0) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"mt-5\">\r\n        <Row>\r\n          <Col col=\"sm\" className=\"side-case\">\r\n            <canvas className=\"canvas\" ref={elem => this.canvas = elem} />\r\n          </Col>\r\n          <Col col=\"sm\" className=\"d-flex flex-column justify-content-around align-items-start\">\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n            <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}