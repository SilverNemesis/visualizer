{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/AnimatedVector.js","lib/sort.js","utility.js","models/CubeModel.js","scenes/CubeScene.js","components/SortPage.js","lib/drawing.js","lib/AnimatedGrid.js","lib/maze.js","scenes/MazeScene.js","models/MazeModel.js","models/MazeModelPerPixel.js","components/MazePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","inner","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","AnimatedVector","data","frameRate","queue","getData","initialize","update","animate","timeStamp","_clone","change","elapsed","length","updates","shift","i","animating","items","map","item","shuffle","j","Math","floor","random","_swap","reverse","n","bubbleSort","count","insertionSort","key","mergeSortInPlace","merge","start","mid","end","start2","value","index","sort","l","r","m","mergeSort","aux","size","n1","n2","k","quickSort","partition","low","high","pivot","a","async","t","degreesToRadians","degrees","PI","initShaderProgram","gl","vsSource","fsSource","vertexShader","_loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","clearScreen","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","CubeModel","draw","_initShaders","model","program","attribLocations","vertexPosition","getAttribLocation","vertexColor","vertexNormal","uniformLocations","projectionMatrix","getUniformLocation","modelViewMatrix","normalMatrix","light1","position","light2","buffers","_initBuffers","viewMatrix","modelMatrix","lights","FLOAT","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","normal","ELEMENT_ARRAY_BUFFER","indices","mat4","useProgram","uniformMatrix4fv","uniform3fv","UNSIGNED_SHORT","drawElements","TRIANGLES","positionBuffer","createBuffer","bufferData","Float32Array","STATIC_DRAW","normalBuffer","faceColors","colors","c","concat","colorBuffer","indexBuffer","Uint16Array","CubeScene","totalTime","initScene","drawScene","scene","actors","lighting","camera","cameraAngle","location","scale","rotations","angle","vector","deltaTime","lightingIndex","rotateCamera","canvas","rect","getBoundingClientRect","width","window","devicePixelRatio","height","viewport","fieldOfView","aspect","clientWidth","clientHeight","actor","_renderActor","_animateActor","applyRotations","rotation","SortPage","render3D","running","rendering","run","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortInPlaceAction","mergeSortAction","quickSortAction","onClickRenderMode","onClickCanvas","renderCanvas","canvas3D","getContext","CULL_FACE","cullFace","BACK","frame","requestAnimationFrame","cancelAnimationFrame","routine","w","h","step","barWidth","ctx","clearRect","fillStyle","barHeight","fillRect","drawBars","canvas2D","row","disabled","ref","elem","AnimatedGrid","directions","y","windiness","createMaze","_reset","_createMaze","_carve","createDungeon","regions","region","carveRegion","pos","my","mx","fill","incrementRegion","numRoomTries","roomExtraSize","rooms","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","_addRooms","connectors","connectedRegions","dir","merged","openRegions","connector","dest","sources","slice","filter","con","abs","_connectRegions","done","exits","_fill","_removeDeadEnds","lastDir","carve","cells","cell","posCells","_canCarve","c1","_addDir","c2","pop","_isInBounds","nxt","len","min","max","pri","sec","MazeScene","MazeModel","animateScene","totalDelta","maze","axis","speed","_freeBuffers","vertexCount","positions","offset","addSquareXY","left","right","top","bottom","base","addSquareXZ","addSquareYZ","floorColor","ceilingColor","wallColor_Top","wallColor_Bottom","wallColor_Left","wallColor_Right","ofs_x","ofs_y","deleteBuffer","uniform3f","normals","floorNormal","ceilingNormal","wallNormal_Top","wallNormal_Bottom","wallNormal_Left","wallNormal_Right","MazePage","scenes","MazeModelPerPixel","grid","sceneIndex","onClickCreateMaze","onClickCreateDungeon","u","xo","yo","xstep","ystep","drawGrid","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a850ac5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, inner, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (inner) classes.push('section-inner')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      expanded: false\r\n    }\r\n    this.onClickExpand = this.onClickExpand.bind(this)\r\n  }\r\n\r\n  onClickExpand() {\r\n    this.setState({\r\n      expanded: !this.state.expanded\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavBar large dark>\r\n        <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n        <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n          <NavBarNav>\r\n            <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n            <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n            <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n          </NavBarNav>\r\n        </NavBarToggler>\r\n      </NavBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n    <Route path=\"/maze\" component={MazePage} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'white' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","/** Class representing an animated array of values. */\r\nclass AnimatedVector {\r\n  /**\r\n   * Create an animated vector.\r\n   * @param {*[]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value pairs. [index, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 2) {\r\n        this.data[updates[i]] = updates[i + 1];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedVector;\r\n","export function shuffle(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = n - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function reverse(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 0; i < n / 2; i++) {\r\n    const j = n - i - 1;\r\n    _swap(data, i, j);\r\n    update([i, data[i], j, data[j]]);\r\n  }\r\n}\r\n\r\nexport function bubbleSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length - 1;\r\n  for (let i = 0; i < n; i++) {\r\n    let count = 0;\r\n    for (let j = 0; j < n - i; j++) {\r\n      if (data[j] > data[j + 1]) {\r\n        _swap(data, j, j + 1);\r\n        update([j, data[j], j + 1, data[j + 1]]);\r\n        count++;\r\n      }\r\n    }\r\n    if (count === 0) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nexport function insertionSort(data, initialize, update) {\r\n  initialize();\r\n  const n = data.length;\r\n  for (let i = 1; i < n; i++) {\r\n    const key = data[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && data[j] > key) {\r\n      data[j + 1] = data[j];\r\n      update([j + 1, data[j + 1]]);\r\n      j = j - 1;\r\n    }\r\n    data[j + 1] = key;\r\n    update([j + 1, data[j + 1]]);\r\n  }\r\n}\r\n\r\nexport function mergeSortInPlace(data, initialize, update) {\r\n  initialize();\r\n  const sort = (data, l, r) => {\r\n    if (l < r) {\r\n      const m = Math.floor(l + (r - l) / 2);\r\n      sort(data, l, m);\r\n      sort(data, m + 1, r);\r\n      merge(data, l, m, r);\r\n    }\r\n  }\r\n  const merge = (data, start, mid, end) => {\r\n    if (data[mid] < data[mid + 1]) {\r\n      return;\r\n    }\r\n    let start2 = mid + 1;\r\n    while (start <= mid && start2 <= end) {\r\n      if (data[start] <= data[start2]) {\r\n        start++;\r\n      }\r\n      else {\r\n        const value = data[start2];\r\n        let index = start2;\r\n        while (index !== start) {\r\n          data[index] = data[index - 1];\r\n          update([index, data[index]]);\r\n          index--;\r\n        }\r\n        data[start] = value;\r\n        update([start, data[start]]);\r\n        start++;\r\n        mid++;\r\n        start2++;\r\n      }\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nexport function mergeSort(data, initialize, update) {\r\n  initialize();\r\n  const aux = new Array(data.size);\r\n  const sort = (data, l, r) => {\r\n    if (l < r) {\r\n      const m = Math.floor(l + (r - l) / 2);\r\n      sort(data, l, m);\r\n      sort(data, m + 1, r);\r\n      merge(data, l, m, r);\r\n    }\r\n  }\r\n  const merge = (data, start, mid, end) => {\r\n    if (data[mid] < data[mid + 1]) {\r\n      return;\r\n    }\r\n    const n = end - start + 1\r\n    for (let i = 0; i < n; i++) {\r\n      aux[i] = data[i + start]\r\n    }\r\n    const n1 = mid - start + 1;\r\n    const n2 = end - start + 1;\r\n    let i = 0;\r\n    let j = n1;\r\n    let k = start;\r\n    while (i < n1 && j < n2) {\r\n      if (aux[i] <= aux[j]) {\r\n        data[k] = aux[i];\r\n        update([k, data[k]]);\r\n        i++;\r\n      }\r\n      else {\r\n        data[k] = aux[j];\r\n        update([k, data[k]]);\r\n        j++;\r\n      }\r\n      k++;\r\n    }\r\n    while (i < n1) {\r\n      data[k] = aux[i];\r\n      update([k, data[k]]);\r\n      i++;\r\n      k++;\r\n    }\r\n    while (j < n2) {\r\n      data[k] = aux[j];\r\n      update([k, data[k]]);\r\n      j++;\r\n      k++;\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nexport function quickSort(data, initialize, update) {\r\n  initialize();\r\n  const partition = (data, low, high) => {\r\n    if (high - low > 2) {\r\n      const mid = Math.floor(low + (high - low) / 2);\r\n      if (data[low] < data[mid] && data[mid] < data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n      else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n        _swap(data, mid, high);\r\n        update([mid, data[mid], high, data[high]]);\r\n      }\r\n    }\r\n    const pivot = data[high];\r\n    let i = (low - 1);\r\n    for (let j = low; j <= high - 1; j++) {\r\n      if (data[j] < pivot) {\r\n        i++;\r\n        _swap(data, i, j);\r\n        update([i, data[i], j, data[j]]);\r\n      }\r\n    }\r\n    _swap(data, i + 1, high);\r\n    update([i + 1, data[i + 1], high, data[high]]);\r\n    return (i + 1);\r\n  }\r\n  const sort = async (data, low, high) => {\r\n    if (low < high) {\r\n      const mid = partition(data, low, high);\r\n      sort(data, low, mid - 1);\r\n      sort(data, mid + 1, high);\r\n    }\r\n  }\r\n  sort(data, 0, data.length - 1);\r\n}\r\n\r\nfunction _swap(data, i, j) {\r\n  const t = data[i];\r\n  data[i] = data[j];\r\n  data[j] = t;\r\n}\r\n","export function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = _loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = _loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n  return shaderProgram;\r\n}\r\n\r\nfunction _loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n}\r\n\r\nexport function loadTexture(gl, url) {\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  const level = 0;\r\n  const internalFormat = gl.RGBA;\r\n  const width = 1;\r\n  const height = 1;\r\n  const border = 0;\r\n  const srcFormat = gl.RGBA;\r\n  const srcType = gl.UNSIGNED_BYTE;\r\n  const pixel = new Uint8Array([0, 0, 255, 255]);\r\n  gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      srcFormat, srcType, image);\r\n    if (_isPowerOf2(image.width) && _isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n  return texture;\r\n}\r\n\r\nfunction _isPowerOf2(value) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function clearScreen(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nconst _directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nexport function generateMaze(width, height, windiness = 0.8) {\r\n  const carve = (pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  const canCarve = (pos, dir) => {\r\n    if (!isInBounds(addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  const isInBounds = (pos) => {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= width || pos.y >= height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const addDir = (pos, dir, len) => {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  const data = [];\r\n  for (let y = 0; y < height; y++) {\r\n    data.push(new Array(width).fill(1));\r\n  }\r\n\r\n  const start = { x: 1, y: 1 };\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(start);\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < _directions.length; i++) {\r\n      const dir = _directions[i];\r\n      if (canCarve(cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      carve(addDir(cell, dir, 1));\r\n      carve(addDir(cell, dir, 2));\r\n      cells.push(addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    data\r\n  };\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass CubeModel {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'vert'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'vertColor'),\r\n        vertexNormal: gl.getAttribLocation(shaderProgram, 'vertNormal')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'camera'),\r\n        modelViewMatrix: gl.getUniformLocation(shaderProgram, 'model'),\r\n        normalMatrix: gl.getUniformLocation(shaderProgram, 'normalMatrix'),\r\n        light1: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light1.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light1.color')\r\n        },\r\n        light2: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light2.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light2.color')\r\n        }\r\n      },\r\n      buffers: this._initBuffers(gl)\r\n    }\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix, lights) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.normal);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexNormal);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const modelViewMatrix = mat4.create();\r\n    mat4.multiply(modelViewMatrix, viewMatrix, modelMatrix);\r\n\r\n    const normalMatrix = mat4.create();\r\n    mat4.invert(normalMatrix, modelViewMatrix);\r\n    mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.normalMatrix, false, normalMatrix);\r\n    gl.uniform3fv(model.uniformLocations.light1.position, lights[0].position);\r\n    gl.uniform3fv(model.uniformLocations.light1.color, lights[0].color);\r\n    gl.uniform3fv(model.uniformLocations.light2.position, lights[1].position);\r\n    gl.uniform3fv(model.uniformLocations.light2.color, lights[1].color);\r\n\r\n    {\r\n      const vertexCount = 36;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      uniform mat4 camera;\r\n      uniform mat4 model;\r\n\r\n      attribute vec3 vert;\r\n      attribute vec4 vertColor;\r\n      attribute vec3 vertNormal;\r\n\r\n      varying lowp vec3 fragVert;\r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n\r\n      void main(void) {\r\n        fragColor = vertColor;\r\n        fragNormal = vertNormal;\r\n        fragVert = vert;\r\n        gl_Position = camera * model * vec4(vert, 1);\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      precision highp float;\r\n\r\n      uniform mat4 model;\r\n      uniform mat4 normalMatrix;\r\n      \r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light1;\r\n      \r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light2;\r\n      \r\n      varying lowp vec4 fragColor;\r\n      varying lowp vec3 fragNormal;\r\n      varying lowp vec3 fragVert;\r\n      \r\n      void main() {\r\n          vec3 normal = vec3(normalize(normalMatrix * vec4(fragNormal, 1)));\r\n          \r\n          vec3 fragPosition = vec3(model * vec4(fragVert, 1));\r\n          \r\n          vec3 surfaceToLight1 = light1.position - fragPosition;\r\n          float bright1 = dot(normal, surfaceToLight1) / (length(surfaceToLight1) * length(normal));\r\n          bright1 = clamp(bright1, 0.0, 1.0);\r\n      \r\n          vec3 surfaceToLight2 = light2.position - fragPosition;\r\n          float bright2 = dot(normal, surfaceToLight2) / (length(surfaceToLight2) * length(normal));\r\n          bright2 = clamp(bright2, 0.0, 1.0);\r\n      \r\n          gl_FragColor = vec4(bright1 * light1.color * fragColor.rgb + bright2 * light2.color * fragColor.rgb, fragColor.a);\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl) {\r\n    const positions = [\r\n      // Front face\r\n      -1.0, -1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n\r\n      // Back face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, 1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n\r\n      // Top face\r\n      -1.0, 1.0, -1.0,\r\n      -1.0, 1.0, 1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, 1.0, -1.0,\r\n\r\n      // Bottom face\r\n      -1.0, -1.0, -1.0,\r\n      1.0, -1.0, -1.0,\r\n      1.0, -1.0, 1.0,\r\n      -1.0, -1.0, 1.0,\r\n\r\n      // Right face\r\n      1.0, -1.0, -1.0,\r\n      1.0, 1.0, -1.0,\r\n      1.0, 1.0, 1.0,\r\n      1.0, -1.0, 1.0,\r\n\r\n      // Left face\r\n      -1.0, -1.0, -1.0,\r\n      -1.0, -1.0, 1.0,\r\n      -1.0, 1.0, 1.0,\r\n      -1.0, 1.0, -1.0,\r\n    ];\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const vertexNormals = [\r\n      // Front\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n      0.0, 0.0, 1.0,\r\n\r\n      // Back\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n      0.0, 0.0, -1.0,\r\n\r\n      // Top\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n      0.0, 1.0, 0.0,\r\n\r\n      // Bottom\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n      0.0, -1.0, 0.0,\r\n\r\n      // Right\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n      1.0, 0.0, 0.0,\r\n\r\n      // Left\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0,\r\n      -1.0, 0.0, 0.0\r\n    ];\r\n\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexNormals), gl.STATIC_DRAW);\r\n\r\n    const faceColors = [\r\n      [1.0, 1.0, 1.0, 1.0],    // Front face: white\r\n      [1.0, 0.0, 0.0, 1.0],    // Back face: red\r\n      [0.0, 1.0, 0.0, 1.0],    // Top face: green\r\n      [0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\r\n      [1.0, 1.0, 0.0, 1.0],    // Right face: yellow\r\n      [1.0, 0.0, 1.0, 1.0],    // Left face: purple\r\n    ];\r\n    let colors = [];\r\n    for (let j = 0; j < faceColors.length; ++j) {\r\n      const c = faceColors[0];\r\n      colors = colors.concat(c, c, c, c);\r\n    }\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indices = [\r\n      // Front\r\n      0, 1, 2, 0, 2, 3,\r\n\r\n      // Back\r\n      4, 5, 6, 4, 6, 7,\r\n\r\n      // Top\r\n      8, 9, 10, 8, 10, 11,\r\n\r\n      // Bottom\r\n      12, 13, 14, 12, 14, 15,\r\n\r\n      // Right\r\n      16, 17, 18, 16, 18, 19,\r\n\r\n      // Left\r\n      20, 21, 22, 20, 22, 23,\r\n    ];\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, normal: normalBuffer, color: colorBuffer, indices: indexBuffer };\r\n  }\r\n}\r\n\r\nexport default CubeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../utility'\r\nimport CubeModel from '../models/CubeModel';\r\n\r\nclass CubeScene {\r\n  constructor() {\r\n    this.totalTime = 0.0;\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n  }\r\n\r\n  initScene(gl, data) {\r\n    const model = new CubeModel(gl);\r\n    this.scene = {\r\n      actors: [],\r\n      lighting: [\r\n        [\r\n          {\r\n            position: [50.0, 10.0, 20.0],\r\n            color: [1.0, 1.0, 1.0]\r\n          },\r\n          {\r\n            position: [0.0, 0.0, 0.0],\r\n            color: [0.0, 0.0, 0.0]\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            position: [50.0, 10.0, 20.0],\r\n            color: [1.0, 0.0, 1.0]\r\n          },\r\n          {\r\n            position: [-50.0, -10.0, 20.0],\r\n            color: [0.0, 1.0, 0.0]\r\n          }\r\n        ]\r\n      ],\r\n      camera: [0.0, 0.0, 50.0],\r\n      cameraAngle: 0.0\r\n    };\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.scene.actors.push(\r\n        {\r\n          model,\r\n          location: [0.5 * (i - ((data.length - 1) / 2)), 0.0, 0.0],\r\n          scale: [0.1, 0.1 * (data[i] + 1), 0.2],\r\n          rotations: [\r\n            {\r\n              angle: degreesToRadians(-25),\r\n              vector: [1, 0, 0]\r\n            }\r\n          ]\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  drawScene(gl, deltaTime, data, lightingIndex, rotateCamera) {\r\n    const canvas = gl.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width * window.devicePixelRatio;\r\n    canvas.height = rect.height * window.devicePixelRatio;\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    const scene = this.scene;\r\n    const lights = scene.lighting[lightingIndex];\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 100.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    if (rotateCamera) {\r\n      mat4.rotate(viewMatrix, viewMatrix, scene.cameraAngle, [0, 1, 0]);\r\n    }\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._renderActor(projectionMatrix, viewMatrix, actor, lights, !rotateCamera);\r\n      this._animateActor(actor, deltaTime, data[i]);\r\n    }\r\n\r\n    if (rotateCamera) {\r\n      scene.cameraAngle += 0.001 * deltaTime;\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor, lights, applyRotations) {\r\n    const model = actor.model;\r\n    const modelMatrix = mat4.create();\r\n    if (applyRotations) {\r\n      for (let i = 0; i < actor.rotations.length; i++) {\r\n        const rotation = actor.rotations[i];\r\n        mat4.rotate(modelMatrix, modelMatrix, rotation.angle, rotation.vector);\r\n      }\r\n    }\r\n    else {\r\n      const angle = degreesToRadians(-25);\r\n      const vector = [1, 0, 0];\r\n      mat4.rotate(modelMatrix, modelMatrix, angle, vector);\r\n    }\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.scale(modelMatrix, modelMatrix, actor.scale);\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix, lights);\r\n  }\r\n\r\n  _animateActor(actor, deltaTime, height) {\r\n    actor.scale[1] = 0.1 * (height + 1);\r\n    actor.rotations[0].angle += deltaTime * 0.002;\r\n  }\r\n}\r\n\r\nexport default CubeScene;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport AnimatedVector from '../lib/AnimatedVector'\r\nimport { shuffle, reverse, bubbleSort, insertionSort, mergeSortInPlace, mergeSort, quickSort } from '../lib/sort'\r\nimport { drawBars } from '../lib/drawing'\r\nimport CubeScene from '../scenes/CubeScene';\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scene = new CubeScene();\r\n\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n\r\n    this.vector = new AnimatedVector(data, 8);\r\n\r\n    this.state = {\r\n      render3D: false,\r\n      lightingIndex: 0,\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.run = this.run.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortInPlaceAction = this.mergeSortInPlaceAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n    this.onClickRenderMode = this.onClickRenderMode.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvas3D;\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      this.scene.initScene(this.gl, this.vector.getData());\r\n      this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine([...this.vector.getData()], this.vector.initialize, this.vector.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.run(shuffle);\r\n  }\r\n\r\n  reverseAction() {\r\n    this.run(reverse);\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.run(bubbleSort);\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.run(insertionSort);\r\n  }\r\n\r\n  mergeSortInPlaceAction() {\r\n    this.run(mergeSortInPlace);\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.run(mergeSort);\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.run(quickSort);\r\n  }\r\n\r\n  onClickRenderMode() {\r\n    this.setState({\r\n      render3D: !this.state.render3D\r\n    });\r\n  }\r\n\r\n  onClickCanvas() {\r\n    this.setState({\r\n      lightingIndex: 1 - this.state.lightingIndex\r\n    });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const { animating, data } = this.vector.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    if (this.state.render3D) {\r\n      this.scene.drawScene(this.gl, deltaTime, data, this.state.lightingIndex, this.state.lightingIndex === 0);\r\n    } else {\r\n      drawBars(this.canvas2D, data);\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-2 mb-2\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortInPlaceAction}>Merge Sort (In Place)</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n              <Button styles=\"primary\" onClick={this.onClickRenderMode}>{this.state.render3D ? 'Switch To 2D' : 'Switch To 3D'}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className={this.state.render3D ? 'canvas' : 'canvas none'} ref={elem => this.canvas3D = elem} onClick={this.onClickCanvas} />\r\n        <canvas className={this.state.render3D ? 'canvas none' : 'canvas'} ref={elem => this.canvas2D = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","export function drawBars(canvas, data) {\r\n  const rect = canvas.getBoundingClientRect()\r\n  canvas.width = rect.width * window.devicePixelRatio;\r\n  canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n  const n = data.length;\r\n  const w = rect.width;\r\n  const h = rect.height;\r\n  const step = Math.floor(w / n) * .9;\r\n  const barWidth = Math.floor(step * .8);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  ctx.fillStyle = 'lightgrey'\r\n  for (let i = 0; i < n; i++) {\r\n    const barHeight = Math.floor((data[i] + 1) / n * .8 * h);\r\n    ctx.fillRect(.05 * w + i * step, .9 * h - barHeight, barWidth, barHeight);\r\n  }\r\n}\r\n\r\nexport function drawGrid(canvas, data, colors) {\r\n  const rect = canvas.getBoundingClientRect()\r\n  canvas.width = rect.width * window.devicePixelRatio;\r\n  canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n  const n = data.length;\r\n  const m = data[0].length;\r\n  const u = Math.floor(Math.min(canvas.width / 16, canvas.height / 9));\r\n  const w = Math.floor(u * 9 / m) * m;\r\n  const h = Math.floor(u * 9 / n) * n;\r\n  const xo = Math.floor((canvas.width - w) / 2);\r\n  const yo = Math.floor((canvas.height - h) / 2);\r\n  const xstep = Math.floor(w / m);\r\n  const ystep = Math.floor(h / n);\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.clearRect(0, 0, w, h);\r\n  for (let y = 0; y < n; y++) {\r\n    for (let x = 0; x < m; x++) {\r\n      ctx.fillStyle = colors[data[y][x]];\r\n      ctx.fillRect(xo + x * xstep, yo + y * ystep, xstep, ystep);\r\n    }\r\n  }\r\n}\r\n","/** Class representing an animated two-dimensional array of values. */\r\nclass AnimatedGrid {\r\n  /**\r\n   * Create an animated grid.\r\n   * @param {*[][]} data - The initial state of the data.\r\n   * @param {number} frameRate - The frame rate of the animation in milliseconds.\r\n   */\r\n  constructor(data, frameRate) {\r\n    this.data = data;\r\n    this.frameRate = frameRate;\r\n    this.queue = [];\r\n    this.getData = this.getData.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Get the current data.\r\n   * @return {*[][]} The data at the current time.\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Initialize a new animation.\r\n   * @param {*[][]} data - Optional parameter to reset the data.\r\n   */\r\n  initialize(data) {\r\n    this.timeStamp = undefined;\r\n    if (data) {\r\n      this.data = this._clone(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a frame to the current animation.\r\n   * @param {*[]} change - An array of index value triplets. [index1, index0, value, ...]\r\n   */\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} AnimationState\r\n   * @property {bool} animating - Whether or not the animation is still in progress.\r\n   * @property {*[][]} data - The data at the current time.\r\n   */\r\n\r\n  /**\r\n    * Run the animation based on time.\r\n    * @param {number} timeStamp - The current time.\r\n    * @return {AnimationState} - The resulting state of the animation.\r\n    */\r\n  animate(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= this.frameRate) {\r\n      elapsed -= this.frameRate;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 3) {\r\n        this.data[updates[i + 1]][updates[i]] = updates[i + 2];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    return {\r\n      animating: this.queue.length !== 0,\r\n      data: this.data\r\n    }\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n}\r\n\r\nexport default AnimatedGrid;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nexport function createMaze(data, initialize, update) {\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  _createMaze(data, update, _carve, { x: 1, y: 1 });\r\n}\r\n\r\nexport function createDungeon(data, initialize, update) {\r\n  const regions = [];\r\n  let region = 0;\r\n\r\n  const incrementRegion = (data, pos) => {\r\n    region++;\r\n  }\r\n\r\n  const carveRegion = (data, pos) => {\r\n    data[pos.y][pos.x] = 0;\r\n    regions[pos.y][pos.x] = region;\r\n  }\r\n\r\n  _reset(data, 1);\r\n  initialize(data);\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  for (let y = 0; y < my; y++) {\r\n    regions.push(Array(mx).fill(0))\r\n  }\r\n  _addRooms(data, update, mx, my, incrementRegion, carveRegion, 256, 4);\r\n  for (let y = 1; y < my; y += 2) {\r\n    for (let x = 1; x < mx; x += 2) {\r\n      if (data[y][x] === 0) {\r\n        continue;\r\n      }\r\n      region++;\r\n      _createMaze(data, update, carveRegion, { x, y });\r\n    }\r\n  }\r\n  _connectRegions(data, update, mx, my, region, regions);\r\n  _removeDeadEnds(data, update, mx, my);\r\n}\r\n\r\nfunction _reset(data, value) {\r\n  const my = data.length;\r\n  for (let y = 0; y < my; y++) {\r\n    data[y].fill(value);\r\n  }\r\n}\r\n\r\nfunction _createMaze(data, update, carve = _carve, start) {\r\n  const my = data.length;\r\n  const mx = data[0].length;\r\n  const cells = [];\r\n  let lastDir;\r\n  carve(data, start);\r\n  update([start.x, start.y, data[start.y][start.x]]);\r\n  data[start.y][start.x] = 0;\r\n  cells.push(start);\r\n  while (cells.length > 0) {\r\n    const cell = cells[cells.length - 1];\r\n    const posCells = [];\r\n    for (let i = 0; i < directions.length; i++) {\r\n      const dir = directions[i];\r\n      if (_canCarve(data, mx, my, cell, dir)) {\r\n        posCells.push(dir);\r\n      }\r\n    }\r\n    if (posCells.length > 0) {\r\n      let dir;\r\n      if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n        dir = lastDir;\r\n      } else {\r\n        dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n      }\r\n      const c1 = _addDir(cell, dir, 1);\r\n      const c2 = _addDir(cell, dir, 2);\r\n      carve(data, c1);\r\n      carve(data, c2);\r\n      update([c1.x, c1.y, data[c1.y][c1.x], c2.x, c2.y, data[c2.y][c2.x]]);\r\n      cells.push(_addDir(cell, dir, 2));\r\n      lastDir = dir;\r\n    } else {\r\n      cells.pop();\r\n      lastDir = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _addRooms(data, update, mx, my, incrementRegion, carveRegion, numRoomTries, roomExtraSize) {\r\n  const rooms = [];\r\n  for (let i = 0; i < numRoomTries; i++) {\r\n    const size = (_range(1, 3 + roomExtraSize) << 1) + 1;\r\n    let rectangularity = _range(0, 1 + size >> 1) << 1;\r\n    let width = size;\r\n    let height = size;\r\n    if (_range(0, 1) === 0) {\r\n      width += rectangularity;\r\n    } else {\r\n      height += rectangularity;\r\n    }\r\n    let x = (_range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n    let y = (_range(0, (my - height - 1) >> 1) << 1) + 1;\r\n    const room = { x, y, width, height };\r\n    let overlaps = false;\r\n    for (let j = 0; j < rooms.length; j++) {\r\n      const other = rooms[j];\r\n      if (_isOverlapped(room, other)) {\r\n        overlaps = true;\r\n        break;\r\n      }\r\n    }\r\n    if (overlaps) {\r\n      continue;\r\n    }\r\n    rooms.push(room);\r\n    incrementRegion();\r\n    for (let xOffset = 0; xOffset < width; xOffset++) {\r\n      const updates = [];\r\n      for (let yOffset = 0; yOffset < height; yOffset++) {\r\n        carveRegion(data, { x: x + xOffset, y: y + yOffset });\r\n        updates.push(x + xOffset, y + yOffset, data[y + yOffset][x + xOffset])\r\n      }\r\n      update(updates);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _connectRegions(data, update, mx, my, region, regions) {\r\n  let connectors = [];\r\n  for (let y = 1; y < my - 1; y++) {\r\n    for (let x = 1; x < mx - 1; x++) {\r\n      if (data[y][x] !== 1) {\r\n        continue;\r\n      }\r\n      const connectedRegions = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        const region = regions[y + dir.y][x + dir.x];\r\n        if (region !== 0 && !connectedRegions.includes(region)) {\r\n          connectedRegions.push(region);\r\n        }\r\n      }\r\n      if (connectedRegions.length < 2) {\r\n        continue;\r\n      }\r\n      connectors.push({ x, y, regions: connectedRegions })\r\n    }\r\n  }\r\n  const merged = [0];\r\n  let openRegions = [];\r\n  for (var i = 1; i <= region; i++) {\r\n    merged.push(i);\r\n    openRegions.push(i);\r\n  }\r\n  while (openRegions.length > 1) {\r\n    const index = _range(0, connectors.length - 1)\r\n    const connector = connectors[index];\r\n    _carve(data, { x: connector.x, y: connector.y });\r\n    update([connector.x, connector.y, data[connector.y][connector.x]]);\r\n    const regions = connector.regions.map((region) => merged[region]);\r\n    const dest = regions[0];\r\n    const sources = regions.slice(1);\r\n    for (let i = 0; i <= region; i++) {\r\n      if (sources.includes(i)) {\r\n        merged[i] = dest;\r\n      }\r\n    }\r\n    openRegions = openRegions.filter((region) => {\r\n      return !sources.includes(region);\r\n    });\r\n    connectors = connectors.filter((con) => {\r\n      if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n        return false;\r\n      }\r\n      con.regions = con.regions.map((region) => merged[region]);\r\n      for (let i = 1; i < con.regions.length; i++) {\r\n        if (con.regions[i] !== con.regions[0]) {\r\n          return true;\r\n        }\r\n      }\r\n      if (_range(0, 99) === 0) {\r\n        _carve(data, { x: con.x, y: con.y });\r\n        update([con.x, con.y, data[con.y][con.x]]);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nfunction _removeDeadEnds(data, update, mx, my) {\r\n  let done = false;\r\n  while (!done) {\r\n    done = true;\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] === 1) {\r\n          continue;\r\n        }\r\n        let exits = 0;\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          if (data[y + dir.y][x + dir.x] !== 1) {\r\n            exits++;\r\n          }\r\n        }\r\n        if (exits !== 1) {\r\n          continue;\r\n        }\r\n        done = false;\r\n        _fill(data, { x, y });\r\n        update([x, y, data[y][x]]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction _fill(data, pos) {\r\n  data[pos.y][pos.x] = 1;\r\n}\r\n\r\nfunction _carve(data, pos) {\r\n  data[pos.y][pos.x] = 0;\r\n}\r\n\r\nfunction _canCarve(data, mx, my, pos, dir) {\r\n  if (!_isInBounds(mx, my, _addDir(pos, dir, 3))) {\r\n    return false;\r\n  }\r\n  const nxt = _addDir(pos, dir, 2);\r\n  return data[nxt.y][nxt.x] === 1;\r\n}\r\n\r\nfunction _isInBounds(mx, my, pos) {\r\n  if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _addDir(pos, dir, len) {\r\n  return {\r\n    x: pos.x + dir.x * len,\r\n    y: pos.y + dir.y * len\r\n  }\r\n}\r\n\r\nfunction _range(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction _isOverlapped(pri, sec) {\r\n  if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n    return false;\r\n  }\r\n  if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { clearScreen, degreesToRadians } from '../utility'\r\n\r\nclass MazeScene {\r\n  constructor(MazeModel) {\r\n    this.MazeModel = MazeModel;\r\n    this.initScene = this.initScene.bind(this);\r\n    this.drawScene = this.drawScene.bind(this);\r\n    this.animateScene = this.animateScene.bind(this);\r\n    this.totalDelta = 0.0;\r\n  }\r\n\r\n  initScene(gl, maze) {\r\n    const model = new this.MazeModel(gl, maze);\r\n    this.scene = {\r\n      actors: [\r\n        {\r\n          model,\r\n          location: [0.0, 10.0, -1.6 * maze.height],\r\n          rotation: { angle: 0.0, axis: [0, 0, 1], speed: 0.5 }\r\n        }\r\n      ],\r\n      camera: [0.0, 0.0, 0.0]\r\n    };\r\n  }\r\n\r\n  drawScene(gl, maze) {\r\n    const canvas = gl.canvas;\r\n    const rect = canvas.getBoundingClientRect()\r\n    canvas.width = rect.width * window.devicePixelRatio;\r\n    canvas.height = rect.height * window.devicePixelRatio;\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    const scene = this.scene;\r\n\r\n    clearScreen(gl);\r\n\r\n    const fieldOfView = 45 * Math.PI / 180;\r\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const zNear = 0.1;\r\n    const zFar = 500.0;\r\n    const projectionMatrix = mat4.create();\r\n    mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.translate(viewMatrix, viewMatrix, scene.camera);\r\n    mat4.invert(viewMatrix, viewMatrix)\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      actor.model.update(maze);\r\n      this._renderActor(projectionMatrix, viewMatrix, actor);\r\n    }\r\n  }\r\n\r\n  _renderActor(projectionMatrix, viewMatrix, actor) {\r\n    const model = actor.model;\r\n\r\n    const modelMatrix = mat4.create();\r\n    mat4.translate(modelMatrix, modelMatrix, actor.location);\r\n    mat4.rotate(modelMatrix, modelMatrix, degreesToRadians(-45), [1, 0, 0]);\r\n    mat4.rotate(modelMatrix, modelMatrix, actor.rotation.angle, actor.rotation.axis);\r\n\r\n    model.draw(projectionMatrix, viewMatrix, modelMatrix);\r\n  }\r\n\r\n  animateScene(deltaTime) {\r\n    const scene = this.scene;\r\n\r\n    for (let i = 0; i < scene.actors.length; i++) {\r\n      const actor = scene.actors[i];\r\n      this._animateActor(deltaTime, actor);\r\n    }\r\n  }\r\n\r\n  _animateActor(deltaTime, actor) {\r\n    actor.rotation.angle += deltaTime * 0.001 * actor.rotation.speed;\r\n  }\r\n}\r\n\r\nexport default MazeScene;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass MazeModel {\r\n  constructor(gl, maze) {\r\n    this.gl = gl;\r\n    this.maze = maze;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n        modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix')\r\n      },\r\n      buffers: this._initBuffers(gl, maze)\r\n    }\r\n  }\r\n\r\n  update(maze) {\r\n    this._freeBuffers(this.gl, this.model.buffers);\r\n    this.maze = maze;\r\n    this.model.buffers = this._initBuffers(this.gl, maze);\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const modelViewMatrix = mat4.create();\r\n    mat4.multiply(modelViewMatrix, viewMatrix, modelMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelViewMatrix, false, modelViewMatrix);\r\n\r\n    {\r\n      const vertexCount = buffers.vertexCount;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      attribute vec4 aVertexPosition;\r\n      attribute vec4 aVertexColor;\r\n\r\n      uniform mat4 uModelViewMatrix;\r\n      uniform mat4 uProjectionMatrix;\r\n\r\n      varying lowp vec4 vColor;\r\n\r\n      void main(void) {\r\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n        vColor = aVertexColor;\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      varying lowp vec4 vColor;\r\n\r\n      void main(void) {\r\n        gl_FragColor = vColor;\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl, maze) {\r\n    const positions = []\r\n    const colors = [];\r\n    const indices = [];\r\n    let offset = 0;\r\n\r\n    const addSquareXY = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          left, top, base,\r\n          right, top, base,\r\n          right, bottom, base,\r\n          left, bottom, base\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareXZ = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          left, base, top,\r\n          right, base, top,\r\n          right, base, bottom,\r\n          left, base, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareYZ = (left, right, top, bottom, base, color) => {\r\n      positions.push\r\n        (\r\n          base, left, top,\r\n          base, right, top,\r\n          base, right, bottom,\r\n          base, left, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const floorColor = [.2, .2, .2, 1];\r\n    const ceilingColor = [.7, .7, .7, 1];\r\n    const wallColor_Top = [.5, 0, .5, 1];\r\n    const wallColor_Bottom = [0, .5, 0, 1];\r\n    const wallColor_Left = [.5, 0, 0, 1];\r\n    const wallColor_Right = [0, .0, .5, 1];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const top = y + ofs_y;\r\n        const bottom = top + 1;\r\n\r\n        if (maze.data[y][x] === 0) {\r\n          addSquareXY(left, right, top, bottom, 0.0, floorColor);\r\n        } else {\r\n          addSquareXY(left, right, top, bottom, 1.0, ceilingColor);\r\n\r\n          if (y === 0 || maze.data[y - 1][x] === 0) {\r\n            addSquareXZ(left, right, 0.0, 1.0, top, wallColor_Top);\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] === 0) {\r\n            addSquareYZ(bottom, top, 0.0, 1.0, left, wallColor_Left);\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] === 0) {\r\n            addSquareXZ(right, left, 0.0, 1.0, bottom, wallColor_Bottom);\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] === 0) {\r\n            addSquareYZ(top, bottom, 0.0, 1.0, right, wallColor_Right);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, color: colorBuffer, indices: indexBuffer, vertexCount: indices.length };\r\n  }\r\n\r\n  _freeBuffers(gl, buffers) {\r\n    gl.deleteBuffer(buffers.position);\r\n    gl.deleteBuffer(buffers.color);\r\n    gl.deleteBuffer(buffers.indices);\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import * as mat4 from 'gl-matrix/mat4';\r\nimport { initShaderProgram } from '../utility'\r\n\r\nclass MazeModel {\r\n  constructor(gl, maze) {\r\n    this.gl = gl;\r\n    this.maze = maze;\r\n    this.draw = this.draw.bind(this);\r\n    const shaderProgram = this._initShaders(gl);\r\n    this.model = {\r\n      program: shaderProgram,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(shaderProgram, 'vert'),\r\n        vertexColor: gl.getAttribLocation(shaderProgram, 'vertColor'),\r\n        vertexNormal: gl.getAttribLocation(shaderProgram, 'vertNormal')\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n        viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\r\n        modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\r\n        normalMatrix: gl.getUniformLocation(shaderProgram, 'uNormalMatrix'),\r\n        light: {\r\n          position: gl.getUniformLocation(shaderProgram, 'light.position'),\r\n          color: gl.getUniformLocation(shaderProgram, 'light.color')\r\n        }\r\n      },\r\n      buffers: this._initBuffers(gl, maze)\r\n    }\r\n  }\r\n\r\n  update(maze) {\r\n    this._freeBuffers(this.gl, this.model.buffers);\r\n    this.maze = maze;\r\n    this.model.buffers = this._initBuffers(this.gl, maze);\r\n  }\r\n\r\n  draw(projectionMatrix, viewMatrix, modelMatrix) {\r\n    const gl = this.gl;\r\n    const model = this.model;\r\n    const { buffers } = this.model;\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexPosition);\r\n    }\r\n\r\n    {\r\n      const numComponents = 3;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.normal);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexNormal, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexNormal);\r\n    }\r\n\r\n    {\r\n      const numComponents = 4;\r\n      const type = gl.FLOAT;\r\n      const normalize = false;\r\n      const stride = 0;\r\n      const offset = 0;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n      gl.vertexAttribPointer(model.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\r\n      gl.enableVertexAttribArray(model.attribLocations.vertexColor);\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n    const normalMatrix = mat4.create();\r\n    mat4.invert(normalMatrix, modelMatrix);\r\n    mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n    gl.useProgram(model.program);\r\n    gl.uniformMatrix4fv(model.uniformLocations.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.modelMatrix, false, modelMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.viewMatrix, false, viewMatrix);\r\n    gl.uniformMatrix4fv(model.uniformLocations.normalMatrix, false, normalMatrix);\r\n\r\n    gl.uniform3f(model.uniformLocations.light.position, 0.0, 14.0, 0.0);\r\n    gl.uniform3f(model.uniformLocations.light.color, 1.0, 1.0, 1.0);\r\n\r\n    {\r\n      const vertexCount = buffers.vertexCount;\r\n      const type = gl.UNSIGNED_SHORT;\r\n      const offset = 0;\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n  }\r\n\r\n  _initShaders(gl) {\r\n    const vsSource = `\r\n      precision mediump float;\r\n\r\n      uniform mat4 uProjectionMatrix;\r\n      uniform mat4 uViewMatrix;\r\n      uniform mat4 uModelMatrix;\r\n      uniform mat4 uNormalMatrix;\r\n\r\n      attribute vec3 vert;\r\n      attribute vec4 vertColor;\r\n      attribute vec3 vertNormal;\r\n\r\n      varying vec3 fragPosition;\r\n      varying vec4 fragColor;\r\n      varying vec3 fragNormal;\r\n\r\n      void main(void) {\r\n        fragPosition = vec3(uModelMatrix * vec4(vert, 1));\r\n        fragColor = vertColor;\r\n        fragNormal = vec3(uNormalMatrix * vec4(vertNormal, 1));\r\n        gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(vert, 1);\r\n      }\r\n    `;\r\n\r\n    const fsSource = `\r\n      precision mediump float;\r\n\r\n      uniform struct {\r\n        vec3 position;\r\n        vec3 color;\r\n      } light;\r\n      \r\n      varying vec3 fragPosition;\r\n      varying vec4 fragColor;\r\n      varying vec3 fragNormal;\r\n      \r\n      void main() {          \r\n          float ambient = 0.0;\r\n\r\n          vec3 light_dir = light.position - fragPosition;\r\n          float distance = length(light_dir);\r\n          float diffuse = dot(fragNormal, normalize(light_dir));\r\n          float point_intensity = clamp(12000.0 / (distance * distance), 0.0, 1.0) * diffuse;\r\n\r\n          gl_FragColor = vec4(ambient * fragColor.rgb + point_intensity * light.color * fragColor.rgb, fragColor.a);\r\n      }\r\n    `;\r\n\r\n    return initShaderProgram(gl, vsSource, fsSource);\r\n  }\r\n\r\n  _initBuffers(gl, maze) {\r\n    const positions = []\r\n    const normals = [];\r\n    const colors = [];\r\n    const indices = [];\r\n    let offset = 0;\r\n\r\n    const addSquareXY = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          left, top, base,\r\n          right, top, base,\r\n          right, bottom, base,\r\n          left, bottom, base\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareXZ = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          left, base, top,\r\n          right, base, top,\r\n          right, base, bottom,\r\n          left, base, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const addSquareYZ = (left, right, top, bottom, base, color, normal) => {\r\n      positions.push\r\n        (\r\n          base, left, top,\r\n          base, right, top,\r\n          base, right, bottom,\r\n          base, left, bottom\r\n        );\r\n      indices.push\r\n        (\r\n          offset + 0, offset + 1, offset + 2, offset + 0, offset + 2, offset + 3\r\n        );\r\n      offset += 4;\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          normals.push(normal[j]);\r\n        }\r\n      }\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          colors.push(color[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const floorColor = [0.52, 0.34, 0.14, 1];\r\n    const ceilingColor = [0.0, 1.0, 0.0, 1];\r\n    const wallColor_Top = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Bottom = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Left = [0.25, 0.5, 0.0, 1];\r\n    const wallColor_Right = [0.25, 0.5, 0.0, 1];\r\n\r\n    const floorNormal = [0.0, 0.0, 1.0];\r\n    const ceilingNormal = [0.0, 0.0, 1.0];\r\n    const wallNormal_Top = [0.0, -1.0, 0.0];\r\n    const wallNormal_Bottom = [0.0, 1.0, 0.0];\r\n    const wallNormal_Left = [-1.0, 0.0, 0.0];\r\n    const wallNormal_Right = [1.0, 0.0, 0.0];\r\n\r\n    const ofs_x = -maze.width / 2;\r\n    const ofs_y = -maze.height / 2;\r\n    for (let y = 0; y < maze.height; y++) {\r\n      for (let x = 0; x < maze.width; x++) {\r\n        const left = x + ofs_x;\r\n        const right = left + 1;\r\n        const top = y + ofs_y;\r\n        const bottom = top + 1;\r\n\r\n        if (maze.data[y][x] === 0) {\r\n          addSquareXY(left, right, top, bottom, 0.0, floorColor, floorNormal);\r\n        } else {\r\n          addSquareXY(left, right, top, bottom, 1.0, ceilingColor, ceilingNormal);\r\n\r\n          if (y === 0 || maze.data[y - 1][x] === 0) {\r\n            addSquareXZ(left, right, 0.0, 1.0, top, wallColor_Top, wallNormal_Top);\r\n          }\r\n\r\n          if (x === 0 || maze.data[y][x - 1] === 0) {\r\n            addSquareYZ(bottom, top, 0.0, 1.0, left, wallColor_Left, wallNormal_Left);\r\n          }\r\n\r\n          if (y === maze.height - 1 || maze.data[y + 1][x] === 0) {\r\n            addSquareXZ(right, left, 0.0, 1.0, bottom, wallColor_Bottom, wallNormal_Bottom);\r\n          }\r\n\r\n          if (x === maze.width - 1 || maze.data[y][x + 1] === 0) {\r\n            addSquareYZ(top, bottom, 0.0, 1.0, right, wallColor_Right, wallNormal_Right);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n    const normalBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\r\n\r\n    const colorBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n    const indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n    return { position: positionBuffer, normal: normalBuffer, color: colorBuffer, indices: indexBuffer, vertexCount: indices.length };\r\n  }\r\n\r\n  _freeBuffers(gl, buffers) {\r\n    gl.deleteBuffer(buffers.position);\r\n    gl.deleteBuffer(buffers.color);\r\n    gl.deleteBuffer(buffers.indices);\r\n  }\r\n}\r\n\r\nexport default MazeModel;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives';\r\nimport AnimatedGrid from '../lib/AnimatedGrid';\r\nimport { createMaze, createDungeon } from '../lib/maze';\r\nimport { drawGrid } from '../lib/drawing';\r\nimport MazeScene from '../scenes/MazeScene';\r\nimport MazeModel from '../models/MazeModel';\r\nimport MazeModelPerPixel from '../models/MazeModelPerPixel';\r\n\r\nconst size = 69;\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scenes = [\r\n      new MazeScene(MazeModel),\r\n      new MazeScene(MazeModelPerPixel)\r\n    ];\r\n\r\n    const data = [];\r\n    for (let i = 0; i < size; i++) {\r\n      data.push(Array(size).fill(1));\r\n    }\r\n\r\n    this.grid = new AnimatedGrid(data, 12);\r\n\r\n    this.state = {\r\n      render3D: false,\r\n      sceneIndex: 0,\r\n      running: false,\r\n      rendering: false\r\n    };\r\n\r\n    this.run = this.run.bind(this);\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onClickRenderMode = this.onClickRenderMode.bind(this);\r\n    this.onClickCanvas = this.onClickCanvas.bind(this);\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvas3D;\r\n    this.gl = canvas.getContext('webgl');\r\n    if (this.gl === null) {\r\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    } else {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n      this.gl.cullFace(this.gl.BACK);\r\n      const maze = { width: size, height: size, data: this.grid.getData() };\r\n      this.scenes[0].initScene(this.gl, maze);\r\n      this.scenes[1].initScene(this.gl, maze);\r\n      this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      routine(this._clone(this.grid.getData()), this.grid.initialize, this.grid.update);\r\n      this.setState({ running: false });\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(createDungeon);\r\n  }\r\n\r\n  onClickRenderMode() {\r\n    this.setState({\r\n      render3D: !this.state.render3D\r\n    });\r\n  }\r\n\r\n  onClickCanvas() {\r\n    this.setState({\r\n      sceneIndex: 1 - this.state.sceneIndex\r\n    });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    const deltaTime = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    const { animating, data } = this.grid.animate(timeStamp);\r\n    if (!animating && !this.state.running) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    if (this.state.render3D) {\r\n      this.scenes[this.state.sceneIndex].drawScene(this.gl, { width: size, height: size, data });\r\n      for (let i = 0; i < this.scenes.length; i++) {\r\n        this.scenes[i].animateScene(deltaTime);\r\n      }\r\n    } else {\r\n      drawGrid(this.canvas2D, data, ['black', 'sienna']);\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  _clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this._clone(item) : item);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-2 mb-2\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n              <Button styles=\"primary\" onClick={this.onClickRenderMode}>{this.state.render3D ? 'Switch To 2D' : 'Switch To 3D'}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className={this.state.render3D ? 'canvas' : 'canvas none'} ref={elem => this.canvas3D = elem} onClick={this.onClickCanvas} />\r\n        <canvas className={this.state.render3D ? 'canvas none' : 'canvas'} ref={elem => this.canvas2D = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}