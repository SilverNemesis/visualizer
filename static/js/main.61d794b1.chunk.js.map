{"version":3,"sources":["primitives/Section.js","primitives/Container.js","primitives/Row.js","primitives/Col.js","primitives/Button.js","primitives/NavBar.js","primitives/NavBarToggler.js","primitives/NavBarNav.js","components/Navigation.js","components/HomePage.js","lib/Drawing.js","lib/Sort.js","components/SortPage.js","lib/Maze.js","components/MazePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Section","children","className","none","grow","outer","inner","center","attributes","classes","push","join","Container","fluid","Row","Col","col","Array","isArray","reduce","x","undefined","Button","styles","split","primary","includes","secondary","success","danger","warning","info","light","dark","link","outline","large","small","block","stylesToClass","NavBar","vertical","medium","extralarge","NavBarToggler","expanded","props","Fragment","type","aria-expanded","aria-label","NavBarNav","Navigation","state","onClickExpand","bind","this","setState","to","onClick","React","Component","HomePage","style","color","Drawing","canvas","data","n","length","rect","getBoundingClientRect","w","width","h","height","r","window","devicePixelRatio","step","Math","floor","barWidth","ctx","getContext","clearRect","fillStyle","i","barHeight","fillRect","colors","m","xstep","ystep","y","Sort","j","t","initialize","update","random","swap","count","key","merge","start","mid","end","start2","value","index","sort","l","partition","low","high","pivot","a","async","SortPage","running","rendering","queue","drawing","done","renderCanvas","shuffleAction","reverseAction","bubbleSortAction","insertionSortAction","mergeSortAction","quickSortAction","frame","requestAnimationFrame","cancelAnimationFrame","clone","change","timeStamp","shuffle","reverse","bubbleSort","insertionSort","mergeSort","quickSort","elapsed","updates","shift","drawBars","row","disabled","ref","elem","directions","Maze","createMaze","createDungeon","_createMaze","_addRooms","_carveWithRegion","_reset","_carve","my","mx","regions","fill","region","_connectRegions","_removeDeadEnds","lastDir","carve","cells","cell","posCells","dir","_canCarve","c1","_addDir","c2","pop","numRoomTries","roomExtraSize","rooms","size","_range","rectangularity","room","overlaps","other","_isOverlapped","xOffset","yOffset","connectors","merged","openRegions","connector","map","dest","sources","slice","filter","con","abs","exits","_fill","pos","_isInBounds","nxt","len","min","max","pri","sec","MazePage","screenWidth","screen","screenHeight","maze","run","onClickCreateMaze","onClickCreateDungeon","onResize","addEventListener","removeEventListener","items","item","routine","drawGrid","col1","col2","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61d794b1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Section = ({ children, className, none, grow, outer, inner, center, ...attributes }) => {\r\n    const classes = []\r\n    if (!none) {\r\n        classes.push('section')\r\n        if (outer) classes.push('section-outer')\r\n        else if (inner) classes.push('section-inner')\r\n        else if (grow) classes.push('section-grow')\r\n        if (center) classes.push('section-center')\r\n    }\r\n    if (className) classes.push(className)\r\n    return (\r\n        <div className={classes.join(' ')} {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\n\r\nconst Container = ({ children, className, fluid, ...attributes }) => {\r\n    const classes = [fluid ? 'container-fluid' : 'container']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Container","import React from 'react'\r\n\r\nconst Row = ({ children, className, ...attributes }) => {\r\n    const classes = ['row']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Row","import React from 'react'\r\n\r\nconst Col = ({ children, className, col, ...attributes }) => {\r\n    const classes = [col ? (Array.isArray(col) ? (col.reduce((x) => (x ? (x += ' col-' + col) : (x = 'col-' + col)), undefined)) : ('col-' + col)) : ('col')]\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default Col","import React from 'react'\r\nimport { isArray } from 'util';\r\n\r\nconst stylesToClass = (styles) => {\r\n    if (!isArray(styles)) {\r\n        styles = styles.split(' ')\r\n    }\r\n\r\n    const primary = styles.includes('primary')\r\n    const secondary = styles.includes('secondary')\r\n    const success = styles.includes('success')\r\n    const danger = styles.includes('danger')\r\n    const warning = styles.includes('warning')\r\n    const info = styles.includes('info')\r\n    const light = styles.includes('light')\r\n    const dark = styles.includes('dark')\r\n    const link = styles.includes('link')\r\n    const outline = styles.includes('outline')\r\n    const large = styles.includes('large')\r\n    const small = styles.includes('small')\r\n    const block = styles.includes('block')\r\n\r\n    const classes = ['btn']\r\n    if (primary) outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    else if (secondary) outline ? classes.push('btn-outline-secondary') : classes.push('btn-secondary')\r\n    else if (success) outline ? classes.push('btn-outline-success') : classes.push('btn-success')\r\n    else if (danger) outline ? classes.push('btn-outline-danger') : classes.push('btn-danger')\r\n    else if (warning) outline ? classes.push('btn-outline-warning') : classes.push('btn-warning')\r\n    else if (info) outline ? classes.push('btn-outline-info') : classes.push('btn-info')\r\n    else if (light) outline ? classes.push('btn-outline-light') : classes.push('btn-light')\r\n    else if (dark) outline ? classes.push('btn-outline-dark') : classes.push('btn-dark')\r\n    else if (link) outline ? classes.push('btn-outline-link') : classes.push('btn-link')\r\n    else outline ? classes.push('btn-outline-primary') : classes.push('btn-primary')\r\n    if (large) classes.push('btn-lg')\r\n    if (small) classes.push('btn-sm')\r\n    if (block) classes.push('btn-block')\r\n\r\n    return classes\r\n}\r\n\r\nconst Button = ({ children, className, styles, ...attributes }) => {\r\n    const classes = stylesToClass(styles)\r\n    if (className) classes.push(className)\r\n    return (<button className={classes.join(' ')} {...attributes}>{children}</button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst NavBar = ({ children, className, vertical, small, medium, large, extralarge, primary, secondary, success, danger, warning, info, light, dark, ...attributes }) => {\r\n    const classes = ['navbar']\r\n    if (!vertical) {\r\n        if (small) classes.push('navbar-expand-sm')\r\n        else if (medium) classes.push('navbar-expand-md')\r\n        else if (large) classes.push('navbar-expand-lg')\r\n        else if (extralarge) classes.push('navbar-expand-xl')\r\n        else classes.push('navbar-expand-sm')\r\n    }\r\n    if (primary) classes.push('navbar-primary')\r\n    else if (secondary) classes.push('navbar-secondary')\r\n    else if (success) classes.push('navbar-success')\r\n    else if (danger) classes.push('navbar-danger')\r\n    else if (warning) classes.push('navbar-warning')\r\n    else if (info) classes.push('navbar-info')\r\n    else if (light) classes.push('navbar-light')\r\n    else if (dark) classes.push('navbar-dark')\r\n    if (light) classes.push('bg-light')\r\n    else if (dark) classes.push('bg-dark')\r\n    else classes.push('bg-light')\r\n    if (className) classes.push(className)\r\n    return (<nav className={classes.join(' ')} {...attributes}>{children}</nav>)\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst NavBarToggler = ({ children, expanded, ...props }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"navbar-toggler\" type=\"button\" aria-expanded={expanded} aria-label=\"Toggle navigation\" {...props}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className={'collapse navbar-collapse' + (expanded ? ' show' : '')}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavBarToggler","import React from 'react'\r\n\r\nconst NavBarNav = ({ children, className, ...attributes }) => {\r\n    const classes = ['navbar-nav']\r\n    if (className) classes.push(className)\r\n    return (<div className={classes.join(' ')} {...attributes}>{children}</div>)\r\n}\r\n\r\nexport default NavBarNav","import React from 'react'\r\nimport { NavBar, NavBarToggler, NavBarNav } from '../primitives'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.onClickExpand = this.onClickExpand.bind(this)\r\n    }\r\n\r\n    onClickExpand() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar large dark>\r\n                <Link to=\"/\" className=\"navbar-brand\"><h1>Visualizer</h1></Link>\r\n                <NavBarToggler expanded={this.state.expanded} onClick={this.onClickExpand}>\r\n                    <NavBarNav>\r\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        <Link to=\"/sort\" className=\"nav-link\">Sort</Link>\r\n                        <Link to=\"/maze\" className=\"nav-link\">Maze</Link>\r\n                    </NavBarNav>\r\n                </NavBarToggler>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst HomePage = () => {\r\n  const code = `<Section outer>\r\n  <Section>\r\n    <Navigation />\r\n  </Section>\r\n  <Section grow center>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/sort\" component={Sort} />\r\n    <Route path=\"/maze\" component={MazePage} />\r\n  </Section>\r\n</Section>`\r\n  return (\r\n    <pre style={{ color: 'black' }}><code>{code}</code></pre>\r\n  )\r\n}\r\n\r\nexport default HomePage","class Drawing {\r\n  drawBars(canvas, data) {\r\n    const n = data.length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    const r = window.devicePixelRatio;\r\n    canvas.width = w * r;\r\n    canvas.height = h * r;\r\n    const step = Math.floor(w / n) * .9;\r\n    const barWidth = Math.floor(step * .8);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    ctx.fillStyle = 'black'\r\n    for (let i = 0; i < n; i++) {\r\n      const barHeight = Math.floor((data[i] + 1) / 100 * .8 * h);\r\n      ctx.fillRect(.05 * w + i * step, .9 * h - barHeight, barWidth, barHeight);\r\n    }\r\n  }\r\n\r\n  drawGrid(canvas, data, colors) {\r\n    const n = data.length;\r\n    const m = data[0].length;\r\n    const rect = canvas.getBoundingClientRect()\r\n    const w = rect.width;\r\n    const h = rect.height;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const xstep = Math.floor(w / m);\r\n    const ystep = Math.floor(h / n);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, w, h);\r\n    for (let y = 0; y < n; y++) {\r\n      for (let x = 0; x < m; x++) {\r\n        ctx.fillStyle = colors[data[y][x]];\r\n        ctx.fillRect(x * xstep, y * ystep, xstep, ystep);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Drawing;\r\n","class Sort {\r\n  swap(data, i, j) {\r\n    const t = data[i];\r\n    data[i] = data[j];\r\n    data[j] = t;\r\n  }\r\n\r\n  shuffle(data, initialize, update) {\r\n    const n = data.length;\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      this.swap(data, i, j);\r\n      update([i, data[i], j, data[j]]);\r\n    }\r\n  }\r\n\r\n  reverse(data, initialize, update) {\r\n    const n = data.length;\r\n    for (let i = 0; i < n / 2; i++) {\r\n      const j = n - i - 1;\r\n      this.swap(data, i, j);\r\n      update([i, data[i], j, data[j]]);\r\n    }\r\n  }\r\n\r\n  bubbleSort(data, initialize, update) {\r\n    const n = data.length - 1;\r\n    for (let i = 0; i < n; i++) {\r\n      let count = 0;\r\n      for (let j = 0; j < n - i; j++) {\r\n        if (data[j] > data[j + 1]) {\r\n          this.swap(data, j, j + 1);\r\n          update([j, data[j], j + 1, data[j + 1]]);\r\n          count++;\r\n        }\r\n      }\r\n      if (count === 0) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort(data, initialize, update) {\r\n    const n = data.length;\r\n    for (let i = 1; i < n; i++) {\r\n      const key = data[i];\r\n      let j = i - 1;\r\n      while (j >= 0 && data[j] > key) {\r\n        data[j + 1] = data[j];\r\n        update([j + 1, data[j + 1]]);\r\n        j = j - 1;\r\n      }\r\n      data[j + 1] = key;\r\n      update([j + 1, data[j + 1]]);\r\n    }\r\n  }\r\n\r\n  mergeSort(data, initialize, update) {\r\n    const sort = (data, l, r) => {\r\n      if (l < r) {\r\n        const m = Math.floor(l + (r - l) / 2);\r\n        sort(data, l, m);\r\n        sort(data, m + 1, r);\r\n        merge(data, l, m, r);\r\n      }\r\n    }\r\n    const merge = (data, start, mid, end) => {\r\n      let start2 = mid + 1;\r\n      if (data[mid] <= data[start2]) {\r\n        return;\r\n      }\r\n      while (start <= mid && start2 <= end) {\r\n        if (data[start] <= data[start2]) {\r\n          start++;\r\n        }\r\n        else {\r\n          const value = data[start2];\r\n          let index = start2;\r\n          while (index !== start) {\r\n            data[index] = data[index - 1];\r\n            update([index, data[index]]);\r\n            index--;\r\n          }\r\n          data[start] = value;\r\n          update([start, data[start]]);\r\n          start++;\r\n          mid++;\r\n          start2++;\r\n        }\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n  }\r\n\r\n  quickSort(data, initialize, update) {\r\n    const partition = (data, low, high) => {\r\n      if (high - low > 2) {\r\n        const mid = Math.floor(low + (high - low) / 2);\r\n        if (data[low] < data[mid] && data[mid] < data[high]) {\r\n          this.swap(data, mid, high);\r\n          update([mid, data[mid], high, data[high]]);\r\n        }\r\n        else if (data[low] > data[mid] && data[mid] > data[high]) {\r\n          this.swap(data, mid, high);\r\n          update([mid, data[mid], high, data[high]]);\r\n        }\r\n      }\r\n      const pivot = data[high];\r\n      let i = (low - 1);\r\n      for (let j = low; j <= high - 1; j++) {\r\n        if (data[j] < pivot) {\r\n          i++;\r\n          this.swap(data, i, j);\r\n          update([i, data[i], j, data[j]]);\r\n        }\r\n      }\r\n      this.swap(data, i + 1, high);\r\n      update([i + 1, data[i + 1], high, data[high]]);\r\n      return (i + 1);\r\n    }\r\n    const sort = async (data, low, high) => {\r\n      if (low < high) {\r\n        const mid = partition(data, low, high);\r\n        sort(data, low, mid - 1);\r\n        sort(data, mid + 1, high);\r\n      }\r\n    }\r\n    sort(data, 0, data.length - 1);\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport Drawing from '../lib/Drawing'\r\nimport Sort from '../lib/Sort'\r\n\r\nclass SortPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      data.push(i);\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false\r\n    };\r\n    this.data = data;\r\n    this.queue = [];\r\n    this.drawing = new Drawing();\r\n    this.sort = new Sort();\r\n    this.initialize = this.initialize.bind(this);\r\n    this.update = this.update.bind(this)\r\n    this.done = this.done.bind(this)\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n    this.shuffleAction = this.shuffleAction.bind(this);\r\n    this.reverseAction = this.reverseAction.bind(this);\r\n    this.bubbleSortAction = this.bubbleSortAction.bind(this);\r\n    this.insertionSortAction = this.insertionSortAction.bind(this);\r\n    this.mergeSortAction = this.mergeSortAction.bind(this);\r\n    this.quickSortAction = this.quickSortAction.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  initialize(data) {\r\n    this.data = this.clone(data);\r\n  }\r\n\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  done() {\r\n    this.setState({\r\n      running: false\r\n    });\r\n  }\r\n\r\n  shuffleAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.shuffle([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  reverseAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.reverse([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  bubbleSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.bubbleSort([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  insertionSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.insertionSort([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  mergeSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.mergeSort([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  quickSortAction() {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      this.sort.quickSort([...this.data], this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 8) {\r\n      elapsed -= 8;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 2) {\r\n        this.data[updates[i]] = updates[i + 1];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    this.drawing.drawBars(this.canvas, this.data);\r\n    if (!this.state.running && this.queue.length === 0) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"mt-5\">\r\n          <Row row=\"sm\">\r\n            <Col col=\"sm\" className=\"d-flex justify-content-around align-items-center\">\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.shuffleAction}>Shuffle</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.reverseAction}>Reverse</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.bubbleSortAction}>Bubble Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.insertionSortAction}>Insertion Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.mergeSortAction}>Merge Sort</Button>\r\n              <Button styles=\"primary\" disabled={this.state.running || this.state.rendering} onClick={this.quickSortAction}>Quick Sort</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <canvas className=\"flex-grow-1\" ref={elem => this.canvas = elem} />\r\n      </Section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortPage;\r\n","const directions = [\r\n  { x: -1, y: 0 },\r\n  { x: 0, y: -1 },\r\n  { x: 1, y: 0 },\r\n  { x: 0, y: 1 }\r\n];\r\n\r\nconst windiness = 0.8;\r\n\r\nclass Maze {\r\n  constructor() {\r\n    this.createMaze = this.createMaze.bind(this);\r\n    this.createDungeon = this.createDungeon.bind(this);\r\n\r\n    this._createMaze = this._createMaze.bind(this);\r\n    this._addRooms = this._addRooms.bind(this);\r\n    this._carveWithRegion = this._carveWithRegion.bind(this);\r\n  }\r\n\r\n  createMaze(data, initialize, update) {\r\n    this._reset(data, 1);\r\n    initialize(data);\r\n    this._createMaze(data, update, this._carve, { x: 1, y: 1 });\r\n  }\r\n\r\n  createDungeon(data, initialize, update) {\r\n    this._reset(data, 1);\r\n    initialize(data);\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    this.regions = [];\r\n    for (let y = 0; y < my; y++) {\r\n      this.regions.push(Array(mx).fill(0))\r\n    }\r\n    this.region = 0;\r\n    this._addRooms(data, update, mx, my, 256, 4);\r\n    for (let y = 1; y < my; y += 2) {\r\n      for (let x = 1; x < mx; x += 2) {\r\n        if (data[y][x] === 0) {\r\n          continue;\r\n        }\r\n        this.region++;\r\n        this._createMaze(data, update, this._carveWithRegion, { x, y });\r\n      }\r\n    }\r\n    this._connectRegions(data, update, mx, my);\r\n    this._removeDeadEnds(data, update, mx, my);\r\n  }\r\n\r\n  _reset(data, value) {\r\n    const my = data.length;\r\n    for (let y = 0; y < my; y++) {\r\n      data[y].fill(value);\r\n    }\r\n  }\r\n\r\n  _createMaze(data, update, carve = this._carve, start) {\r\n    const my = data.length;\r\n    const mx = data[0].length;\r\n    const cells = [];\r\n    let lastDir;\r\n    carve(data, start);\r\n    update([start.x, start.y, data[start.y][start.x]]);\r\n    data[start.y][start.x] = 0;\r\n    cells.push(start);\r\n    while (cells.length > 0) {\r\n      const cell = cells[cells.length - 1];\r\n      const posCells = [];\r\n      for (let i = 0; i < directions.length; i++) {\r\n        const dir = directions[i];\r\n        if (this._canCarve(data, mx, my, cell, dir)) {\r\n          posCells.push(dir);\r\n        }\r\n      }\r\n      if (posCells.length > 0) {\r\n        let dir;\r\n        if (posCells.includes(lastDir) && Math.random() > windiness) {\r\n          dir = lastDir;\r\n        } else {\r\n          dir = posCells[Math.floor(Math.random() * posCells.length)];\r\n        }\r\n        const c1 = this._addDir(cell, dir, 1);\r\n        const c2 = this._addDir(cell, dir, 2);\r\n        carve(data, c1);\r\n        carve(data, c2);\r\n        update([c1.x, c1.y, data[c1.y][c1.x], c2.x, c2.y, data[c2.y][c2.x]]);\r\n        cells.push(this._addDir(cell, dir, 2));\r\n        lastDir = dir;\r\n      } else {\r\n        cells.pop();\r\n        lastDir = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  _addRooms(data, update, mx, my, numRoomTries, roomExtraSize) {\r\n    const rooms = [];\r\n    for (let i = 0; i < numRoomTries; i++) {\r\n      const size = (this._range(1, 3 + roomExtraSize) << 1) + 1;\r\n      let rectangularity = this._range(0, 1 + size >> 1) << 1;\r\n      let width = size;\r\n      let height = size;\r\n      if (this._range(0, 1) === 0) {\r\n        width += rectangularity;\r\n      } else {\r\n        height += rectangularity;\r\n      }\r\n      let x = (this._range(0, (mx - width - 1) >> 1) << 1) + 1;\r\n      let y = (this._range(0, (my - height - 1) >> 1) << 1) + 1;\r\n      const room = { x, y, width, height };\r\n      let overlaps = false;\r\n      for (let j = 0; j < rooms.length; j++) {\r\n        const other = rooms[j];\r\n        if (this._isOverlapped(room, other)) {\r\n          overlaps = true;\r\n          break;\r\n        }\r\n      }\r\n      if (overlaps) {\r\n        continue;\r\n      }\r\n      rooms.push(room);\r\n      this.region++;\r\n      for (let xOffset = 0; xOffset < width; xOffset++) {\r\n        const updates = [];\r\n        for (let yOffset = 0; yOffset < height; yOffset++) {\r\n          this._carveWithRegion(data, { x: x + xOffset, y: y + yOffset });\r\n          updates.push(x + xOffset, y + yOffset, data[y + yOffset][x + xOffset])\r\n        }\r\n        update(updates);\r\n      }\r\n    }\r\n  }\r\n\r\n  _connectRegions(data, update, mx, my) {\r\n    let connectors = [];\r\n    for (let y = 1; y < my - 1; y++) {\r\n      for (let x = 1; x < mx - 1; x++) {\r\n        if (data[y][x] !== 1) {\r\n          continue;\r\n        }\r\n        const regions = [];\r\n        for (let i = 0; i < directions.length; i++) {\r\n          const dir = directions[i];\r\n          const region = this.regions[y + dir.y][x + dir.x];\r\n          if (region !== 0 && !regions.includes(region)) {\r\n            regions.push(region);\r\n          }\r\n        }\r\n        if (regions.length < 2) {\r\n          continue;\r\n        }\r\n        connectors.push({ x, y, regions })\r\n      }\r\n    }\r\n    const merged = [0];\r\n    let openRegions = [];\r\n    for (var i = 1; i <= this.region; i++) {\r\n      merged.push(i);\r\n      openRegions.push(i);\r\n    }\r\n    while (openRegions.length > 1) {\r\n      const index = this._range(0, connectors.length - 1)\r\n      const connector = connectors[index];\r\n      this._carve(data, { x: connector.x, y: connector.y });\r\n      update([connector.x, connector.y, data[connector.y][connector.x]]);\r\n      const regions = connector.regions.map((region) => merged[region]);\r\n      const dest = regions[0];\r\n      const sources = regions.slice(1);\r\n      for (let i = 0; i <= this.region; i++) {\r\n        if (sources.includes(i)) {\r\n          merged[i] = dest;\r\n        }\r\n      }\r\n      openRegions = openRegions.filter((region) => {\r\n        return !sources.includes(region);\r\n      });\r\n      connectors = connectors.filter((con) => {\r\n        if (Math.abs(con.x - connector.x) <= 1 && Math.abs(con.y - connector.y) <= 1) {\r\n          return false;\r\n        }\r\n        con.regions = con.regions.map((region) => merged[region]);\r\n        for (let i = 1; i < con.regions.length; i++) {\r\n          if (con.regions[i] !== con.regions[0]) {\r\n            return true;\r\n          }\r\n        }\r\n        if (this._range(0, 99) === 0) {\r\n          this._carve(data, { x: con.x, y: con.y });\r\n          update([con.x, con.y, data[con.y][con.x]]);\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n\r\n  _removeDeadEnds(data, update, mx, my) {\r\n    let done = false;\r\n    while (!done) {\r\n      done = true;\r\n      for (let y = 1; y < my - 1; y++) {\r\n        for (let x = 1; x < mx - 1; x++) {\r\n          if (data[y][x] === 1) {\r\n            continue;\r\n          }\r\n          let exits = 0;\r\n          for (let i = 0; i < directions.length; i++) {\r\n            const dir = directions[i];\r\n            if (data[y + dir.y][x + dir.x] !== 1) {\r\n              exits++;\r\n            }\r\n          }\r\n          if (exits !== 1) {\r\n            continue;\r\n          }\r\n          done = false;\r\n          this._fill(data, { x, y });\r\n          update([x, y, data[y][x]]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _fill(data, pos) {\r\n    data[pos.y][pos.x] = 1;\r\n  }\r\n\r\n  _carve(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n  }\r\n\r\n  _carveWithRegion(data, pos) {\r\n    data[pos.y][pos.x] = 0;\r\n    this.regions[pos.y][pos.x] = this.region;\r\n  }\r\n\r\n  _canCarve(data, mx, my, pos, dir) {\r\n    if (!this._isInBounds(mx, my, this._addDir(pos, dir, 3))) {\r\n      return false;\r\n    }\r\n    const nxt = this._addDir(pos, dir, 2);\r\n    return data[nxt.y][nxt.x] === 1;\r\n  }\r\n\r\n  _isInBounds(mx, my, pos) {\r\n    if (pos.x < 0 || pos.y < 0 || pos.x >= mx || pos.y >= my) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _addDir(pos, dir, len) {\r\n    return {\r\n      x: pos.x + dir.x * len,\r\n      y: pos.y + dir.y * len\r\n    }\r\n  }\r\n\r\n  _range(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  _isOverlapped(pri, sec) {\r\n    if (pri.x > sec.x + sec.width || sec.x > pri.x + pri.width) {\r\n      return false;\r\n    }\r\n    if (pri.y > sec.y + sec.height || sec.y > pri.y + pri.height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Maze;\r\n","import React from 'react';\r\nimport { Section, Container, Row, Col, Button } from '../primitives'\r\nimport Drawing from '../lib/Drawing'\r\nimport Maze from '../lib/Maze'\r\n\r\nclass MazePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const data = []\r\n    for (let i = 0; i < 99; i++) {\r\n      data.push(Array(99).fill(1));\r\n    }\r\n    this.state = {\r\n      running: false,\r\n      rendering: false,\r\n      screenWidth: window.screen.width,\r\n      screenHeight: window.screen.height\r\n    };\r\n\r\n    this.data = data;\r\n    this.queue = [];\r\n\r\n    this.drawing = new Drawing();\r\n    this.maze = new Maze();\r\n\r\n    this.run = this.run.bind(this)\r\n    this.initialize = this.initialize.bind(this)\r\n    this.update = this.update.bind(this)\r\n    this.done = this.done.bind(this)\r\n\r\n    this.onClickCreateMaze = this.onClickCreateMaze.bind(this);\r\n    this.onClickCreateDungeon = this.onClickCreateDungeon.bind(this);\r\n    this.onResize = this.onResize.bind(this)\r\n\r\n    this.renderCanvas = this.renderCanvas.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize)\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize)\r\n    window.cancelAnimationFrame(this.frame);\r\n  }\r\n\r\n  clone(items) {\r\n    return items.map(item => Array.isArray(item) ? this.clone(item) : item);\r\n  }\r\n\r\n  run(routine) {\r\n    this.setState({ running: true, rendering: true }, () => {\r\n      this.timeStamp = undefined;\r\n      routine(this.clone(this.data), this.initialize, this.update);\r\n      this.done();\r\n    });\r\n  }\r\n\r\n  initialize(data) {\r\n    this.data = this.clone(data);\r\n  }\r\n\r\n  update(change) {\r\n    this.queue.push(change);\r\n  }\r\n\r\n  done() {\r\n    this.setState({\r\n      running: false\r\n    });\r\n  }\r\n\r\n  onClickCreateMaze() {\r\n    this.run(this.maze.createMaze);\r\n  }\r\n\r\n  onClickCreateDungeon() {\r\n    this.run(this.maze.createDungeon);\r\n  }\r\n\r\n  onResize() {\r\n    if (window.screen.width !== this.width || window.screen.height !== this.height) {\r\n      this.width = window.screen.width;\r\n      this.height = window.screen.height;\r\n      this.setState({ screenWidth: this.width, screenHeight: this.height });\r\n    }\r\n  }\r\n\r\n  renderCanvas(timeStamp) {\r\n    if (!this.timeStamp) {\r\n      this.timeStamp = timeStamp;\r\n    }\r\n    let elapsed = timeStamp - this.timeStamp;\r\n    this.timeStamp = timeStamp;\r\n    while (this.queue.length > 0 && elapsed >= 6) {\r\n      elapsed -= 6;\r\n      const updates = this.queue.shift();\r\n      for (let i = 0; i < updates.length; i += 3) {\r\n        this.data[updates[i + 1]][updates[i]] = updates[i + 2];\r\n      }\r\n    }\r\n    this.timeStamp -= elapsed;\r\n    this.drawing.drawGrid(this.canvas, this.data, ['black', 'sienna']);\r\n    if (!this.state.running && this.queue.length === 0) {\r\n      this.setState({ rendering: false });\r\n    }\r\n    this.frame = window.requestAnimationFrame(this.renderCanvas);\r\n  }\r\n\r\n  render() {\r\n    let col1 = \"sm-6\";\r\n    let col2 = \"sm-6\";\r\n    if (this.state.screenWidth / this.state.screenHeight < 16 / 9) {\r\n      col1 = \"sm-8\";\r\n      col2 = \"sm-4\";\r\n    }\r\n    return (\r\n      <Section inner>\r\n        <Container fluid className=\"h-100 mt-5\">\r\n          <Row className=\"h-100\">\r\n            <Col col={col1}>\r\n              <canvas className=\"w-100 h-100\" ref={elem => this.canvas = elem} />\r\n            </Col>\r\n            <Col col={col2} className=\"d-flex flex-column justify-content-around align-items-start\">\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateMaze}>Create Maze</Button>\r\n              <Button styles=\"primary large\" disabled={this.state.running || this.state.rendering} onClick={this.onClickCreateDungeon}>Create Dungeon</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazePage;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport { Section } from '../primitives'\r\nimport HomePage from './HomePage'\r\nimport SortPage from './SortPage'\r\nimport MazePage from './MazePage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Section outer>\r\n      <Section>\r\n        <Navigation />\r\n      </Section>\r\n      <Section grow center>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/sort\" component={SortPage} />\r\n        <Route path=\"/maze\" component={MazePage} />\r\n      </Section>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename=\"/visualizer\">\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}